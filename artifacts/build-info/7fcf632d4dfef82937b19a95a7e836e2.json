{"id":"7fcf632d4dfef82937b19a95a7e836e2","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"base64-sol/base64.sol":{"content":"// SPDX-License-Identifier: MIT\n\n/// @title Base64\n/// @author Brecht Devos - <brecht@loopring.org>\n/// @notice Provides a function for encoding some bytes in base64\nlibrary Base64 {\n    string internal constant TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    function encode(bytes memory data) internal pure returns (string memory) {\n        if (data.length == 0) return '';\n        \n        // load the table into memory\n        string memory table = TABLE;\n\n        // multiply by 4/3 rounded up\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\n\n        // add some extra buffer at the end required for the writing\n        string memory result = new string(encodedLen + 32);\n\n        assembly {\n            // set the actual output length\n            mstore(result, encodedLen)\n            \n            // prepare the lookup table\n            let tablePtr := add(table, 1)\n            \n            // input ptr\n            let dataPtr := data\n            let endPtr := add(dataPtr, mload(data))\n            \n            // result ptr, jump over length\n            let resultPtr := add(result, 32)\n            \n            // run over the input, 3 bytes at a time\n            for {} lt(dataPtr, endPtr) {}\n            {\n               dataPtr := add(dataPtr, 3)\n               \n               // read 3 bytes\n               let input := mload(dataPtr)\n               \n               // write 4 characters\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(18, input), 0x3F)))))\n               resultPtr := add(resultPtr, 1)\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(12, input), 0x3F)))))\n               resultPtr := add(resultPtr, 1)\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr( 6, input), 0x3F)))))\n               resultPtr := add(resultPtr, 1)\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(        input,  0x3F)))))\n               resultPtr := add(resultPtr, 1)\n            }\n            \n            // padding with '='\n            switch mod(mload(data), 3)\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\n        }\n        \n        return result;\n    }\n}\n"},"contracts/NftPilarofEd.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"base64-sol/base64.sol\";\n\ncontract NftPilarofEducation is ERC721 {\n    string public constant TOKEN_IMAGE_URI =\n        \"https://ipfs.io/ipfs/QmUeXV63VvrYXwD65gtEz6WFCJxo62PHJ5pCuifC6qm6uU\";\n    uint256 internal s_tokenCounter;\n    mapping(address => bool) public s_hasNft;\n\n    constructor()\n        ERC721(\"StreamTrivia\",\"level 1\")\n            \n        \n        \n    {\n        s_tokenCounter = 0;\n    }\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"data:application/json;base64,\";\n    }\n\n    function _mintByAddress(address addr) internal {\n        _safeMint(addr, s_tokenCounter);\n        s_tokenCounter = s_tokenCounter + 1;\n        s_hasNft[addr] = true;\n    }\n\n    function _mintNft() internal {\n        _safeMint(msg.sender, s_tokenCounter);\n        s_tokenCounter = s_tokenCounter + 1;\n        s_hasNft[msg.sender] = true;\n    }\n\n    function tokenURI(\n        uint256 /* tokenId */\n    ) public view override returns (string memory) {\n        return\n            string(\n                abi.encodePacked(\n                    _baseURI(),\n                    Base64.encode(\n                        bytes(\n                            abi.encodePacked(\n                                '{\"name\":\"',\n                                name(),\n                                '\", \"description\":\"You captured this NFT as part of the educational Stream!\", ',\n                                '\"attributes\": [{\"trait_type\": \"skills\", \"value\": 100}], \"image\":\"',\n                                TOKEN_IMAGE_URI,\n                                '\"}'\n                            )\n                        )\n                    )\n                )\n            );\n    }\n\n    function hasNft(address addr) public view returns (bool) {\n        return s_hasNft[addr];\n    }\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n}"},"contracts/streamTriviaDao.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\n\ninterface StreamDao {\n        function balanceOf(address, uint256) external view returns (uint256);\n    }\n\ncontract StreamTriviaDao {\n\n    address public owner;\n    uint256 nextProposal;\n    uint256[] public validTokens;\n    StreamDao daoContract;\n\n    constructor(){\n        owner = msg.sender;\n        nextProposal = 1;\n        daoContract = StreamDao(0xa7C03faa9504E5C3453F550339b2660C8b835D70);\n        validTokens = [0,1];\n    }\n\n    struct proposal{\n        uint256 id;\n        bool exists;\n        string description;\n        uint deadline;\n        uint256 votesUp;\n        uint256 votesDown;\n        address[] canVote;\n        uint256 maxVotes;\n        mapping(address => bool) voteStatus;\n        bool countConducted;\n        bool passed;\n    }\n\n    mapping(uint256 => proposal) public Proposals;\n\n    event proposalCreated(\n        uint256 id,\n        string description,\n        uint256 maxVotes,\n        address proposer\n    );\n\n    event newVote(\n        uint256 votesUp,\n        uint256 votesDown,\n        address voter,\n        uint256 proposal,\n        bool votedFor\n    );\n\n    event proposalCount(\n        uint256 id,\n        bool passed\n    );\n\n\n    function checkProposalEligibility(address _proposalist) private view returns (\n        bool\n    ){\n        for(uint i = 0; i < validTokens.length; i++){\n            if(daoContract.balanceOf(_proposalist, validTokens[i]) >= 1){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function checkVoteEligibility(uint256 _id, address _voter) private view returns (\n        bool\n    ){\n        for (uint256 i = 0; i < Proposals[_id].canVote.length; i++) {\n            if (Proposals[_id].canVote[i] == _voter) {\n            return true;\n            }\n        }\n        return false;\n    }\n\n\n    function createProposal(string memory _description, address[] memory _canVote) public {\n        require(checkProposalEligibility(msg.sender), \"Only NFT holders can put forth Proposals\");\n\n        proposal storage newProposal = Proposals[nextProposal];\n        newProposal.id = nextProposal;\n        newProposal.exists = true;\n        newProposal.description = _description;\n        newProposal.deadline = block.number + 100;\n        newProposal.canVote = _canVote;\n        newProposal.maxVotes = _canVote.length;\n\n        emit proposalCreated(nextProposal, _description, _canVote.length, msg.sender);\n        nextProposal++;\n    }\n\n\n    function voteOnProposal(uint256 _id, bool _vote) public {\n        require(Proposals[_id].exists, \"This Proposal does not exist\");\n        require(checkVoteEligibility(_id, msg.sender), \"You can not vote on this Proposal\");\n        require(!Proposals[_id].voteStatus[msg.sender], \"You have already voted on this Proposal\");\n        require(block.number <= Proposals[_id].deadline, \"The deadline has passed for this Proposal\");\n\n        proposal storage p = Proposals[_id];\n\n        if(_vote) {\n            p.votesUp++;\n        }else{\n            p.votesDown++;\n        }\n\n        p.voteStatus[msg.sender] = true;\n\n        emit newVote(p.votesUp, p.votesDown, msg.sender, _id, _vote);\n        \n    }\n\n    function countVotes(uint256 _id) public {\n        require(msg.sender == owner, \"Only Owner Can Count Votes\");\n        require(Proposals[_id].exists, \"This Proposal does not exist\");\n        require(block.number > Proposals[_id].deadline, \"Voting has not concluded\");\n        require(!Proposals[_id].countConducted, \"Count already conducted\");\n\n        proposal storage p = Proposals[_id];\n        \n        if(Proposals[_id].votesDown < Proposals[_id].votesUp){\n            p.passed = true;            \n        }\n\n        p.countConducted = true;\n\n        emit proposalCount(_id, p.passed);\n    }\n\n\n    function addTokenId(uint256 _tokenId) public {\n        require(msg.sender == owner, \"Only Owner Can Add Tokens\");\n\n        validTokens.push(_tokenId);\n    }\n    \n}"},"contracts/triviaStream.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"./NftPilarofEd.sol\";\n\ncontract StreamNft is NftPilarofEducation {\n    constructor() NftPilarofEducation() {}\n\n    function mintNft(uint256 value) public {\n        require(2 + value == 4, \"Wrong value!\");\n        _mintNft();\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"\n--> base64-sol/base64.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"","severity":"warning","sourceLocation":{"end":-1,"file":"base64-sol/base64.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1435],"Context":[1457],"ERC165":[1656],"ERC721":[944],"IERC165":[1668],"IERC721":[1060],"IERC721Metadata":[1105],"IERC721Receiver":[1078],"Math":[2533],"Strings":[1632]},"id":945,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":945,"sourceUnit":1061,"src":"132:23:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":945,"sourceUnit":1079,"src":"156:31:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":945,"sourceUnit":1106,"src":"188:42:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":945,"sourceUnit":1436,"src":"231:33:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":945,"sourceUnit":1458,"src":"265:33:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":945,"sourceUnit":1633,"src":"299:33:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":945,"sourceUnit":1657,"src":"333:46:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"647:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"647:7:0"},{"baseName":{"id":12,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1656,"src":"656:6:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"656:6:0"},{"baseName":{"id":14,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1060,"src":"664:7:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"664:7:0"},{"baseName":{"id":16,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1105,"src":"673:15:0"},"id":17,"nodeType":"InheritanceSpecifier","src":"673:15:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"381:246:0","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":944,"linearizedBaseContracts":[944,1105,1060,1656,1668,1457],"name":"ERC721","nameLocation":"637:6:0","nodeType":"ContractDefinition","nodes":[{"id":20,"libraryName":{"id":18,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1435,"src":"701:7:0"},"nodeType":"UsingForDirective","src":"695:26:0","typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":23,"libraryName":{"id":21,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":1632,"src":"732:7:0"},"nodeType":"UsingForDirective","src":"726:26:0","typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":25,"mutability":"mutable","name":"_name","nameLocation":"791:5:0","nodeType":"VariableDeclaration","scope":944,"src":"776:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:0","nodeType":"VariableDeclaration","scope":944,"src":"823:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":31,"mutability":"mutable","name":"_owners","nameLocation":"934:7:0","nodeType":"VariableDeclaration","scope":944,"src":"898:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":30,"keyType":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":35,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:0","nodeType":"VariableDeclaration","scope":944,"src":"992:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":34,"keyType":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":39,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:0","nodeType":"VariableDeclaration","scope":944,"src":"1093:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":38,"keyType":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":45,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:0","nodeType":"VariableDeclaration","scope":944,"src":"1199:71:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":44,"keyType":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":43,"keyType":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":42,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":61,"nodeType":"Block","src":"1446:57:0","statements":[{"expression":{"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":53,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"1456:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":54,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1464:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":56,"nodeType":"ExpressionStatement","src":"1456:13:0"},{"expression":{"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":57,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1479:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":58,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1489:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":60,"nodeType":"ExpressionStatement","src":"1479:17:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1277:108:0","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":62,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"name_","nameLocation":"1416:5:0","nodeType":"VariableDeclaration","scope":62,"src":"1402:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":47,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:0","nodeType":"VariableDeclaration","scope":62,"src":"1423:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":49,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1446:0:0"},"scope":944,"src":"1390:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1655,1667],"body":{"id":92,"nodeType":"Block","src":"1678:192:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":73,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"1707:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":75,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1727:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1060_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1060_$","typeString":"type(contract IERC721)"}],"id":74,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1060","typeString":"type(contract IERC721)"}},"id":77,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":79,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"1763:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":81,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1783:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1105_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1105_$","typeString":"type(contract IERC721Metadata)"}],"id":80,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1105","typeString":"type(contract IERC721Metadata)"}},"id":83,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":88,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"1851:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":86,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$944_$","typeString":"type(contract super ERC721)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1655,"src":"1827:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":91,"nodeType":"Return","src":"1688:175:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"1509:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":93,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:0","nodeType":"FunctionDefinition","overrides":{"id":69,"nodeType":"OverrideSpecifier","overrides":[{"id":67,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1656,"src":"1646:6:0"},{"id":68,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1668,"src":"1654:7:0"}],"src":"1637:25:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:0","nodeType":"VariableDeclaration","scope":93,"src":"1597:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":64,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":93,"src":"1672:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:0"},"scope":944,"src":"1570:300:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[985],"body":{"id":116,"nodeType":"Block","src":"2010:123:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":103,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2028:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:0","typeDescriptions":{}}},"id":107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":111,"nodeType":"ExpressionStatement","src":"2020:73:0"},{"expression":{"baseExpression":{"id":112,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2110:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":114,"indexExpression":{"id":113,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2120:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":101,"id":115,"nodeType":"Return","src":"2103:23:0"}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"1876:48:0","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":117,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:0","nodeType":"FunctionDefinition","overrides":{"id":98,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:0"},"parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"owner","nameLocation":"1956:5:0","nodeType":"VariableDeclaration","scope":117,"src":"1948:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":117,"src":"2001:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:0"},"scope":944,"src":"1929:204:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[993],"body":{"id":144,"nodeType":"Block","src":"2271:138:0","statements":[{"assignments":[127],"declarations":[{"constant":false,"id":127,"mutability":"mutable","name":"owner","nameLocation":"2289:5:0","nodeType":"VariableDeclaration","scope":144,"src":"2281:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":131,"initialValue":{"arguments":[{"id":129,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2306:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":128,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2297:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":133,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2332:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:0","typeDescriptions":{}}},"id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":141,"nodeType":"ExpressionStatement","src":"2324:56:0"},{"expression":{"id":142,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2397:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":125,"id":143,"nodeType":"Return","src":"2390:12:0"}]},"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"2139:46:0","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":145,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:0","nodeType":"FunctionDefinition","overrides":{"id":122,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:0"},"parameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:0","nodeType":"VariableDeclaration","scope":145,"src":"2207:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:0"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":145,"src":"2262:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:0"},"scope":944,"src":"2190:219:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1090],"body":{"id":154,"nodeType":"Block","src":"2540:29:0","statements":[{"expression":{"id":152,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2557:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":151,"id":153,"nodeType":"Return","src":"2550:12:0"}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"2415:51:0","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":155,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:0","nodeType":"FunctionDefinition","overrides":{"id":148,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:0"},"parameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"2484:2:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":155,"src":"2525:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":149,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:0"},"scope":944,"src":"2471:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1096],"body":{"id":164,"nodeType":"Block","src":"2704:31:0","statements":[{"expression":{"id":162,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2721:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":161,"id":163,"nodeType":"Return","src":"2714:14:0"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"2575:53:0","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":165,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:0","nodeType":"FunctionDefinition","overrides":{"id":158,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:0"},"parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"2648:2:0"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"2689:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:0"},"scope":944,"src":"2633:102:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1104],"body":{"id":203,"nodeType":"Block","src":"2889:188:0","statements":[{"expression":{"arguments":[{"id":175,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2914:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":174,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"2899:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"2899:23:0"},{"assignments":[179],"declarations":[{"constant":false,"id":179,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:0","nodeType":"VariableDeclaration","scope":203,"src":"2933:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":178,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":182,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":180,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2957:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:0"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":185,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"2990:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":183,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:0","typeDescriptions":{}}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:0","trueExpression":{"arguments":[{"arguments":[{"id":194,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"3036:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":195,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3045:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1515,"src":"3045:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":192,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":190,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:0","typeDescriptions":{}}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":173,"id":202,"nodeType":"Return","src":"2977:93:0"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2741:55:0","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":204,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:0","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:0"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:0","nodeType":"VariableDeclaration","scope":204,"src":"2819:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":204,"src":"2874:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":171,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:0"},"scope":944,"src":"2801:276:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":212,"nodeType":"Block","src":"3385:26:0","statements":[{"expression":{"hexValue":"","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":209,"id":211,"nodeType":"Return","src":"3395:9:0"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"3083:231:0","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":213,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:0","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"3336:2:0"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":213,"src":"3370:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":207,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:0"},"scope":944,"src":"3319:92:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1033],"body":{"id":255,"nodeType":"Block","src":"3538:336:0","statements":[{"assignments":[223],"declarations":[{"constant":false,"id":223,"mutability":"mutable","name":"owner","nameLocation":"3556:5:0","nodeType":"VariableDeclaration","scope":255,"src":"3548:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":228,"initialValue":{"arguments":[{"id":226,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3579:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":224,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"3564:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$944_$","typeString":"type(contract ERC721)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":145,"src":"3564:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":230,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3605:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":231,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3611:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":235,"nodeType":"ExpressionStatement","src":"3597:57:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":237,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3686:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":239,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3702:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":242,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3728:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3735:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3711:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"ExpressionStatement","src":"3665:170:0"},{"expression":{"arguments":[{"id":251,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3855:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3859:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":250,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"3846:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"3846:21:0"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"3417:46:0","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":256,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:0","nodeType":"FunctionDefinition","overrides":{"id":220,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:0"},"parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"to","nameLocation":"3493:2:0","nodeType":"VariableDeclaration","scope":256,"src":"3485:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:0","nodeType":"VariableDeclaration","scope":256,"src":"3497:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:0"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"3538:0:0"},"scope":944,"src":"3468:406:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1049],"body":{"id":273,"nodeType":"Block","src":"4020:82:0","statements":[{"expression":{"arguments":[{"id":266,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4045:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":265,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"4030:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"ExpressionStatement","src":"4030:23:0"},{"expression":{"baseExpression":{"id":269,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"4071:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":271,"indexExpression":{"id":270,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4087:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":264,"id":272,"nodeType":"Return","src":"4064:31:0"}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"3880:50:0","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":274,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:0","nodeType":"FunctionDefinition","overrides":{"id":261,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:0"},"parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:0","nodeType":"VariableDeclaration","scope":274,"src":"3956:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:0"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":274,"src":"4011:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:0"},"scope":944,"src":"3935:167:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1041],"body":{"id":290,"nodeType":"Block","src":"4253:69:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":284,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":286,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"4296:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":287,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"4306:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":283,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"4263:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"4263:52:0"}]},"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4108:56:0","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":291,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:0","nodeType":"FunctionDefinition","overrides":{"id":281,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:0"},"parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"operator","nameLocation":"4204:8:0","nodeType":"VariableDeclaration","scope":291,"src":"4196:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"approved","nameLocation":"4219:8:0","nodeType":"VariableDeclaration","scope":291,"src":"4214:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":278,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:0"},"returnParameters":{"id":282,"nodeType":"ParameterList","parameters":[],"src":"4253:0:0"},"scope":944,"src":"4169:153:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1059],"body":{"id":308,"nodeType":"Block","src":"4491:59:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":302,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"4508:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":304,"indexExpression":{"id":303,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4527:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":306,"indexExpression":{"id":305,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"4534:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":301,"id":307,"nodeType":"Return","src":"4501:42:0"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"4328:55:0","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":309,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:0","nodeType":"FunctionDefinition","overrides":{"id":298,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:0"},"parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"owner","nameLocation":"4422:5:0","nodeType":"VariableDeclaration","scope":309,"src":"4414:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"operator","nameLocation":"4437:8:0","nodeType":"VariableDeclaration","scope":309,"src":"4429:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:0"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":309,"src":"4485:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":299,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:0"},"scope":944,"src":"4388:162:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1025],"body":{"id":335,"nodeType":"Block","src":"4731:207:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":322,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4820:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":324,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"4834:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":321,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4801:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:47:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:99:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"4793:99:0"},{"expression":{"arguments":[{"id":330,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4913:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":331,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4919:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"4923:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":329,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4903:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4903:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":334,"nodeType":"ExpressionStatement","src":"4903:28:0"}]},"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"4556:51:0","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":336,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:0","nodeType":"FunctionDefinition","overrides":{"id":318,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:0"},"parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"from","nameLocation":"4651:4:0","nodeType":"VariableDeclaration","scope":336,"src":"4643:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"to","nameLocation":"4673:2:0","nodeType":"VariableDeclaration","scope":336,"src":"4665:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:0","nodeType":"VariableDeclaration","scope":336,"src":"4685:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:0"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"4731:0:0"},"scope":944,"src":"4612:326:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1015],"body":{"id":354,"nodeType":"Block","src":"5127:56:0","statements":[{"expression":{"arguments":[{"id":348,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5154:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":349,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5160:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":350,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"5164:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":347,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[355,385],"referencedDeclaration":385,"src":"5137:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"5137:39:0"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"4944:55:0","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":355,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5013:16:0","nodeType":"FunctionDefinition","overrides":{"id":345,"nodeType":"OverrideSpecifier","overrides":[],"src":"5118:8:0"},"parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"from","nameLocation":"5047:4:0","nodeType":"VariableDeclaration","scope":355,"src":"5039:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"to","nameLocation":"5069:2:0","nodeType":"VariableDeclaration","scope":355,"src":"5061:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"tokenId","nameLocation":"5089:7:0","nodeType":"VariableDeclaration","scope":355,"src":"5081:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5029:73:0"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"5127:0:0"},"scope":944,"src":"5004:179:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1005],"body":{"id":384,"nodeType":"Block","src":"5399:164:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":370,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5436:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5450:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":369,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"5417:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5417:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5460:47:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5409:99:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"ExpressionStatement","src":"5409:99:0"},{"expression":{"arguments":[{"id":378,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5532:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":379,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5538:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":380,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5542:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":381,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5551:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":377,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5518:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5518:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"5518:38:0"}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"5189:55:0","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5258:16:0","nodeType":"FunctionDefinition","overrides":{"id":366,"nodeType":"OverrideSpecifier","overrides":[],"src":"5390:8:0"},"parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"from","nameLocation":"5292:4:0","nodeType":"VariableDeclaration","scope":385,"src":"5284:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"to","nameLocation":"5314:2:0","nodeType":"VariableDeclaration","scope":385,"src":"5306:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"5306:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"tokenId","nameLocation":"5334:7:0","nodeType":"VariableDeclaration","scope":385,"src":"5326:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"data","nameLocation":"5364:4:0","nodeType":"VariableDeclaration","scope":385,"src":"5351:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":363,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:100:0"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[],"src":"5399:0:0"},"scope":944,"src":"5249:314:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":413,"nodeType":"Block","src":"6564:165:0","statements":[{"expression":{"arguments":[{"id":398,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6584:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"6590:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":400,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6594:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":397,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"6574:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6574:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"ExpressionStatement","src":"6574:28:0"},{"expression":{"arguments":[{"arguments":[{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6643:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"6649:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":407,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6653:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":408,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"6662:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":404,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6620:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:52:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6612:110:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"ExpressionStatement","src":"6612:110:0"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"5569:850:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":414,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6433:13:0","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"from","nameLocation":"6464:4:0","nodeType":"VariableDeclaration","scope":414,"src":"6456:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"to","nameLocation":"6486:2:0","nodeType":"VariableDeclaration","scope":414,"src":"6478:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"tokenId","nameLocation":"6506:7:0","nodeType":"VariableDeclaration","scope":414,"src":"6498:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"6498:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"data","nameLocation":"6536:4:0","nodeType":"VariableDeclaration","scope":414,"src":"6523:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":393,"name":"bytes","nodeType":"ElementaryTypeName","src":"6523:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6446:100:0"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"6564:0:0"},"scope":944,"src":"6424:305:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"6913:40:0","statements":[{"expression":{"baseExpression":{"id":422,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"6930:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":424,"indexExpression":{"id":423,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6938:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6930:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"6923:23:0"}]},"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"6735:98:0","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6847:8:0","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"tokenId","nameLocation":"6864:7:0","nodeType":"VariableDeclaration","scope":427,"src":"6856:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:17:0"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"6904:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6903:9:0"},"scope":944,"src":"6838:115:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"7327:55:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":436,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"7353:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":435,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"7344:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7373:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7365:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:0","typeDescriptions":{}}},"id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7344:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":434,"id":443,"nodeType":"Return","src":"7337:38:0"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"6959:292:0","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7265:7:0","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"tokenId","nameLocation":"7281:7:0","nodeType":"VariableDeclaration","scope":445,"src":"7273:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"7273:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7272:17:0"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"7321:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":432,"name":"bool","nodeType":"ElementaryTypeName","src":"7321:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7320:6:0"},"scope":944,"src":"7256:126:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":478,"nodeType":"Block","src":"7639:162:0","statements":[{"assignments":[456],"declarations":[{"constant":false,"id":456,"mutability":"mutable","name":"owner","nameLocation":"7657:5:0","nodeType":"VariableDeclaration","scope":478,"src":"7649:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":461,"initialValue":{"arguments":[{"id":459,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":457,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"7665:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$944_$","typeString":"type(contract ERC721)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":145,"src":"7665:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7665:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7649:39:0"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":462,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"7706:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":463,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"7717:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7706:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":466,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"7743:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":467,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"7750:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":465,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"7726:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7726:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":471,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":470,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7762:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":473,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"7786:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7705:89:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":454,"id":477,"nodeType":"Return","src":"7698:96:0"}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"7388:147:0","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":479,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7549:18:0","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"spender","nameLocation":"7576:7:0","nodeType":"VariableDeclaration","scope":479,"src":"7568:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"tokenId","nameLocation":"7593:7:0","nodeType":"VariableDeclaration","scope":479,"src":"7585:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7567:34:0"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":479,"src":"7633:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":452,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7632:6:0"},"scope":944,"src":"7540:261:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":493,"nodeType":"Block","src":"8196:43:0","statements":[{"expression":{"arguments":[{"id":488,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"8216:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":489,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8220:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":487,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[494,523],"referencedDeclaration":523,"src":"8206:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"ExpressionStatement","src":"8206:26:0"}]},"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"7807:319:0","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":494,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8140:9:0","nodeType":"FunctionDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"to","nameLocation":"8158:2:0","nodeType":"VariableDeclaration","scope":494,"src":"8150:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":481,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"tokenId","nameLocation":"8170:7:0","nodeType":"VariableDeclaration","scope":494,"src":"8162:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8149:29:0"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"8196:0:0"},"scope":944,"src":"8131:108:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":522,"nodeType":"Block","src":"8574:195:0","statements":[{"expression":{"arguments":[{"id":505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"8590:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"8594:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":504,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"8584:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"8584:18:0"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:0","typeDescriptions":{}}},"id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8656:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"8668:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"8672:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":517,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"8681:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":510,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"8633:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:52:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8612:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8612:150:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":521,"nodeType":"ExpressionStatement","src":"8612:150:0"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"8245:210:0","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":523,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8469:9:0","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"to","nameLocation":"8496:2:0","nodeType":"VariableDeclaration","scope":523,"src":"8488:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"tokenId","nameLocation":"8516:7:0","nodeType":"VariableDeclaration","scope":523,"src":"8508:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"data","nameLocation":"8546:4:0","nodeType":"VariableDeclaration","scope":523,"src":"8533:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":500,"name":"bytes","nodeType":"ElementaryTypeName","src":"8533:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8478:78:0"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"8574:0:0"},"scope":944,"src":"8460:309:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":599,"nodeType":"Block","src":"9152:859:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9170:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:0","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9170:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9188:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9162:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9162:61:0"},{"expression":{"arguments":[{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9241:17:0","subExpression":{"arguments":[{"id":543,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9250:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":542,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"9242:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9242:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":541,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9233:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"ExpressionStatement","src":"9233:58:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9323:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:0","typeDescriptions":{}}},"id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":554,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9335:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":555,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9339:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":549,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"9302:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"9302:48:0"},{"expression":{"arguments":[{"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9445:17:0","subExpression":{"arguments":[{"id":561,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9454:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":560,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"9446:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9464:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9437:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9437:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"ExpressionStatement","src":"9437:58:0"},{"id":573,"nodeType":"UncheckedBlock","src":"9506:360:0","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"9837:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9847:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9837:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9837:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":572,"nodeType":"ExpressionStatement","src":"9837:18:0"}]},{"expression":{"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":574,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"9876:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":576,"indexExpression":{"id":575,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9884:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":577,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9895:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9876:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":579,"nodeType":"ExpressionStatement","src":"9876:21:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:0","typeDescriptions":{}}},"id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9922:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":585,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9934:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9938:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":580,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"9913:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9913:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"EmitStatement","src":"9908:38:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9977:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"9977:7:0","typeDescriptions":{}}},"id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9989:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9993:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":589,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9957:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9957:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"ExpressionStatement","src":"9957:47:0"}]},"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"8775:311:0","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":600,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9100:5:0","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"to","nameLocation":"9114:2:0","nodeType":"VariableDeclaration","scope":600,"src":"9106:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"9106:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:0","nodeType":"VariableDeclaration","scope":600,"src":"9118:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9105:29:0"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"9152:0:0"},"scope":944,"src":"9091:920:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"10386:713:0","statements":[{"assignments":[607],"declarations":[{"constant":false,"id":607,"mutability":"mutable","name":"owner","nameLocation":"10404:5:0","nodeType":"VariableDeclaration","scope":666,"src":"10396:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":612,"initialValue":{"arguments":[{"id":610,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10427:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":608,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"10412:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$944_$","typeString":"type(contract ERC721)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":145,"src":"10412:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10412:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10396:39:0"},{"expression":{"arguments":[{"id":614,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10467:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:0","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10474:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":619,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10486:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":613,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"10446:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10446:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"ExpressionStatement","src":"10446:51:0"},{"expression":{"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":623,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10599:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":626,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10622:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":624,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"10607:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$944_$","typeString":"type(contract ERC721)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":145,"src":"10607:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10607:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10599:31:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":629,"nodeType":"ExpressionStatement","src":"10599:31:0"},{"expression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10668:31:0","subExpression":{"baseExpression":{"id":630,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"10675:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":632,"indexExpression":{"id":631,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10691:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10675:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"ExpressionStatement","src":"10668:31:0"},{"id":641,"nodeType":"UncheckedBlock","src":"10710:237:0","statements":[{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":635,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"10915:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":637,"indexExpression":{"id":636,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10925:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10935:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10915:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"10915:21:0"}]},{"expression":{"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10956:23:0","subExpression":{"baseExpression":{"id":642,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"10963:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":644,"indexExpression":{"id":643,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10963:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"10956:23:0"},{"eventCall":{"arguments":[{"id":648,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"11004:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11019:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"11011:7:0","typeDescriptions":{}}},"id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":653,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"11023:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":647,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10995:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10995:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"EmitStatement","src":"10990:41:0"},{"expression":{"arguments":[{"id":657,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"11062:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11077:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"11069:7:0","typeDescriptions":{}}},"id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"11081:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":656,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"11042:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"ExpressionStatement","src":"11042:50:0"}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"10017:315:0","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10346:5:0","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"tokenId","nameLocation":"10360:7:0","nodeType":"VariableDeclaration","scope":667,"src":"10352:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10351:17:0"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"10386:0:0"},"scope":944,"src":"10337:762:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":751,"nodeType":"Block","src":"11532:1124:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":680,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"11565:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":678,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11550:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$944_$","typeString":"type(contract ERC721)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":145,"src":"11550:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":682,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"11577:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11550:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11583:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11542:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":686,"nodeType":"ExpressionStatement","src":"11542:81:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":688,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"11641:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11655:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11647:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"11647:7:0","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11641:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11659:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11633:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11633:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"11633:65:0"},{"expression":{"arguments":[{"id":698,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"11730:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"11736:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"11740:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":697,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"11709:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"11709:42:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":707,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"11866:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":705,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11851:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$944_$","typeString":"type(contract ERC721)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":145,"src":"11851:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":709,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"11878:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11851:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11884:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11843:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11843:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"11843:81:0"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11986:31:0","subExpression":{"baseExpression":{"id":714,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"11993:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":716,"indexExpression":{"id":715,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"12009:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11993:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"ExpressionStatement","src":"11986:31:0"},{"id":731,"nodeType":"UncheckedBlock","src":"12028:496:0","statements":[{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":719,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"12461:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":721,"indexExpression":{"id":720,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"12471:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12461:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12480:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12461:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":724,"nodeType":"ExpressionStatement","src":"12461:20:0"},{"expression":{"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":725,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"12495:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":727,"indexExpression":{"id":726,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"12505:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12495:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12512:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12495:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":730,"nodeType":"ExpressionStatement","src":"12495:18:0"}]},{"expression":{"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":732,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"12533:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":734,"indexExpression":{"id":733,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"12541:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":735,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"12552:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":737,"nodeType":"ExpressionStatement","src":"12533:21:0"},{"eventCall":{"arguments":[{"id":739,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"12579:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"12585:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"12589:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"12570:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12570:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"EmitStatement","src":"12565:32:0"},{"expression":{"arguments":[{"id":745,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"12628:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":746,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"12634:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":747,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"12638:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":744,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"12608:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12608:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"12608:41:0"}]},"documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"11105:313:0","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":752,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11432:9:0","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"from","nameLocation":"11459:4:0","nodeType":"VariableDeclaration","scope":752,"src":"11451:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"to","nameLocation":"11481:2:0","nodeType":"VariableDeclaration","scope":752,"src":"11473:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"tokenId","nameLocation":"11501:7:0","nodeType":"VariableDeclaration","scope":752,"src":"11493:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11441:73:0"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[],"src":"11532:0:0"},"scope":944,"src":"11423:1233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"12832:107:0","statements":[{"expression":{"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":760,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"12842:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":762,"indexExpression":{"id":761,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"12858:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12842:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":763,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"12869:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12842:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":765,"nodeType":"ExpressionStatement","src":"12842:29:0"},{"eventCall":{"arguments":[{"arguments":[{"id":769,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"12910:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":767,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"12895:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$944_$","typeString":"type(contract ERC721)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":145,"src":"12895:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12895:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":771,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"12920:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"12924:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"12886:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12886:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":774,"nodeType":"EmitStatement","src":"12881:51:0"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"12662:101:0","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12777:8:0","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"12794:2:0","nodeType":"VariableDeclaration","scope":776,"src":"12786:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"12786:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"tokenId","nameLocation":"12806:7:0","nodeType":"VariableDeclaration","scope":776,"src":"12798:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12785:29:0"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"12832:0:0"},"scope":944,"src":"12768:171:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"13198:184:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":787,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"13216:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":788,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"13225:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13216:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13235:27:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13208:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13208:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"13208:55:0"},{"expression":{"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":793,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"13273:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":796,"indexExpression":{"id":794,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"13292:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13273:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":797,"indexExpression":{"id":795,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"13299:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13273:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":798,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13311:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13273:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":800,"nodeType":"ExpressionStatement","src":"13273:46:0"},{"eventCall":{"arguments":[{"id":802,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"13349:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"13356:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13366:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":801,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"13334:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"EmitStatement","src":"13329:46:0"}]},"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"12945:125:0","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13084:18:0","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"owner","nameLocation":"13120:5:0","nodeType":"VariableDeclaration","scope":808,"src":"13112:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"operator","nameLocation":"13143:8:0","nodeType":"VariableDeclaration","scope":808,"src":"13135:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"approved","nameLocation":"13166:8:0","nodeType":"VariableDeclaration","scope":808,"src":"13161:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":782,"name":"bool","nodeType":"ElementaryTypeName","src":"13161:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13102:78:0"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"13198:0:0"},"scope":944,"src":"13075:307:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":821,"nodeType":"Block","src":"13529:70:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":816,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"13555:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"13547:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13547:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13565:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13539:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13539:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"13539:53:0"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"13388:73:0","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":822,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13475:14:0","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"tokenId","nameLocation":"13498:7:0","nodeType":"VariableDeclaration","scope":822,"src":"13490:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:17:0"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"13529:0:0"},"scope":944,"src":"13466:133:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":883,"nodeType":"Block","src":"14306:676:0","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":836,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"14320:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1123,"src":"14320:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":881,"nodeType":"Block","src":"14940:36:0","statements":[{"expression":{"hexValue":"74727565","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":835,"id":880,"nodeType":"Return","src":"14954:11:0"}]},"id":882,"nodeType":"IfStatement","src":"14316:660:0","trueBody":{"id":878,"nodeType":"Block","src":"14337:597:0","statements":[{"clauses":[{"block":{"id":858,"nodeType":"Block","src":"14451:91:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":852,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"14476:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":853,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"14486:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1078_$","typeString":"type(contract IERC721Receiver)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"14486:32:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14486:41:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14476:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":835,"id":857,"nodeType":"Return","src":"14469:58:0"}]},"errorName":"","id":859,"nodeType":"TryCatchClause","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"retval","nameLocation":"14443:6:0","nodeType":"VariableDeclaration","scope":859,"src":"14436:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":849,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14436:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14435:15:0"},"src":"14427:115:0"},{"block":{"id":875,"nodeType":"Block","src":"14571:353:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":863,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"14593:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14593:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14593:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":873,"nodeType":"Block","src":"14720:190:0","statements":[{"AST":{"nodeType":"YulBlock","src":"14806:86:0","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14843:2:0","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14847:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:0"},"nodeType":"YulFunctionCall","src":"14839:15:0"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14862:6:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14856:5:0"},"nodeType":"YulFunctionCall","src":"14856:13:0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14832:6:0"},"nodeType":"YulFunctionCall","src":"14832:38:0"},"nodeType":"YulExpressionStatement","src":"14832:38:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":861,"isOffset":false,"isSlot":false,"src":"14847:6:0","valueSize":1},{"declaration":861,"isOffset":false,"isSlot":false,"src":"14862:6:0","valueSize":1}],"id":872,"nodeType":"InlineAssembly","src":"14797:95:0"}]},"id":874,"nodeType":"IfStatement","src":"14589:321:0","trueBody":{"id":871,"nodeType":"Block","src":"14613:101:0","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14642:52:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":867,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14635:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"ExpressionStatement","src":"14635:60:0"}]}}]},"errorName":"","id":876,"nodeType":"TryCatchClause","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"reason","nameLocation":"14563:6:0","nodeType":"VariableDeclaration","scope":876,"src":"14550:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":860,"name":"bytes","nodeType":"ElementaryTypeName","src":"14550:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14549:21:0"},"src":"14543:381:0"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":843,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"14392:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14392:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"14406:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"14412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":847,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"14421:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":840,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"14371:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":839,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"14355:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1078_$","typeString":"type(contract IERC721Receiver)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1078","typeString":"contract IERC721Receiver"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"14355:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:71:0","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":877,"nodeType":"TryStatement","src":"14351:573:0"}]}}]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"13605:541:0","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14160:22:0","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"from","nameLocation":"14200:4:0","nodeType":"VariableDeclaration","scope":884,"src":"14192:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"to","nameLocation":"14222:2:0","nodeType":"VariableDeclaration","scope":884,"src":"14214:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"14214:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"tokenId","nameLocation":"14242:7:0","nodeType":"VariableDeclaration","scope":884,"src":"14234:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"data","nameLocation":"14272:4:0","nodeType":"VariableDeclaration","scope":884,"src":"14259:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"14259:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14182:100:0"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"14300:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":833,"name":"bool","nodeType":"ElementaryTypeName","src":"14300:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14299:6:0"},"scope":944,"src":"14151:831:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":929,"nodeType":"Block","src":"15856:238:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"15870:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15882:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15870:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":928,"nodeType":"IfStatement","src":"15866:222:0","trueBody":{"id":927,"nodeType":"Block","src":"15885:203:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"15903:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15919:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15911:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"15911:7:0","typeDescriptions":{}}},"id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15911:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15903:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":912,"nodeType":"IfStatement","src":"15899:85:0","trueBody":{"id":911,"nodeType":"Block","src":"15923:61:0","statements":[{"expression":{"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":905,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"15941:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":907,"indexExpression":{"id":906,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"15951:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15941:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":908,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"15960:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15941:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":910,"nodeType":"ExpressionStatement","src":"15941:28:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"16001:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16015:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16007:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"16007:7:0","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16007:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16001:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"15997:81:0","trueBody":{"id":925,"nodeType":"Block","src":"16019:59:0","statements":[{"expression":{"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":919,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"16037:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":921,"indexExpression":{"id":920,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"16047:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16037:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":922,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"16054:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16037:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":924,"nodeType":"ExpressionStatement","src":"16037:26:0"}]}}]}}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"14988:705:0","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":930,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15707:20:0","nodeType":"FunctionDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"from","nameLocation":"15745:4:0","nodeType":"VariableDeclaration","scope":930,"src":"15737:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"15737:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"to","nameLocation":"15767:2:0","nodeType":"VariableDeclaration","scope":930,"src":"15759:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":930,"src":"15779:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"batchSize","nameLocation":"15823:9:0","nodeType":"VariableDeclaration","scope":930,"src":"15815:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"15815:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15727:111:0"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"15856:0:0"},"scope":944,"src":"15698:396:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"16951:2:0","statements":[]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"16100:695:0","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16809:19:0","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"from","nameLocation":"16846:4:0","nodeType":"VariableDeclaration","scope":943,"src":"16838:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"16838:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"to","nameLocation":"16868:2:0","nodeType":"VariableDeclaration","scope":943,"src":"16860:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"16860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"firstTokenId","nameLocation":"16888:12:0","nodeType":"VariableDeclaration","scope":943,"src":"16880:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"16880:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"batchSize","nameLocation":"16918:9:0","nodeType":"VariableDeclaration","scope":943,"src":"16910:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"16910:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16828:105:0"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"16951:0:0"},"scope":944,"src":"16800:153:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":945,"src":"628:16327:0","usedErrors":[]}],"src":"107:16849:0"},"id":0},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1668],"IERC721":[1060]},"id":1061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":946,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1061,"sourceUnit":1669,"src":"133:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":949,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1668,"src":"271:7:1"},"id":950,"nodeType":"InheritanceSpecifier","src":"271:7:1"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"182:67:1","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1060,"linearizedBaseContracts":[1060,1668],"name":"IERC721","nameLocation":"260:7:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"285:88:1","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":959,"name":"Transfer","nameLocation":"384:8:1","nodeType":"EventDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:1","nodeType":"VariableDeclaration","scope":959,"src":"393:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:1","nodeType":"VariableDeclaration","scope":959,"src":"415:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:1","nodeType":"VariableDeclaration","scope":959,"src":"435:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:1"},"src":"378:82:1"},{"anonymous":false,"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"466:94:1","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":968,"name":"Approval","nameLocation":"571:8:1","nodeType":"EventDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:1","nodeType":"VariableDeclaration","scope":968,"src":"580:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:1","nodeType":"VariableDeclaration","scope":968,"src":"603:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:1","nodeType":"VariableDeclaration","scope":968,"src":"629:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:1"},"src":"565:89:1"},{"anonymous":false,"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"660:117:1","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":977,"name":"ApprovalForAll","nameLocation":"788:14:1","nodeType":"EventDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:1","nodeType":"VariableDeclaration","scope":977,"src":"803:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":973,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:1","nodeType":"VariableDeclaration","scope":977,"src":"826:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":975,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:1","nodeType":"VariableDeclaration","scope":977,"src":"852:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":974,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:1"},"src":"782:85:1"},{"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"873:76:1","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":985,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:1","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"owner","nameLocation":"981:5:1","nodeType":"VariableDeclaration","scope":985,"src":"973:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:1"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"balance","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":985,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:1"},"scope":1060,"src":"954:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"1034:131:1","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":993,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:1","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:1","nodeType":"VariableDeclaration","scope":993,"src":"1187:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:1"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"owner","nameLocation":"1235:5:1","nodeType":"VariableDeclaration","scope":993,"src":"1227:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:1"},"scope":1060,"src":"1170:72:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"1248:556:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1005,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:1","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"from","nameLocation":"1852:4:1","nodeType":"VariableDeclaration","scope":1005,"src":"1844:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"to","nameLocation":"1874:2:1","nodeType":"VariableDeclaration","scope":1005,"src":"1866:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:1","nodeType":"VariableDeclaration","scope":1005,"src":"1886:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"data","nameLocation":"1926:4:1","nodeType":"VariableDeclaration","scope":1005,"src":"1911:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1001,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:1"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"1945:0:1"},"scope":1060,"src":"1809:137:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"1952:687:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1015,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:1","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"from","nameLocation":"2687:4:1","nodeType":"VariableDeclaration","scope":1015,"src":"2679:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"to","nameLocation":"2709:2:1","nodeType":"VariableDeclaration","scope":1015,"src":"2701:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:1","nodeType":"VariableDeclaration","scope":1015,"src":"2721:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:1"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"2751:0:1"},"scope":1060,"src":"2644:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"2758:732:1","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1025,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:1","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"from","nameLocation":"3534:4:1","nodeType":"VariableDeclaration","scope":1025,"src":"3526:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"to","nameLocation":"3556:2:1","nodeType":"VariableDeclaration","scope":1025,"src":"3548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:1","nodeType":"VariableDeclaration","scope":1025,"src":"3568:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:1"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"3598:0:1"},"scope":1060,"src":"3495:104:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"3605:452:1","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1033,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:1","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"to","nameLocation":"4087:2:1","nodeType":"VariableDeclaration","scope":1033,"src":"4079:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:1","nodeType":"VariableDeclaration","scope":1033,"src":"4091:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:1"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"4116:0:1"},"scope":1060,"src":"4062:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"4123:309:1","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1041,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:1","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"operator","nameLocation":"4472:8:1","nodeType":"VariableDeclaration","scope":1041,"src":"4464:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:1","nodeType":"VariableDeclaration","scope":1041,"src":"4482:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1037,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:1"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"4506:0:1"},"scope":1060,"src":"4437:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"4513:139:1","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1049,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:1","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:1","nodeType":"VariableDeclaration","scope":1049,"src":"4678:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:1"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"operator","nameLocation":"4726:8:1","nodeType":"VariableDeclaration","scope":1049,"src":"4718:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:1"},"scope":1060,"src":"4657:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"4742:138:1","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1059,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:1","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"owner","nameLocation":"4919:5:1","nodeType":"VariableDeclaration","scope":1059,"src":"4911:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"operator","nameLocation":"4934:8:1","nodeType":"VariableDeclaration","scope":1059,"src":"4926:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:1"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"4967:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1056,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:1"},"scope":1060,"src":"4885:88:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1061,"src":"250:4725:1","usedErrors":[]}],"src":"108:4868:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1078]},"id":1079,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1062,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"141:152:2","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1078,"linearizedBaseContracts":[1078],"name":"IERC721Receiver","nameLocation":"304:15:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"326:493:2","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1077,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:2","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"operator","nameLocation":"867:8:2","nodeType":"VariableDeclaration","scope":1077,"src":"859:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"from","nameLocation":"893:4:2","nodeType":"VariableDeclaration","scope":1077,"src":"885:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:2","nodeType":"VariableDeclaration","scope":1077,"src":"907:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"data","nameLocation":"947:4:2","nodeType":"VariableDeclaration","scope":1077,"src":"932:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:2"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"976:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1074,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:2"},"scope":1078,"src":"824:160:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1079,"src":"294:692:2","usedErrors":[]}],"src":"116:871:2"},"id":2},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[1668],"IERC721":[1060],"IERC721Metadata":[1105]},"id":1106,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1080,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1081,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1106,"sourceUnit":1061,"src":"137:24:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1083,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1060,"src":"326:7:3"},"id":1084,"nodeType":"InheritanceSpecifier","src":"326:7:3"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"163:133:3","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1105,"linearizedBaseContracts":[1105,1060,1668],"name":"IERC721Metadata","nameLocation":"307:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"340:58:3","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1090,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:3","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"416:2:3"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"442:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1087,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:3"},"scope":1105,"src":"403:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"463:60:3","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1096,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:3","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[],"src":"543:2:3"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1096,"src":"569:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1093,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:3"},"scope":1105,"src":"528:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"590:90:3","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1104,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:3","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:3","nodeType":"VariableDeclaration","scope":1104,"src":"703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:3"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1104,"src":"743:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1101,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:3"},"scope":1105,"src":"685:73:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1106,"src":"297:463:3","usedErrors":[]}],"src":"112:649:3"},"id":3},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1435]},"id":1436,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1107,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1435,"linearizedBaseContracts":[1435],"name":"Address","nameLocation":"202:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1122,"nodeType":"Block","src":"1241:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1116,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"1465:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1115,"id":1121,"nodeType":"Return","src":"1458:30:4"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"216:954:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:4","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"account","nameLocation":"1203:7:4","nodeType":"VariableDeclaration","scope":1123,"src":"1195:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:4"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"1235:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1113,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:4"},"scope":1435,"src":"1175:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1156,"nodeType":"Block","src":"2483:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1134,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1435","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1435","typeString":"library Address"}],"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:4","typeDescriptions":{}}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1137,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2526:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"ExpressionStatement","src":"2493:73:4"},{"assignments":[1143,null],"declarations":[{"constant":false,"id":1143,"mutability":"mutable","name":"success","nameLocation":"2583:7:4","nodeType":"VariableDeclaration","scope":1156,"src":"2578:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1142,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1150,"initialValue":{"arguments":[{"hexValue":"","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1144,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2596:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1146,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2618:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:4"},{"expression":{"arguments":[{"id":1152,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"2647:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"2639:78:4"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"1501:906:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1157,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:4","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:4","nodeType":"VariableDeclaration","scope":1157,"src":"2431:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"amount","nameLocation":"2466:6:4","nodeType":"VariableDeclaration","scope":1157,"src":"2458:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:4"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"2483:0:4"},"scope":1435,"src":"2412:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1174,"nodeType":"Block","src":"3555:96:4","statements":[{"expression":{"arguments":[{"id":1168,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"3594:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1169,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"3602:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1167,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1215,1259],"referencedDeclaration":1259,"src":"3572:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1166,"id":1173,"nodeType":"Return","src":"3565:79:4"}]},"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"2730:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1175,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:4","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"target","nameLocation":"3496:6:4","nodeType":"VariableDeclaration","scope":1175,"src":"3488:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"data","nameLocation":"3517:4:4","nodeType":"VariableDeclaration","scope":1175,"src":"3504:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1161,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:4"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1175,"src":"3541:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1164,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:4"},"scope":1435,"src":"3466:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1194,"nodeType":"Block","src":"4020:76:4","statements":[{"expression":{"arguments":[{"id":1188,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4059:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1189,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"4067:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1191,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"4076:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1187,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1215,1259],"referencedDeclaration":1259,"src":"4037:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1186,"id":1193,"nodeType":"Return","src":"4030:59:4"}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"3657:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:4","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"target","nameLocation":"3912:6:4","nodeType":"VariableDeclaration","scope":1195,"src":"3904:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"data","nameLocation":"3941:4:4","nodeType":"VariableDeclaration","scope":1195,"src":"3928:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1179,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:4","nodeType":"VariableDeclaration","scope":1195,"src":"3955:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1181,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:4"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1195,"src":"4006:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1184,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:4"},"scope":1435,"src":"3873:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"4601:111:4","statements":[{"expression":{"arguments":[{"id":1208,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"4640:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4648:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"4654:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1207,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1215,1259],"referencedDeclaration":1259,"src":"4618:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1206,"id":1213,"nodeType":"Return","src":"4611:94:4"}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"4102:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:4","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"target","nameLocation":"4506:6:4","nodeType":"VariableDeclaration","scope":1215,"src":"4498:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"data","nameLocation":"4535:4:4","nodeType":"VariableDeclaration","scope":1215,"src":"4522:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1199,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"value","nameLocation":"4557:5:4","nodeType":"VariableDeclaration","scope":1215,"src":"4549:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:4"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"4587:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1204,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:4"},"scope":1435,"src":"4458:254:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"5139:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1232,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1435","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1435","typeString":"library Address"}],"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:4","typeDescriptions":{}}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"5182:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1239,"nodeType":"ExpressionStatement","src":"5149:81:4"},{"assignments":[1241,1243],"declarations":[{"constant":false,"id":1241,"mutability":"mutable","name":"success","nameLocation":"5246:7:4","nodeType":"VariableDeclaration","scope":1258,"src":"5241:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1240,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:4","nodeType":"VariableDeclaration","scope":1258,"src":"5255:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1242,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1250,"initialValue":{"arguments":[{"id":1248,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"5308:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1244,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"5282:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"5301:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:4"},{"expression":{"arguments":[{"id":1252,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"5357:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1253,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5365:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1254,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"5374:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1255,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"5386:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1251,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"5330:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1228,"id":1257,"nodeType":"Return","src":"5323:76:4"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"4718:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:4","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"target","nameLocation":"5008:6:4","nodeType":"VariableDeclaration","scope":1259,"src":"5000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"data","nameLocation":"5037:4:4","nodeType":"VariableDeclaration","scope":1259,"src":"5024:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1219,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"value","nameLocation":"5059:5:4","nodeType":"VariableDeclaration","scope":1259,"src":"5051:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1224,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:4","nodeType":"VariableDeclaration","scope":1259,"src":"5074:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1223,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:4"},"returnParameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"5125:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1226,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:4"},"scope":1435,"src":"4960:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"5683:97:4","statements":[{"expression":{"arguments":[{"id":1270,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"5719:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1271,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"5727:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1269,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1276,1305],"referencedDeclaration":1305,"src":"5700:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1268,"id":1274,"nodeType":"Return","src":"5693:80:4"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"5412:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:4","nodeType":"FunctionDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"target","nameLocation":"5619:6:4","nodeType":"VariableDeclaration","scope":1276,"src":"5611:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"data","nameLocation":"5640:4:4","nodeType":"VariableDeclaration","scope":1276,"src":"5627:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1263,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:4"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"5669:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1266,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:4"},"scope":1435,"src":"5583:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1304,"nodeType":"Block","src":"6122:168:4","statements":[{"assignments":[1289,1291],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"success","nameLocation":"6138:7:4","nodeType":"VariableDeclaration","scope":1304,"src":"6133:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1288,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:4","nodeType":"VariableDeclaration","scope":1304,"src":"6147:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1290,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1296,"initialValue":{"arguments":[{"id":1294,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"6192:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1292,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"6174:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:4"},{"expression":{"arguments":[{"id":1298,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"6241:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1299,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"6249:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1300,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6258:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1301,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"6270:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1297,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"6214:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1287,"id":1303,"nodeType":"Return","src":"6207:76:4"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"5786:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:4","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"target","nameLocation":"6009:6:4","nodeType":"VariableDeclaration","scope":1305,"src":"6001:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"data","nameLocation":"6038:4:4","nodeType":"VariableDeclaration","scope":1305,"src":"6025:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1280,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:4","nodeType":"VariableDeclaration","scope":1305,"src":"6052:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1282,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:4"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"6108:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1285,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:4"},"scope":1435,"src":"5964:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1321,"nodeType":"Block","src":"6566:101:4","statements":[{"expression":{"arguments":[{"id":1316,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"6604:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"6612:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1315,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1322,1351],"referencedDeclaration":1351,"src":"6583:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1314,"id":1320,"nodeType":"Return","src":"6576:84:4"}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"6296:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:4","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"target","nameLocation":"6507:6:4","nodeType":"VariableDeclaration","scope":1322,"src":"6499:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"data","nameLocation":"6528:4:4","nodeType":"VariableDeclaration","scope":1322,"src":"6515:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1309,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:4"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1322,"src":"6552:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1312,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:4"},"scope":1435,"src":"6469:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1350,"nodeType":"Block","src":"7008:170:4","statements":[{"assignments":[1335,1337],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"success","nameLocation":"7024:7:4","nodeType":"VariableDeclaration","scope":1350,"src":"7019:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1334,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:4","nodeType":"VariableDeclaration","scope":1350,"src":"7033:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1336,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1342,"initialValue":{"arguments":[{"id":1340,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"7080:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1338,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"7060:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:4"},{"expression":{"arguments":[{"id":1344,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"7129:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1345,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7137:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1346,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7146:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1347,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"7158:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1343,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"7102:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1333,"id":1349,"nodeType":"Return","src":"7095:76:4"}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"6673:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1351,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:4","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"target","nameLocation":"6900:6:4","nodeType":"VariableDeclaration","scope":1351,"src":"6892:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"data","nameLocation":"6929:4:4","nodeType":"VariableDeclaration","scope":1351,"src":"6916:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1326,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:4","nodeType":"VariableDeclaration","scope":1351,"src":"6943:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1328,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:4"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1351,"src":"6994:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1331,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:4"},"scope":1435,"src":"6853:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1389,"nodeType":"Block","src":"7660:434:4","statements":[{"condition":{"id":1365,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"7674:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1387,"nodeType":"Block","src":"8030:58:4","statements":[{"expression":{"arguments":[{"id":1383,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"8052:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1384,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8064:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1382,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"8044:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"ExpressionStatement","src":"8044:33:4"}]},"id":1388,"nodeType":"IfStatement","src":"7670:418:4","trueBody":{"id":1381,"nodeType":"Block","src":"7683:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1366,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"7701:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1378,"nodeType":"IfStatement","src":"7697:286:4","trueBody":{"id":1377,"nodeType":"Block","src":"7725:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1372,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"7927:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1371,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"7916:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1376,"nodeType":"ExpressionStatement","src":"7908:60:4"}]}},{"expression":{"id":1379,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"8003:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1364,"id":1380,"nodeType":"Return","src":"7996:17:4"}]}}]},"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"7184:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1390,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:4","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"target","nameLocation":"7519:6:4","nodeType":"VariableDeclaration","scope":1390,"src":"7511:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"success","nameLocation":"7540:7:4","nodeType":"VariableDeclaration","scope":1390,"src":"7535:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1355,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:4","nodeType":"VariableDeclaration","scope":1390,"src":"7557:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1357,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:4","nodeType":"VariableDeclaration","scope":1390,"src":"7590:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1359,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:4"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1390,"src":"7646:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1362,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:4"},"scope":1435,"src":"7466:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1413,"nodeType":"Block","src":"8475:135:4","statements":[{"condition":{"id":1402,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"8489:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1411,"nodeType":"Block","src":"8546:58:4","statements":[{"expression":{"arguments":[{"id":1407,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"8568:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1408,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"8580:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1406,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"8560:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"8560:33:4"}]},"id":1412,"nodeType":"IfStatement","src":"8485:119:4","trueBody":{"id":1405,"nodeType":"Block","src":"8498:42:4","statements":[{"expression":{"id":1403,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"8519:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1401,"id":1404,"nodeType":"Return","src":"8512:17:4"}]}}]},"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"8100:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1414,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:4","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"success","nameLocation":"8355:7:4","nodeType":"VariableDeclaration","scope":1414,"src":"8350:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1392,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:4","nodeType":"VariableDeclaration","scope":1414,"src":"8372:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1394,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:4","nodeType":"VariableDeclaration","scope":1414,"src":"8405:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1396,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:4"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1414,"src":"8461:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1399,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:4"},"scope":1435,"src":"8315:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1433,"nodeType":"Block","src":"8699:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1421,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"8775:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1431,"nodeType":"Block","src":"9105:45:4","statements":[{"expression":{"arguments":[{"id":1428,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9126:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1427,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"9119:20:4"}]},"id":1432,"nodeType":"IfStatement","src":"8771:379:4","trueBody":{"id":1426,"nodeType":"Block","src":"8798:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:4"},"nodeType":"YulFunctionCall","src":"8997:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:4"},"nodeType":"YulFunctionCall","src":"9038:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:4"},"nodeType":"YulFunctionCall","src":"9031:44:4"},"nodeType":"YulExpressionStatement","src":"9031:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1416,"isOffset":false,"isSlot":false,"src":"9003:10:4","valueSize":1},{"declaration":1416,"isOffset":false,"isSlot":false,"src":"9046:10:4","valueSize":1}],"id":1425,"nodeType":"InlineAssembly","src":"8947:142:4"}]}}]},"id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:4","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:4","nodeType":"VariableDeclaration","scope":1434,"src":"8633:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1415,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:4","nodeType":"VariableDeclaration","scope":1434,"src":"8658:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1417,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:4"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[],"src":"8699:0:4"},"scope":1435,"src":"8616:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1436,"src":"194:8964:4","usedErrors":[]}],"src":"101:9058:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1457]},"id":1458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1437,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1457,"linearizedBaseContracts":[1457],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1446,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":1443,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1442,"id":1445,"nodeType":"Return","src":"712:17:5"}]},"id":1447,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":1457,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1455,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":1452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1451,"id":1454,"nodeType":"Return","src":"819:15:5"}]},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1449,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":1457,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1458,"src":"608:235:5","usedErrors":[]}],"src":"86:758:5"},"id":5},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2533],"Strings":[1632]},"id":1633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1459,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1633,"sourceUnit":2534,"src":"126:25:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"153:34:6","text":" @dev String operations."},"fullyImplemented":true,"id":1632,"linearizedBaseContracts":[1632],"name":"Strings","nameLocation":"196:7:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1464,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:6","nodeType":"VariableDeclaration","scope":1632,"src":"210:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1462,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1467,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:6","nodeType":"VariableDeclaration","scope":1632,"src":"270:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1465,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1514,"nodeType":"Block","src":"486:625:6","statements":[{"id":1513,"nodeType":"UncheckedBlock","src":"496:609:6","statements":[{"assignments":[1476],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"length","nameLocation":"528:6:6","nodeType":"VariableDeclaration","scope":1513,"src":"520:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1483,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"548:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1477,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"537:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2533_$","typeString":"type(library Math)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2370,"src":"537:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:6"},{"assignments":[1485],"declarations":[{"constant":false,"id":1485,"mutability":"mutable","name":"buffer","nameLocation":"586:6:6","nodeType":"VariableDeclaration","scope":1513,"src":"572:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1484,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1490,"initialValue":{"arguments":[{"id":1488,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"606:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1486,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:6"},{"assignments":[1492],"declarations":[{"constant":false,"id":1492,"mutability":"mutable","name":"ptr","nameLocation":"635:3:6","nodeType":"VariableDeclaration","scope":1513,"src":"627:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1493,"nodeType":"VariableDeclarationStatement","src":"627:11:6"},{"AST":{"nodeType":"YulBlock","src":"708:67:6","statements":[{"nodeType":"YulAssignment","src":"726:35:6","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:6","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:6"},"nodeType":"YulFunctionCall","src":"745:15:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:6"},"nodeType":"YulFunctionCall","src":"733:28:6"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1485,"isOffset":false,"isSlot":false,"src":"737:6:6","valueSize":1},{"declaration":1476,"isOffset":false,"isSlot":false,"src":"753:6:6","valueSize":1},{"declaration":1492,"isOffset":false,"isSlot":false,"src":"726:3:6","valueSize":1}],"id":1494,"nodeType":"InlineAssembly","src":"699:76:6"},{"body":{"id":1509,"nodeType":"Block","src":"801:267:6","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:6","subExpression":{"id":1496,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"819:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"819:5:6"},{"AST":{"nodeType":"YulBlock","src":"902:84:6","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:6","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:6"},"nodeType":"YulFunctionCall","src":"942:14:6"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:6"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:6"},"nodeType":"YulFunctionCall","src":"937:30:6"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:6"},"nodeType":"YulFunctionCall","src":"924:44:6"},"nodeType":"YulExpressionStatement","src":"924:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1464,"isOffset":false,"isSlot":false,"src":"958:8:6","valueSize":1},{"declaration":1492,"isOffset":false,"isSlot":false,"src":"932:3:6","valueSize":1},{"declaration":1470,"isOffset":false,"isSlot":false,"src":"946:5:6","valueSize":1}],"id":1499,"nodeType":"InlineAssembly","src":"893:93:6"},{"expression":{"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1003:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"nodeType":"ExpressionStatement","src":"1003:11:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1036:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1508,"nodeType":"IfStatement","src":"1032:21:6","trueBody":{"id":1507,"nodeType":"Break","src":"1048:5:6"}}]},"condition":{"hexValue":"74727565","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1510,"nodeType":"WhileStatement","src":"788:280:6"},{"expression":{"id":1511,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1088:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1474,"id":1512,"nodeType":"Return","src":"1081:13:6"}]}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"320:90:6","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1515,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:6","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"value","nameLocation":"441:5:6","nodeType":"VariableDeclaration","scope":1515,"src":"433:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:6"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1515,"src":"471:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1472,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:6"},"scope":1632,"src":"415:696:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"1290:100:6","statements":[{"id":1533,"nodeType":"UncheckedBlock","src":"1300:84:6","statements":[{"expression":{"arguments":[{"id":1524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"1343:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"1362:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1525,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"1350:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2533_$","typeString":"type(library Math)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2493,"src":"1350:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1523,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1535,1611,1631],"referencedDeclaration":1611,"src":"1331:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1522,"id":1532,"nodeType":"Return","src":"1324:49:6"}]}]},"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"1117:94:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:6","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"value","nameLocation":"1245:5:6","nodeType":"VariableDeclaration","scope":1535,"src":"1237:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:6"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1535,"src":"1275:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1520,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:6"},"scope":1632,"src":"1216:174:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"1603:347:6","statements":[{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:6","nodeType":"VariableDeclaration","scope":1610,"src":"1613:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1545,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1555,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1550,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"1649:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1547,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:6"},{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1556,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1670:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1558,"indexExpression":{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1561,"nodeType":"ExpressionStatement","src":"1670:15:6"},{"expression":{"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1562,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1695:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1564,"indexExpression":{"hexValue":"31","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1567,"nodeType":"ExpressionStatement","src":"1695:15:6"},{"body":{"id":1596,"nodeType":"Block","src":"1765:83:6","statements":[{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1582,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1779:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1584,"indexExpression":{"id":1583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1786:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1585,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1791:8:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1589,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"1800:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1591,"nodeType":"ExpressionStatement","src":"1779:33:6"},{"expression":{"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"1826:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1595,"nodeType":"ExpressionStatement","src":"1826:11:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1753:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1597,"initializationExpression":{"assignments":[1569],"declarations":[{"constant":false,"id":1569,"mutability":"mutable","name":"i","nameLocation":"1733:1:6","nodeType":"VariableDeclaration","scope":1597,"src":"1725:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1575,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1571,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"1741:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:6"},"loopExpression":{"expression":{"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:6","subExpression":{"id":1579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1762:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1581,"nodeType":"ExpressionStatement","src":"1760:3:6"},"nodeType":"ForStatement","src":"1720:128:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"1865:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"ExpressionStatement","src":"1857:55:6"},{"expression":{"arguments":[{"id":1607,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1936:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1605,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:6","typeDescriptions":{}}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1544,"id":1609,"nodeType":"Return","src":"1922:21:6"}]},"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"1396:112:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:6","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"value","nameLocation":"1542:5:6","nodeType":"VariableDeclaration","scope":1611,"src":"1534:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"length","nameLocation":"1557:6:6","nodeType":"VariableDeclaration","scope":1611,"src":"1549:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:6"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"1588:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1542,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:6"},"scope":1632,"src":"1513:437:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1630,"nodeType":"Block","src":"2175:76:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1624,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2220:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1622,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:6","typeDescriptions":{}}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:6","typeDescriptions":{}}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1627,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"2228:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1619,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1535,1611,1631],"referencedDeclaration":1611,"src":"2192:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1618,"id":1629,"nodeType":"Return","src":"2185:59:6"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"1956:141:6","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1631,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:6","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"addr","nameLocation":"2131:4:6","nodeType":"VariableDeclaration","scope":1631,"src":"2123:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:6"},"returnParameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"2160:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1616,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:6"},"scope":1632,"src":"2102:149:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1633,"src":"188:2065:6","usedErrors":[]}],"src":"101:2153:6"},"id":6},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1656],"IERC165":[1668]},"id":1657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1634,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1657,"sourceUnit":1669,"src":"124:23:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1637,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1668,"src":"754:7:7"},"id":1638,"nodeType":"InheritanceSpecifier","src":"754:7:7"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"149:576:7","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1656,"linearizedBaseContracts":[1656,1668],"name":"ERC165","nameLocation":"744:6:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1667],"body":{"id":1654,"nodeType":"Block","src":"920:64:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1647,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"937:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1649,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"957:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1668_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1668_$","typeString":"type(contract IERC165)"}],"id":1648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1668","typeString":"type(contract IERC165)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1646,"id":1653,"nodeType":"Return","src":"930:47:7"}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"768:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:7","nodeType":"FunctionDefinition","overrides":{"id":1643,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:7"},"parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:7","nodeType":"VariableDeclaration","scope":1655,"src":"856:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1640,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:7"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1655,"src":"914:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1644,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:7"},"scope":1656,"src":"829:155:7","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1657,"src":"726:260:7","usedErrors":[]}],"src":"99:888:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1668]},"id":1669,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1658,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"125:279:8","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1668,"linearizedBaseContracts":[1668],"name":"IERC165","nameLocation":"415:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"429:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1667,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:8","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:8","nodeType":"VariableDeclaration","scope":1667,"src":"801:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1661,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:8"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1667,"src":"844:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1664,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:8"},"scope":1668,"src":"774:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1669,"src":"405:447:8","usedErrors":[]}],"src":"100:753:8"},"id":8},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2533]},"id":2534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1670,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"128:73:9","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2533,"linearizedBaseContracts":[2533],"name":"Math","nameLocation":"210:4:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1675,"members":[{"id":1672,"name":"Down","nameLocation":"245:4:9","nodeType":"EnumValue","src":"245:4:9"},{"id":1673,"name":"Up","nameLocation":"287:2:9","nodeType":"EnumValue","src":"287:2:9"},{"id":1674,"name":"Zero","nameLocation":"318:4:9","nodeType":"EnumValue","src":"318:4:9"}],"name":"Rounding","nameLocation":"226:8:9","nodeType":"EnumDefinition","src":"221:122:9"},{"body":{"id":1692,"nodeType":"Block","src":"480:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"497:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1686,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"501:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"509:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:9","trueExpression":{"id":1688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"505:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1684,"id":1691,"nodeType":"Return","src":"490:20:9"}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"349:59:9","text":" @dev Returns the largest of two numbers."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:9","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"a","nameLocation":"434:1:9","nodeType":"VariableDeclaration","scope":1693,"src":"426:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"b","nameLocation":"445:1:9","nodeType":"VariableDeclaration","scope":1693,"src":"437:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:9"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"471:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:9"},"scope":2533,"src":"413:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"655:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"672:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1707,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"684:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:9","trueExpression":{"id":1706,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1702,"id":1709,"nodeType":"Return","src":"665:20:9"}]},"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"523:60:9","text":" @dev Returns the smallest of two numbers."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:9","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"a","nameLocation":"609:1:9","nodeType":"VariableDeclaration","scope":1711,"src":"601:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"b","nameLocation":"620:1:9","nodeType":"VariableDeclaration","scope":1711,"src":"612:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:9"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1711,"src":"646:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:9"},"scope":2533,"src":"588:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1733,"nodeType":"Block","src":"876:82:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"931:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"935:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"941:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"945:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1720,"id":1732,"nodeType":"Return","src":"923:28:9"}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"698:102:9","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1734,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:9","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"a","nameLocation":"830:1:9","nodeType":"VariableDeclaration","scope":1734,"src":"822:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"b","nameLocation":"841:1:9","nodeType":"VariableDeclaration","scope":1734,"src":"833:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:9"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1734,"src":"867:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:9"},"scope":2533,"src":"805:153:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1758,"nodeType":"Block","src":"1228:123:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"1316:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"1330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1752,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"1339:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:9","trueExpression":{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1743,"id":1757,"nodeType":"Return","src":"1309:35:9"}]},"documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"964:188:9","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1759,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:9","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"a","nameLocation":"1182:1:9","nodeType":"VariableDeclaration","scope":1759,"src":"1174:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"b","nameLocation":"1193:1:9","nodeType":"VariableDeclaration","scope":1759,"src":"1185:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:9"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1759,"src":"1219:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:9"},"scope":2533,"src":"1157:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1880,"nodeType":"Block","src":"1795:3797:9","statements":[{"id":1879,"nodeType":"UncheckedBlock","src":"1805:3781:9","statements":[{"assignments":[1772],"declarations":[{"constant":false,"id":1772,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:9","nodeType":"VariableDeclaration","scope":1879,"src":"2126:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1773,"nodeType":"VariableDeclarationStatement","src":"2126:13:9"},{"assignments":[1775],"declarations":[{"constant":false,"id":1775,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:9","nodeType":"VariableDeclaration","scope":1879,"src":"2198:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1776,"nodeType":"VariableDeclarationStatement","src":"2198:13:9"},{"AST":{"nodeType":"YulBlock","src":"2278:157:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:9"},"nodeType":"YulFunctionCall","src":"2319:6:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:9"},"nodeType":"YulFunctionCall","src":"2306:20:9"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:9","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:9"},"nodeType":"YulFunctionCall","src":"2352:9:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:9"}]},{"nodeType":"YulAssignment","src":"2378:43:9","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:9"},"nodeType":"YulFunctionCall","src":"2391:14:9"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:9"},"nodeType":"YulFunctionCall","src":"2407:13:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:9"},"nodeType":"YulFunctionCall","src":"2387:34:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1772,"isOffset":false,"isSlot":false,"src":"2343:5:9","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"2399:5:9","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"2414:5:9","valueSize":1},{"declaration":1775,"isOffset":false,"isSlot":false,"src":"2378:5:9","valueSize":1},{"declaration":1762,"isOffset":false,"isSlot":false,"src":"2313:1:9","valueSize":1},{"declaration":1762,"isOffset":false,"isSlot":false,"src":"2356:1:9","valueSize":1},{"declaration":1764,"isOffset":false,"isSlot":false,"src":"2316:1:9","valueSize":1},{"declaration":1764,"isOffset":false,"isSlot":false,"src":"2359:1:9","valueSize":1}],"id":1777,"nodeType":"InlineAssembly","src":"2269:166:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"2516:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1786,"nodeType":"IfStatement","src":"2512:75:9","trueBody":{"id":1785,"nodeType":"Block","src":"2528:59:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"2553:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1782,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"2561:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1770,"id":1784,"nodeType":"Return","src":"2546:26:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"2697:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1789,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"2711:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"ExpressionStatement","src":"2689:28:9"},{"assignments":[1794],"declarations":[{"constant":false,"id":1794,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:9","nodeType":"VariableDeclaration","scope":1879,"src":"2973:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1795,"nodeType":"VariableDeclarationStatement","src":"2973:17:9"},{"AST":{"nodeType":"YulBlock","src":"3013:291:9","statements":[{"nodeType":"YulAssignment","src":"3082:38:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:9"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:9"},"nodeType":"YulFunctionCall","src":"3095:25:9"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:9"}]},{"nodeType":"YulAssignment","src":"3202:41:9","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:9"},"nodeType":"YulFunctionCall","src":"3222:20:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:9"},"nodeType":"YulFunctionCall","src":"3211:32:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:9"}]},{"nodeType":"YulAssignment","src":"3260:30:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:9"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:9"},"nodeType":"YulFunctionCall","src":"3269:21:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1766,"isOffset":false,"isSlot":false,"src":"3108:11:9","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"3236:5:9","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"3260:5:9","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"3273:5:9","valueSize":1},{"declaration":1775,"isOffset":false,"isSlot":false,"src":"3202:5:9","valueSize":1},{"declaration":1775,"isOffset":false,"isSlot":false,"src":"3215:5:9","valueSize":1},{"declaration":1794,"isOffset":false,"isSlot":false,"src":"3082:9:9","valueSize":1},{"declaration":1794,"isOffset":false,"isSlot":false,"src":"3225:9:9","valueSize":1},{"declaration":1794,"isOffset":false,"isSlot":false,"src":"3280:9:9","valueSize":1},{"declaration":1762,"isOffset":false,"isSlot":false,"src":"3102:1:9","valueSize":1},{"declaration":1764,"isOffset":false,"isSlot":false,"src":"3105:1:9","valueSize":1}],"id":1796,"nodeType":"InlineAssembly","src":"3004:300:9"},{"assignments":[1798],"declarations":[{"constant":false,"id":1798,"mutability":"mutable","name":"twos","nameLocation":"3619:4:9","nodeType":"VariableDeclaration","scope":1879,"src":"3611:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1806,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1799,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"3626:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:9","subExpression":{"id":1800,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"3642:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:9"},{"AST":{"nodeType":"YulBlock","src":"3681:362:9","statements":[{"nodeType":"YulAssignment","src":"3746:37:9","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:9"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:9"},"nodeType":"YulFunctionCall","src":"3761:22:9"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:9"}]},{"nodeType":"YulAssignment","src":"3850:25:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:9"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:9"},"nodeType":"YulFunctionCall","src":"3859:16:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:9"}]},{"nodeType":"YulAssignment","src":"3990:39:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:9","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:9"},"nodeType":"YulFunctionCall","src":"4006:12:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:9"},"nodeType":"YulFunctionCall","src":"4002:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:9"},"nodeType":"YulFunctionCall","src":"3998:31:9"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1766,"isOffset":false,"isSlot":false,"src":"3746:11:9","valueSize":1},{"declaration":1766,"isOffset":false,"isSlot":false,"src":"3765:11:9","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"3850:5:9","valueSize":1},{"declaration":1772,"isOffset":false,"isSlot":false,"src":"3863:5:9","valueSize":1},{"declaration":1798,"isOffset":false,"isSlot":false,"src":"3778:4:9","valueSize":1},{"declaration":1798,"isOffset":false,"isSlot":false,"src":"3870:4:9","valueSize":1},{"declaration":1798,"isOffset":false,"isSlot":false,"src":"3990:4:9","valueSize":1},{"declaration":1798,"isOffset":false,"isSlot":false,"src":"4013:4:9","valueSize":1},{"declaration":1798,"isOffset":false,"isSlot":false,"src":"4020:4:9","valueSize":1}],"id":1807,"nodeType":"InlineAssembly","src":"3672:371:9"},{"expression":{"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1808,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4109:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1809,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"4118:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1810,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"4126:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1813,"nodeType":"ExpressionStatement","src":"4109:21:9"},{"assignments":[1815],"declarations":[{"constant":false,"id":1815,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:9","nodeType":"VariableDeclaration","scope":1879,"src":"4448:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1822,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1817,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4471:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:9"},{"expression":{"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1823,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4704:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4719:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1826,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4733:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1830,"nodeType":"ExpressionStatement","src":"4704:36:9"},{"expression":{"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1831,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4773:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4788:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1834,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4802:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1838,"nodeType":"ExpressionStatement","src":"4773:36:9"},{"expression":{"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1839,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4843:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4858:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1842,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4872:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1846,"nodeType":"ExpressionStatement","src":"4843:36:9"},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1847,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4913:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1849,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4928:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1850,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4942:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1854,"nodeType":"ExpressionStatement","src":"4913:36:9"},{"expression":{"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1855,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"4983:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4998:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1858,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"5012:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1862,"nodeType":"ExpressionStatement","src":"4983:36:9"},{"expression":{"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1863,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"5054:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"5069:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1866,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"5083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1870,"nodeType":"ExpressionStatement","src":"5054:36:9"},{"expression":{"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5524:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1872,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"5533:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1873,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"5541:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1876,"nodeType":"ExpressionStatement","src":"5524:24:9"},{"expression":{"id":1877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5569:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1770,"id":1878,"nodeType":"Return","src":"5562:13:9"}]}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"1357:305:9","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1881,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:9","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"x","nameLocation":"1700:1:9","nodeType":"VariableDeclaration","scope":1881,"src":"1692:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"y","nameLocation":"1719:1:9","nodeType":"VariableDeclaration","scope":1881,"src":"1711:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:9","nodeType":"VariableDeclaration","scope":1881,"src":"1730:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:9"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"result","nameLocation":"1787:6:9","nodeType":"VariableDeclaration","scope":1881,"src":"1779:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:9"},"scope":2533,"src":"1667:3925:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1924,"nodeType":"Block","src":"5872:189:9","statements":[{"assignments":[1897],"declarations":[{"constant":false,"id":1897,"mutability":"mutable","name":"result","nameLocation":"5890:6:9","nodeType":"VariableDeclaration","scope":1924,"src":"5882:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1903,"initialValue":{"arguments":[{"id":1899,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"5906:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1900,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"5909:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1901,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"5912:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1898,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1881,1925],"referencedDeclaration":1881,"src":"5899:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1904,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"5938:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1905,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5950:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1675_$","typeString":"type(enum Math.Rounding)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"5950:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"src":"5938:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1909,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"5972:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1910,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"5975:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1911,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"5978:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1908,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:9","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1921,"nodeType":"IfStatement","src":"5934:98:9","trueBody":{"id":1920,"nodeType":"Block","src":"5996:36:9","statements":[{"expression":{"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"6010:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1919,"nodeType":"ExpressionStatement","src":"6010:11:9"}]}},{"expression":{"id":1922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"6048:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1895,"id":1923,"nodeType":"Return","src":"6041:13:9"}]},"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"5598:121:9","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:9","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"x","nameLocation":"5757:1:9","nodeType":"VariableDeclaration","scope":1925,"src":"5749:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"y","nameLocation":"5776:1:9","nodeType":"VariableDeclaration","scope":1925,"src":"5768:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:9","nodeType":"VariableDeclaration","scope":1925,"src":"5787:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:9","nodeType":"VariableDeclaration","scope":1925,"src":"5816:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"typeName":{"id":1890,"nodeType":"UserDefinedTypeName","pathNode":{"id":1889,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1675,"src":"5816:8:9"},"referencedDeclaration":1675,"src":"5816:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:9"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1925,"src":"5863:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:9"},"scope":2533,"src":"5724:337:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"6337:1585:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1933,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"6351:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1939,"nodeType":"IfStatement","src":"6347:45:9","trueBody":{"id":1938,"nodeType":"Block","src":"6359:33:9","statements":[{"expression":{"hexValue":"30","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1932,"id":1937,"nodeType":"Return","src":"6373:8:9"}]}},{"assignments":[1941],"declarations":[{"constant":false,"id":1941,"mutability":"mutable","name":"result","nameLocation":"7079:6:9","nodeType":"VariableDeclaration","scope":2036,"src":"7071:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1950,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7099:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1943,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2205,2241],"referencedDeclaration":2205,"src":"7094:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:9"},{"id":2035,"nodeType":"UncheckedBlock","src":"7508:408:9","statements":[{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7532:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7542:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7551:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7555:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ExpressionStatement","src":"7532:35:9"},{"expression":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7581:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7591:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7600:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7604:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ExpressionStatement","src":"7581:35:9"},{"expression":{"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7630:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7640:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7649:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7653:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1983,"nodeType":"ExpressionStatement","src":"7630:35:9"},{"expression":{"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7679:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7689:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7698:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7702:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1994,"nodeType":"ExpressionStatement","src":"7679:35:9"},{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7728:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7738:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7747:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7751:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"7728:35:9"},{"expression":{"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7777:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7787:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7796:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2009,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7800:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2016,"nodeType":"ExpressionStatement","src":"7777:35:9"},{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2017,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7826:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7836:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7845:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7849:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"7826:35:9"},{"expression":{"arguments":[{"id":2029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7886:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"7894:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7898:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2028,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"7882:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1932,"id":2034,"nodeType":"Return","src":"7875:30:9"}]}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"6067:208:9","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:9","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"a","nameLocation":"6302:1:9","nodeType":"VariableDeclaration","scope":2037,"src":"6294:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:9"},"returnParameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"6328:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:9"},"scope":2533,"src":"6280:1642:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2072,"nodeType":"Block","src":"8098:161:9","statements":[{"id":2071,"nodeType":"UncheckedBlock","src":"8108:145:9","statements":[{"assignments":[2049],"declarations":[{"constant":false,"id":2049,"mutability":"mutable","name":"result","nameLocation":"8140:6:9","nodeType":"VariableDeclaration","scope":2071,"src":"8132:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2053,"initialValue":{"arguments":[{"id":2051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"8154:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2050,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2037,2073],"referencedDeclaration":2037,"src":"8149:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"8177:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8187:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2056,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"8199:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1675_$","typeString":"type(enum Math.Rounding)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"8199:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"src":"8187:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"8214:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"8223:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2062,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"8232:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:9","trueExpression":{"hexValue":"31","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2047,"id":2070,"nodeType":"Return","src":"8170:72:9"}]}]},"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"7928:89:9","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:9","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"a","nameLocation":"8044:1:9","nodeType":"VariableDeclaration","scope":2073,"src":"8036:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:9","nodeType":"VariableDeclaration","scope":2073,"src":"8047:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"typeName":{"id":2042,"nodeType":"UserDefinedTypeName","pathNode":{"id":2041,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1675,"src":"8047:8:9"},"referencedDeclaration":1675,"src":"8047:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:9"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2073,"src":"8089:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:9"},"scope":2533,"src":"8022:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"8444:922:9","statements":[{"assignments":[2082],"declarations":[{"constant":false,"id":2082,"mutability":"mutable","name":"result","nameLocation":"8462:6:9","nodeType":"VariableDeclaration","scope":2204,"src":"8454:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2084,"initialValue":{"hexValue":"30","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:9"},{"id":2201,"nodeType":"UncheckedBlock","src":"8482:855:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8510:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"8506:99:9","trueBody":{"id":2098,"nodeType":"Block","src":"8528:77:9","statements":[{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8546:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"8546:13:9"},{"expression":{"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"8577:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2097,"nodeType":"ExpressionStatement","src":"8577:13:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8622:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2114,"nodeType":"IfStatement","src":"8618:96:9","trueBody":{"id":2113,"nodeType":"Block","src":"8639:75:9","statements":[{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8657:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2108,"nodeType":"ExpressionStatement","src":"8657:12:9"},{"expression":{"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"8687:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2112,"nodeType":"ExpressionStatement","src":"8687:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8731:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2129,"nodeType":"IfStatement","src":"8727:96:9","trueBody":{"id":2128,"nodeType":"Block","src":"8748:75:9","statements":[{"expression":{"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8766:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2123,"nodeType":"ExpressionStatement","src":"8766:12:9"},{"expression":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"8796:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2127,"nodeType":"ExpressionStatement","src":"8796:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8840:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2144,"nodeType":"IfStatement","src":"8836:96:9","trueBody":{"id":2143,"nodeType":"Block","src":"8857:75:9","statements":[{"expression":{"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8875:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2138,"nodeType":"ExpressionStatement","src":"8875:12:9"},{"expression":{"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"8905:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2142,"nodeType":"ExpressionStatement","src":"8905:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8949:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2159,"nodeType":"IfStatement","src":"8945:93:9","trueBody":{"id":2158,"nodeType":"Block","src":"8965:73:9","statements":[{"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"8983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"nodeType":"ExpressionStatement","src":"8983:11:9"},{"expression":{"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"9012:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2157,"nodeType":"ExpressionStatement","src":"9012:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9055:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"nodeType":"IfStatement","src":"9051:93:9","trueBody":{"id":2173,"nodeType":"Block","src":"9071:73:9","statements":[{"expression":{"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9089:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2168,"nodeType":"ExpressionStatement","src":"9089:11:9"},{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2169,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"9118:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ExpressionStatement","src":"9118:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9161:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2189,"nodeType":"IfStatement","src":"9157:93:9","trueBody":{"id":2188,"nodeType":"Block","src":"9177:73:9","statements":[{"expression":{"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9195:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2183,"nodeType":"ExpressionStatement","src":"9195:11:9"},{"expression":{"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"9224:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2187,"nodeType":"ExpressionStatement","src":"9224:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9267:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2200,"nodeType":"IfStatement","src":"9263:64:9","trueBody":{"id":2199,"nodeType":"Block","src":"9283:44:9","statements":[{"expression":{"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"9301:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2198,"nodeType":"ExpressionStatement","src":"9301:11:9"}]}}]},{"expression":{"id":2202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"9353:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2080,"id":2203,"nodeType":"Return","src":"9346:13:9"}]},"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"8265:113:9","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:9","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"value","nameLocation":"8405:5:9","nodeType":"VariableDeclaration","scope":2205,"src":"8397:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:9"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"8435:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:9"},"scope":2533,"src":"8383:983:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2240,"nodeType":"Block","src":"9599:165:9","statements":[{"id":2239,"nodeType":"UncheckedBlock","src":"9609:149:9","statements":[{"assignments":[2217],"declarations":[{"constant":false,"id":2217,"mutability":"mutable","name":"result","nameLocation":"9641:6:9","nodeType":"VariableDeclaration","scope":2239,"src":"9633:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2221,"initialValue":{"arguments":[{"id":2219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"9655:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2218,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2205,2241],"referencedDeclaration":2205,"src":"9650:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2222,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"9682:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2223,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"9692:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2224,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"9704:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1675_$","typeString":"type(enum Math.Rounding)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"9704:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"src":"9692:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"9724:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"9733:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:9","trueExpression":{"hexValue":"31","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2215,"id":2238,"nodeType":"Return","src":"9675:72:9"}]}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"9372:142:9","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:9","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"value","nameLocation":"9541:5:9","nodeType":"VariableDeclaration","scope":2241,"src":"9533:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:9","nodeType":"VariableDeclaration","scope":2241,"src":"9548:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"typeName":{"id":2210,"nodeType":"UserDefinedTypeName","pathNode":{"id":2209,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1675,"src":"9548:8:9"},"referencedDeclaration":1675,"src":"9548:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:9"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2241,"src":"9590:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:9"},"scope":2533,"src":"9519:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2369,"nodeType":"Block","src":"9951:828:9","statements":[{"assignments":[2250],"declarations":[{"constant":false,"id":2250,"mutability":"mutable","name":"result","nameLocation":"9969:6:9","nodeType":"VariableDeclaration","scope":2369,"src":"9961:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2252,"initialValue":{"hexValue":"30","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:9"},{"id":2366,"nodeType":"UncheckedBlock","src":"9989:761:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10017:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2269,"nodeType":"IfStatement","src":"10013:99:9","trueBody":{"id":2268,"nodeType":"Block","src":"10034:78:9","statements":[{"expression":{"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10052:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2263,"nodeType":"ExpressionStatement","src":"10052:15:9"},{"expression":{"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"10085:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2267,"nodeType":"ExpressionStatement","src":"10085:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10129:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2286,"nodeType":"IfStatement","src":"10125:99:9","trueBody":{"id":2285,"nodeType":"Block","src":"10146:78:9","statements":[{"expression":{"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2280,"nodeType":"ExpressionStatement","src":"10164:15:9"},{"expression":{"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"10197:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2284,"nodeType":"ExpressionStatement","src":"10197:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10241:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2303,"nodeType":"IfStatement","src":"10237:99:9","trueBody":{"id":2302,"nodeType":"Block","src":"10258:78:9","statements":[{"expression":{"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10276:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2297,"nodeType":"ExpressionStatement","src":"10276:15:9"},{"expression":{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"10309:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"nodeType":"ExpressionStatement","src":"10309:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10353:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2320,"nodeType":"IfStatement","src":"10349:96:9","trueBody":{"id":2319,"nodeType":"Block","src":"10369:76:9","statements":[{"expression":{"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2314,"nodeType":"ExpressionStatement","src":"10387:14:9"},{"expression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2315,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"10419:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2318,"nodeType":"ExpressionStatement","src":"10419:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10462:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2337,"nodeType":"IfStatement","src":"10458:96:9","trueBody":{"id":2336,"nodeType":"Block","src":"10478:76:9","statements":[{"expression":{"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2331,"nodeType":"ExpressionStatement","src":"10496:14:9"},{"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"10528:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2335,"nodeType":"ExpressionStatement","src":"10528:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10571:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2354,"nodeType":"IfStatement","src":"10567:96:9","trueBody":{"id":2353,"nodeType":"Block","src":"10587:76:9","statements":[{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10605:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ExpressionStatement","src":"10605:14:9"},{"expression":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"10637:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2352,"nodeType":"ExpressionStatement","src":"10637:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10680:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2365,"nodeType":"IfStatement","src":"10676:64:9","trueBody":{"id":2364,"nodeType":"Block","src":"10696:44:9","statements":[{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"10714:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ExpressionStatement","src":"10714:11:9"}]}}]},{"expression":{"id":2367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"10766:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2248,"id":2368,"nodeType":"Return","src":"10759:13:9"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"9770:114:9","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2370,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:9","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"value","nameLocation":"9912:5:9","nodeType":"VariableDeclaration","scope":2370,"src":"9904:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:9"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"9942:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:9"},"scope":2533,"src":"9889:890:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2405,"nodeType":"Block","src":"11014:165:9","statements":[{"id":2404,"nodeType":"UncheckedBlock","src":"11024:149:9","statements":[{"assignments":[2382],"declarations":[{"constant":false,"id":2382,"mutability":"mutable","name":"result","nameLocation":"11056:6:9","nodeType":"VariableDeclaration","scope":2404,"src":"11048:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2386,"initialValue":{"arguments":[{"id":2384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"11071:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2383,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2370,2406],"referencedDeclaration":2370,"src":"11065:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"11098:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"11108:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2389,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"11120:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1675_$","typeString":"type(enum Math.Rounding)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"11120:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"src":"11108:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"11139:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"11148:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:9","trueExpression":{"hexValue":"31","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2380,"id":2403,"nodeType":"Return","src":"11091:71:9"}]}]},"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"10785:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:9","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"value","nameLocation":"10956:5:9","nodeType":"VariableDeclaration","scope":2406,"src":"10948:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:9","nodeType":"VariableDeclaration","scope":2406,"src":"10963:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"typeName":{"id":2375,"nodeType":"UserDefinedTypeName","pathNode":{"id":2374,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1675,"src":"10963:8:9"},"referencedDeclaration":1675,"src":"10963:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:9"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"11005:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:9"},"scope":2533,"src":"10933:246:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2492,"nodeType":"Block","src":"11493:600:9","statements":[{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"result","nameLocation":"11511:6:9","nodeType":"VariableDeclaration","scope":2492,"src":"11503:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2417,"initialValue":{"hexValue":"30","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:9"},{"id":2489,"nodeType":"UncheckedBlock","src":"11531:533:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"11559:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"IfStatement","src":"11555:98:9","trueBody":{"id":2431,"nodeType":"Block","src":"11577:76:9","statements":[{"expression":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"11595:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2426,"nodeType":"ExpressionStatement","src":"11595:13:9"},{"expression":{"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"11626:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2430,"nodeType":"ExpressionStatement","src":"11626:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"11670:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2447,"nodeType":"IfStatement","src":"11666:95:9","trueBody":{"id":2446,"nodeType":"Block","src":"11687:74:9","statements":[{"expression":{"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"11705:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2441,"nodeType":"ExpressionStatement","src":"11705:12:9"},{"expression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"11735:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"nodeType":"ExpressionStatement","src":"11735:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"11778:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2462,"nodeType":"IfStatement","src":"11774:95:9","trueBody":{"id":2461,"nodeType":"Block","src":"11795:74:9","statements":[{"expression":{"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"11813:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2456,"nodeType":"ExpressionStatement","src":"11813:12:9"},{"expression":{"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"11843:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2460,"nodeType":"ExpressionStatement","src":"11843:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"11886:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2477,"nodeType":"IfStatement","src":"11882:95:9","trueBody":{"id":2476,"nodeType":"Block","src":"11903:74:9","statements":[{"expression":{"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"11921:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2471,"nodeType":"ExpressionStatement","src":"11921:12:9"},{"expression":{"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"11951:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2475,"nodeType":"ExpressionStatement","src":"11951:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"11994:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2488,"nodeType":"IfStatement","src":"11990:64:9","trueBody":{"id":2487,"nodeType":"Block","src":"12010:44:9","statements":[{"expression":{"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"12028:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2486,"nodeType":"ExpressionStatement","src":"12028:11:9"}]}}]},{"expression":{"id":2490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"12080:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2413,"id":2491,"nodeType":"Return","src":"12073:13:9"}]},"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"11185:240:9","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2493,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:9","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"value","nameLocation":"11454:5:9","nodeType":"VariableDeclaration","scope":2493,"src":"11446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:9"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2493,"src":"11484:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:9"},"scope":2533,"src":"11430:663:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2531,"nodeType":"Block","src":"12329:173:9","statements":[{"id":2530,"nodeType":"UncheckedBlock","src":"12339:157:9","statements":[{"assignments":[2505],"declarations":[{"constant":false,"id":2505,"mutability":"mutable","name":"result","nameLocation":"12371:6:9","nodeType":"VariableDeclaration","scope":2530,"src":"12363:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2509,"initialValue":{"arguments":[{"id":2507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"12387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2506,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2493,2532],"referencedDeclaration":2493,"src":"12380:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"12414:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"12424:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2512,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"12436:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1675_$","typeString":"type(enum Math.Rounding)"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"12436:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"src":"12424:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"12457:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"12471:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:9","trueExpression":{"hexValue":"31","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2503,"id":2529,"nodeType":"Return","src":"12407:78:9"}]}]},"documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"12099:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2532,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:9","nodeType":"FunctionDefinition","parameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"value","nameLocation":"12271:5:9","nodeType":"VariableDeclaration","scope":2532,"src":"12263:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:9","nodeType":"VariableDeclaration","scope":2532,"src":"12278:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"},"typeName":{"id":2498,"nodeType":"UserDefinedTypeName","pathNode":{"id":2497,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1675,"src":"12278:8:9"},"referencedDeclaration":1675,"src":"12278:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1675","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:9"},"returnParameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2532,"src":"12320:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:9"},"scope":2533,"src":"12247:255:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2534,"src":"202:12302:9","usedErrors":[]}],"src":"103:12402:9"},"id":9},"base64-sol/base64.sol":{"ast":{"absolutePath":"base64-sol/base64.sol","exportedSymbols":{"Base64":[2583]},"id":2584,"license":"MIT","nodeType":"SourceUnit","nodes":[{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"33:133:10","text":"@title Base64\n @author Brecht Devos - <brecht@loopring.org>\n @notice Provides a function for encoding some bytes in base64"},"fullyImplemented":true,"id":2583,"linearizedBaseContracts":[2583],"name":"Base64","nameLocation":"174:6:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2538,"mutability":"constant","name":"TABLE","nameLocation":"212:5:10","nodeType":"VariableDeclaration","scope":2583,"src":"187:99:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2536,"name":"string","nodeType":"ElementaryTypeName","src":"187:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"220:66:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"body":{"id":2581,"nodeType":"Block","src":"366:1912:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2545,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"380:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"380:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"395:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"380:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2551,"nodeType":"IfStatement","src":"376:31:10","trueBody":{"expression":{"hexValue":"","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"405:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2544,"id":2550,"nodeType":"Return","src":"398:9:10"}},{"assignments":[2553],"declarations":[{"constant":false,"id":2553,"mutability":"mutable","name":"table","nameLocation":"478:5:10","nodeType":"VariableDeclaration","scope":2581,"src":"464:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2552,"name":"string","nodeType":"ElementaryTypeName","src":"464:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2555,"initialValue":{"id":2554,"name":"TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"486:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"464:27:10"},{"assignments":[2557],"declarations":[{"constant":false,"id":2557,"mutability":"mutable","name":"encodedLen","nameLocation":"548:10:10","nodeType":"VariableDeclaration","scope":2581,"src":"540:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2568,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"561:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2559,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"567:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"567:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"581:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"567:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"566:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"586:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"566:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2566,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"565:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"561:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"540:48:10"},{"assignments":[2570],"declarations":[{"constant":false,"id":2570,"mutability":"mutable","name":"result","nameLocation":"682:6:10","nodeType":"VariableDeclaration","scope":2581,"src":"668:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2569,"name":"string","nodeType":"ElementaryTypeName","src":"668:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2577,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"encodedLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"702:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"715:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"702:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"691:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2571,"name":"string","nodeType":"ElementaryTypeName","src":"695:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"691:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"668:50:10"},{"AST":{"nodeType":"YulBlock","src":"738:1502:10","statements":[{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"803:6:10"},{"name":"encodedLen","nodeType":"YulIdentifier","src":"811:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"796:6:10"},"nodeType":"YulFunctionCall","src":"796:26:10"},"nodeType":"YulExpressionStatement","src":"796:26:10"},{"nodeType":"YulVariableDeclaration","src":"888:29:10","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"908:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"915:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"904:3:10"},"nodeType":"YulFunctionCall","src":"904:13:10"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"892:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"968:19:10","value":{"name":"data","nodeType":"YulIdentifier","src":"983:4:10"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"972:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1000:39:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1018:7:10"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1033:4:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1027:5:10"},"nodeType":"YulFunctionCall","src":"1027:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1014:3:10"},"nodeType":"YulFunctionCall","src":"1014:25:10"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1004:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1109:32:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1130:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1138:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1126:3:10"},"nodeType":"YulFunctionCall","src":"1126:15:10"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1113:9:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1262:752:10","statements":[{"nodeType":"YulAssignment","src":"1279:26:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1294:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"1303:1:10","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1290:3:10"},"nodeType":"YulFunctionCall","src":"1290:15:10"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1279:7:10"}]},{"nodeType":"YulVariableDeclaration","src":"1368:27:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1387:7:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1381:5:10"},"nodeType":"YulFunctionCall","src":"1381:14:10"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"1372:5:10","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1471:9:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1486:3:10","type":"","value":"248"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"1501:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1519:2:10","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"1523:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1515:3:10"},"nodeType":"YulFunctionCall","src":"1515:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"1531:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1511:3:10"},"nodeType":"YulFunctionCall","src":"1511:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1497:3:10"},"nodeType":"YulFunctionCall","src":"1497:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1491:5:10"},"nodeType":"YulFunctionCall","src":"1491:47:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1482:3:10"},"nodeType":"YulFunctionCall","src":"1482:57:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:10"},"nodeType":"YulFunctionCall","src":"1464:76:10"},"nodeType":"YulExpressionStatement","src":"1464:76:10"},{"nodeType":"YulAssignment","src":"1556:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1573:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1584:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1569:3:10"},"nodeType":"YulFunctionCall","src":"1569:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1556:9:10"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1609:9:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1624:3:10","type":"","value":"248"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"1639:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1657:2:10","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"1661:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1653:3:10"},"nodeType":"YulFunctionCall","src":"1653:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"1669:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1649:3:10"},"nodeType":"YulFunctionCall","src":"1649:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1635:3:10"},"nodeType":"YulFunctionCall","src":"1635:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1629:5:10"},"nodeType":"YulFunctionCall","src":"1629:47:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1620:3:10"},"nodeType":"YulFunctionCall","src":"1620:57:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1602:6:10"},"nodeType":"YulFunctionCall","src":"1602:76:10"},"nodeType":"YulExpressionStatement","src":"1602:76:10"},{"nodeType":"YulAssignment","src":"1694:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1711:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1707:3:10"},"nodeType":"YulFunctionCall","src":"1707:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1694:9:10"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1747:9:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1762:3:10","type":"","value":"248"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"1777:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1796:1:10","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"1799:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1791:3:10"},"nodeType":"YulFunctionCall","src":"1791:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"1807:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1787:3:10"},"nodeType":"YulFunctionCall","src":"1787:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1773:3:10"},"nodeType":"YulFunctionCall","src":"1773:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1767:5:10"},"nodeType":"YulFunctionCall","src":"1767:47:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1758:3:10"},"nodeType":"YulFunctionCall","src":"1758:57:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1740:6:10"},"nodeType":"YulFunctionCall","src":"1740:76:10"},"nodeType":"YulExpressionStatement","src":"1740:76:10"},{"nodeType":"YulAssignment","src":"1832:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1849:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1860:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1845:3:10"},"nodeType":"YulFunctionCall","src":"1845:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1832:9:10"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1885:9:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1900:3:10","type":"","value":"248"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"1915:8:10"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"1937:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1945:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1925:3:10"},"nodeType":"YulFunctionCall","src":"1925:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:10"},"nodeType":"YulFunctionCall","src":"1911:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1905:5:10"},"nodeType":"YulFunctionCall","src":"1905:47:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1896:3:10"},"nodeType":"YulFunctionCall","src":"1896:57:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1878:6:10"},"nodeType":"YulFunctionCall","src":"1878:76:10"},"nodeType":"YulExpressionStatement","src":"1878:76:10"},{"nodeType":"YulAssignment","src":"1970:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1987:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1998:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1983:3:10"},"nodeType":"YulFunctionCall","src":"1983:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1970:9:10"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1230:7:10"},{"name":"endPtr","nodeType":"YulIdentifier","src":"1239:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1227:2:10"},"nodeType":"YulFunctionCall","src":"1227:19:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1247:2:10","statements":[]},"pre":{"nodeType":"YulBlock","src":"1224:2:10","statements":[]},"src":"1220:794:10"},{"cases":[{"body":{"nodeType":"YulBlock","src":"2118:47:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2131:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2142:1:10","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2127:3:10"},"nodeType":"YulFunctionCall","src":"2127:17:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2150:3:10","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"2155:6:10","type":"","value":"0x3d3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2146:3:10"},"nodeType":"YulFunctionCall","src":"2146:16:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2120:6:10"},"nodeType":"YulFunctionCall","src":"2120:43:10"},"nodeType":"YulExpressionStatement","src":"2120:43:10"}]},"nodeType":"YulCase","src":"2111:54:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2116:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2185:45:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2198:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2209:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2194:3:10"},"nodeType":"YulFunctionCall","src":"2194:17:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2217:3:10","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"2222:4:10","type":"","value":"0x3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2213:3:10"},"nodeType":"YulFunctionCall","src":"2213:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2187:6:10"},"nodeType":"YulFunctionCall","src":"2187:41:10"},"nodeType":"YulExpressionStatement","src":"2187:41:10"}]},"nodeType":"YulCase","src":"2178:52:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2183:1:10","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2089:4:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2083:5:10"},"nodeType":"YulFunctionCall","src":"2083:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"2096:1:10","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"2079:3:10"},"nodeType":"YulFunctionCall","src":"2079:19:10"},"nodeType":"YulSwitch","src":"2072:158:10"}]},"evmVersion":"london","externalReferences":[{"declaration":2540,"isOffset":false,"isSlot":false,"src":"1033:4:10","valueSize":1},{"declaration":2540,"isOffset":false,"isSlot":false,"src":"2089:4:10","valueSize":1},{"declaration":2540,"isOffset":false,"isSlot":false,"src":"983:4:10","valueSize":1},{"declaration":2557,"isOffset":false,"isSlot":false,"src":"811:10:10","valueSize":1},{"declaration":2570,"isOffset":false,"isSlot":false,"src":"1130:6:10","valueSize":1},{"declaration":2570,"isOffset":false,"isSlot":false,"src":"803:6:10","valueSize":1},{"declaration":2553,"isOffset":false,"isSlot":false,"src":"908:5:10","valueSize":1}],"id":2578,"nodeType":"InlineAssembly","src":"729:1511:10"},{"expression":{"id":2579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"2265:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2544,"id":2580,"nodeType":"Return","src":"2258:13:10"}]},"id":2582,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"302:6:10","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"data","nameLocation":"322:4:10","nodeType":"VariableDeclaration","scope":2582,"src":"309:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2539,"name":"bytes","nodeType":"ElementaryTypeName","src":"309:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"308:19:10"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2582,"src":"351:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2542,"name":"string","nodeType":"ElementaryTypeName","src":"351:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"350:15:10"},"scope":2583,"src":"293:1985:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2584,"src":"166:2114:10","usedErrors":[]}],"src":"166:2115:10"},"id":10},"contracts/NftPilarofEd.sol":{"ast":{"absolutePath":"contracts/NftPilarofEd.sol","exportedSymbols":{"Address":[1435],"Base64":[2583],"Context":[1457],"ERC165":[1656],"ERC721":[944],"IERC165":[1668],"IERC721":[1060],"IERC721Metadata":[1105],"IERC721Receiver":[1078],"Math":[2533],"NftPilarofEducation":[2720],"Strings":[1632]},"id":2721,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2585,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":2586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2721,"sourceUnit":945,"src":"57:57:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"base64-sol/base64.sol","file":"base64-sol/base64.sol","id":2587,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2721,"sourceUnit":2584,"src":"115:31:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2588,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":944,"src":"180:6:11"},"id":2589,"nodeType":"InheritanceSpecifier","src":"180:6:11"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2720,"linearizedBaseContracts":[2720,944,1105,1060,1656,1668,1457],"name":"NftPilarofEducation","nameLocation":"157:19:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"5dbe700f","id":2592,"mutability":"constant","name":"TOKEN_IMAGE_URI","nameLocation":"216:15:11","nodeType":"VariableDeclaration","scope":2720,"src":"193:118:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2590,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"68747470733a2f2f697066732e696f2f697066732f516d5565585636335676725958774436356774457a365746434a786f363250484a3570437569664336716d367555","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"242:69:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a3a56ff8803e902906575aa50819e8f812d6910052035155e319b722554282d","typeString":"literal_string \"https://ipfs.io/ipfs/QmUeXV63VvrYXwD65gtEz6WFCJxo62PHJ5pCuifC6qm6uU\""},"value":"https://ipfs.io/ipfs/QmUeXV63VvrYXwD65gtEz6WFCJxo62PHJ5pCuifC6qm6uU"},"visibility":"public"},{"constant":false,"id":2594,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"334:14:11","nodeType":"VariableDeclaration","scope":2720,"src":"317:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"f5d18d35","id":2598,"mutability":"mutable","name":"s_hasNft","nameLocation":"386:8:11","nodeType":"VariableDeclaration","scope":2720,"src":"354:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2597,"keyType":{"id":2595,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"354:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2596,"name":"bool","nodeType":"ElementaryTypeName","src":"373:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":2609,"nodeType":"Block","src":"491:35:11","statements":[{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2605,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"501:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"501:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2608,"nodeType":"ExpressionStatement","src":"501:18:11"}]},"id":2610,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"53747265616d547269766961","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"430:14:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_695c703cee16e53bcd22e9feede5985bf185d9513bcfd0ae78b774c19c968491","typeString":"literal_string \"StreamTrivia\""},"value":"StreamTrivia"},{"hexValue":"6c6576656c2031","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"445:9:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa83a2bbf3b96125764ed9e3a1a8eb5164fe9a936752d6e59889243b8c075e87","typeString":"literal_string \"level 1\""},"value":"level 1"}],"id":2603,"kind":"baseConstructorSpecifier","modifierName":{"id":2600,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":944,"src":"423:6:11"},"nodeType":"ModifierInvocation","src":"423:32:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2599,"nodeType":"ParameterList","parameters":[],"src":"412:2:11"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[],"src":"491:0:11"},"scope":2720,"src":"401:125:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[213],"body":{"id":2618,"nodeType":"Block","src":"599:55:11","statements":[{"expression":{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"616:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},"functionReturnParameters":2615,"id":2617,"nodeType":"Return","src":"609:38:11"}]},"id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"541:8:11","nodeType":"FunctionDefinition","overrides":{"id":2612,"nodeType":"OverrideSpecifier","overrides":[],"src":"566:8:11"},"parameters":{"id":2611,"nodeType":"ParameterList","parameters":[],"src":"549:2:11"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2619,"src":"584:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2613,"name":"string","nodeType":"ElementaryTypeName","src":"584:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"583:15:11"},"scope":2720,"src":"532:122:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2641,"nodeType":"Block","src":"707:124:11","statements":[{"expression":{"arguments":[{"id":2625,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"727:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2626,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"733:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2624,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[494,523],"referencedDeclaration":494,"src":"717:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"717:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2628,"nodeType":"ExpressionStatement","src":"717:31:11"},{"expression":{"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"758:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2630,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"775:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"792:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"775:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"758:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2634,"nodeType":"ExpressionStatement","src":"758:35:11"},{"expression":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2635,"name":"s_hasNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"803:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2637,"indexExpression":{"id":2636,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"812:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"803:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"820:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"803:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2640,"nodeType":"ExpressionStatement","src":"803:21:11"}]},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"_mintByAddress","nameLocation":"669:14:11","nodeType":"FunctionDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"addr","nameLocation":"692:4:11","nodeType":"VariableDeclaration","scope":2642,"src":"684:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"683:14:11"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[],"src":"707:0:11"},"scope":2720,"src":"660:171:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"866:136:11","statements":[{"expression":{"arguments":[{"expression":{"id":2646,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"886:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"886:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2648,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"898:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2645,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[494,523],"referencedDeclaration":494,"src":"876:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"876:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2650,"nodeType":"ExpressionStatement","src":"876:37:11"},{"expression":{"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2651,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"923:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2652,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"940:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"957:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"940:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"923:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2656,"nodeType":"ExpressionStatement","src":"923:35:11"},{"expression":{"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2657,"name":"s_hasNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"968:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2660,"indexExpression":{"expression":{"id":2658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"977:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"977:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"968:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"991:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"968:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2663,"nodeType":"ExpressionStatement","src":"968:27:11"}]},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"_mintNft","nameLocation":"846:8:11","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[],"src":"854:2:11"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[],"src":"866:0:11"},"scope":2720,"src":"837:165:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[204],"body":{"id":2698,"nodeType":"Block","src":"1108:716:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2677,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[2619],"referencedDeclaration":2619,"src":"1199:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1199:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7b226e616d65223a22","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1355:11:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},"value":"{\"name\":\""},{"arguments":[],"expression":{"argumentTypes":[],"id":2686,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1400:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1400:6:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c20226465736372697074696f6e223a22596f752063617074757265642074686973204e46542061732070617274206f662074686520656475636174696f6e616c2053747265616d21222c20","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1440:79:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf","typeString":"literal_string \"\", \"description\":\"You captured this NFT as part of the educational Stream!\", \""},"value":"\", \"description\":\"You captured this NFT as part of the educational Stream!\", "},{"hexValue":"2261747472696275746573223a205b7b2274726169745f74797065223a2022736b696c6c73222c202276616c7565223a203130307d5d2c2022696d616765223a22","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1553:67:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719","typeString":"literal_string \"\"attributes\": [{\"trait_type\": \"skills\", \"value\": 100}], \"image\":\"\""},"value":"\"attributes\": [{\"trait_type\": \"skills\", \"value\": 100}], \"image\":\""},{"id":2690,"name":"TOKEN_IMAGE_URI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"1654:15:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1703:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""},"value":"\"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf","typeString":"literal_string \"\", \"description\":\"You captured this NFT as part of the educational Stream!\", \""},{"typeIdentifier":"t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719","typeString":"literal_string \"\"attributes\": [{\"trait_type\": \"skills\", \"value\": 100}], \"image\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""}],"expression":{"id":2683,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1305:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1305:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1305:432:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1270:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2681,"name":"bytes","nodeType":"ElementaryTypeName","src":"1270:5:11","typeDescriptions":{}}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1270:493:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2679,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1231:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$2583_$","typeString":"type(library Base64)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":2582,"src":"1231:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1231:554:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2675,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1161:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1161:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1161:642:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1137:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2673,"name":"string","nodeType":"ElementaryTypeName","src":"1137:6:11","typeDescriptions":{}}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1137:680:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2672,"id":2697,"nodeType":"Return","src":"1118:699:11"}]},"functionSelector":"c87b56dd","id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1017:8:11","nodeType":"FunctionDefinition","overrides":{"id":2669,"nodeType":"OverrideSpecifier","overrides":[],"src":"1075:8:11"},"parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"1035:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1025:37:11"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"1093:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2670,"name":"string","nodeType":"ElementaryTypeName","src":"1093:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1092:15:11"},"scope":2720,"src":"1008:816:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2710,"nodeType":"Block","src":"1887:38:11","statements":[{"expression":{"baseExpression":{"id":2706,"name":"s_hasNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"1904:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2708,"indexExpression":{"id":2707,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1913:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1904:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2705,"id":2709,"nodeType":"Return","src":"1897:21:11"}]},"functionSelector":"4ed7ff63","id":2711,"implemented":true,"kind":"function","modifiers":[],"name":"hasNft","nameLocation":"1839:6:11","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"addr","nameLocation":"1854:4:11","nodeType":"VariableDeclaration","scope":2711,"src":"1846:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"1846:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1845:14:11"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2711,"src":"1881:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2703,"name":"bool","nodeType":"ElementaryTypeName","src":"1881:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1880:6:11"},"scope":2720,"src":"1830:95:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2718,"nodeType":"Block","src":"1988:38:11","statements":[{"expression":{"id":2716,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"2005:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2715,"id":2717,"nodeType":"Return","src":"1998:21:11"}]},"functionSelector":"6e02007d","id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"1940:15:11","nodeType":"FunctionDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[],"src":"1955:2:11"},"returnParameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2719,"src":"1979:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1979:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1978:9:11"},"scope":2720,"src":"1931:95:11","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2721,"src":"148:1880:11","usedErrors":[]}],"src":"32:1996:11"},"id":11},"contracts/streamTriviaDao.sol":{"ast":{"absolutePath":"contracts/streamTriviaDao.sol","exportedSymbols":{"StreamDao":[2732],"StreamTriviaDao":[3166]},"id":3167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2722,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2732,"linearizedBaseContracts":[2732],"name":"StreamDao","nameLocation":"69:9:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"00fdd58e","id":2731,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"98:9:12","nodeType":"FunctionDefinition","parameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2731,"src":"108:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"108:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2731,"src":"117:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"117:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"107:18:12"},"returnParameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2731,"src":"149:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"148:9:12"},"scope":2732,"src":"89:69:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3167,"src":"59:105:12","usedErrors":[]},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3166,"linearizedBaseContracts":[3166],"name":"StreamTriviaDao","nameLocation":"175:15:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":2734,"mutability":"mutable","name":"owner","nameLocation":"213:5:12","nodeType":"VariableDeclaration","scope":3166,"src":"198:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"198:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2736,"mutability":"mutable","name":"nextProposal","nameLocation":"232:12:12","nodeType":"VariableDeclaration","scope":3166,"src":"224:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"e9d3d16a","id":2739,"mutability":"mutable","name":"validTokens","nameLocation":"267:11:12","nodeType":"VariableDeclaration","scope":3166,"src":"250:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"250:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2738,"nodeType":"ArrayTypeName","src":"250:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"id":2742,"mutability":"mutable","name":"daoContract","nameLocation":"294:11:12","nodeType":"VariableDeclaration","scope":3166,"src":"284:21:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_StreamDao_$2732","typeString":"contract StreamDao"},"typeName":{"id":2741,"nodeType":"UserDefinedTypeName","pathNode":{"id":2740,"name":"StreamDao","nodeType":"IdentifierPath","referencedDeclaration":2732,"src":"284:9:12"},"referencedDeclaration":2732,"src":"284:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_StreamDao_$2732","typeString":"contract StreamDao"}},"visibility":"internal"},{"body":{"id":2766,"nodeType":"Block","src":"325:167:12","statements":[{"expression":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2745,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"335:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2746,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"343:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"343:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"335:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2749,"nodeType":"ExpressionStatement","src":"335:18:12"},{"expression":{"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2750,"name":"nextProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"363:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"378:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"363:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2753,"nodeType":"ExpressionStatement","src":"363:16:12"},{"expression":{"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2754,"name":"daoContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"389:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_StreamDao_$2732","typeString":"contract StreamDao"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"307861374330336661613935303445354333343533463535303333396232363630433862383335443730","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"413:42:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xa7C03faa9504E5C3453F550339b2660C8b835D70"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2755,"name":"StreamDao","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"403:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StreamDao_$2732_$","typeString":"type(contract StreamDao)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"403:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_StreamDao_$2732","typeString":"contract StreamDao"}},"src":"389:67:12","typeDescriptions":{"typeIdentifier":"t_contract$_StreamDao_$2732","typeString":"contract StreamDao"}},"id":2759,"nodeType":"ExpressionStatement","src":"389:67:12"},{"expression":{"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2760,"name":"validTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"466:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"hexValue":"30","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"481:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"31","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"483:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":2763,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"480:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"src":"466:19:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2765,"nodeType":"ExpressionStatement","src":"466:19:12"}]},"id":2767,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[],"src":"323:2:12"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[],"src":"325:0:12"},"scope":3166,"src":"312:180:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"StreamTriviaDao.proposal","id":2793,"members":[{"constant":false,"id":2769,"mutability":"mutable","name":"id","nameLocation":"531:2:12","nodeType":"VariableDeclaration","scope":2793,"src":"523:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"exists","nameLocation":"548:6:12","nodeType":"VariableDeclaration","scope":2793,"src":"543:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2770,"name":"bool","nodeType":"ElementaryTypeName","src":"543:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"description","nameLocation":"571:11:12","nodeType":"VariableDeclaration","scope":2793,"src":"564:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2772,"name":"string","nodeType":"ElementaryTypeName","src":"564:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"deadline","nameLocation":"597:8:12","nodeType":"VariableDeclaration","scope":2793,"src":"592:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2774,"name":"uint","nodeType":"ElementaryTypeName","src":"592:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"votesUp","nameLocation":"623:7:12","nodeType":"VariableDeclaration","scope":2793,"src":"615:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"votesDown","nameLocation":"648:9:12","nodeType":"VariableDeclaration","scope":2793,"src":"640:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"640:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"canVote","nameLocation":"677:7:12","nodeType":"VariableDeclaration","scope":2793,"src":"667:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2780,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2781,"nodeType":"ArrayTypeName","src":"667:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"maxVotes","nameLocation":"702:8:12","nodeType":"VariableDeclaration","scope":2793,"src":"694:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"voteStatus","nameLocation":"745:10:12","nodeType":"VariableDeclaration","scope":2793,"src":"720:35:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2787,"keyType":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"720:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2786,"name":"bool","nodeType":"ElementaryTypeName","src":"739:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"countConducted","nameLocation":"770:14:12","nodeType":"VariableDeclaration","scope":2793,"src":"765:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2789,"name":"bool","nodeType":"ElementaryTypeName","src":"765:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"passed","nameLocation":"799:6:12","nodeType":"VariableDeclaration","scope":2793,"src":"794:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2791,"name":"bool","nodeType":"ElementaryTypeName","src":"794:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"proposal","nameLocation":"505:8:12","nodeType":"StructDefinition","scope":3166,"src":"498:314:12","visibility":"public"},{"constant":false,"functionSelector":"d1dbe7d8","id":2798,"mutability":"mutable","name":"Proposals","nameLocation":"854:9:12","nodeType":"VariableDeclaration","scope":3166,"src":"818:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal)"},"typeName":{"id":2797,"keyType":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:28:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal)"},"valueType":{"id":2796,"nodeType":"UserDefinedTypeName","pathNode":{"id":2795,"name":"proposal","nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"837:8:12"},"referencedDeclaration":2793,"src":"837:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal"}}},"visibility":"public"},{"anonymous":false,"id":2808,"name":"proposalCreated","nameLocation":"876:15:12","nodeType":"EventDefinition","parameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"909:2:12","nodeType":"VariableDeclaration","scope":2808,"src":"901:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2802,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"928:11:12","nodeType":"VariableDeclaration","scope":2808,"src":"921:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2801,"name":"string","nodeType":"ElementaryTypeName","src":"921:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2804,"indexed":false,"mutability":"mutable","name":"maxVotes","nameLocation":"957:8:12","nodeType":"VariableDeclaration","scope":2808,"src":"949:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"949:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2806,"indexed":false,"mutability":"mutable","name":"proposer","nameLocation":"983:8:12","nodeType":"VariableDeclaration","scope":2808,"src":"975:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"975:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"891:106:12"},"src":"870:128:12"},{"anonymous":false,"id":2820,"name":"newVote","nameLocation":"1010:7:12","nodeType":"EventDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"indexed":false,"mutability":"mutable","name":"votesUp","nameLocation":"1035:7:12","nodeType":"VariableDeclaration","scope":2820,"src":"1027:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2812,"indexed":false,"mutability":"mutable","name":"votesDown","nameLocation":"1060:9:12","nodeType":"VariableDeclaration","scope":2820,"src":"1052:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2814,"indexed":false,"mutability":"mutable","name":"voter","nameLocation":"1087:5:12","nodeType":"VariableDeclaration","scope":2820,"src":"1079:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2816,"indexed":false,"mutability":"mutable","name":"proposal","nameLocation":"1110:8:12","nodeType":"VariableDeclaration","scope":2820,"src":"1102:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2818,"indexed":false,"mutability":"mutable","name":"votedFor","nameLocation":"1133:8:12","nodeType":"VariableDeclaration","scope":2820,"src":"1128:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2817,"name":"bool","nodeType":"ElementaryTypeName","src":"1128:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1017:130:12"},"src":"1004:144:12"},{"anonymous":false,"id":2826,"name":"proposalCount","nameLocation":"1160:13:12","nodeType":"EventDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"1191:2:12","nodeType":"VariableDeclaration","scope":2826,"src":"1183:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"1183:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2824,"indexed":false,"mutability":"mutable","name":"passed","nameLocation":"1208:6:12","nodeType":"VariableDeclaration","scope":2826,"src":"1203:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2823,"name":"bool","nodeType":"ElementaryTypeName","src":"1203:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1173:47:12"},"src":"1154:67:12"},{"body":{"id":2861,"nodeType":"Block","src":"1325:210:12","statements":[{"body":{"id":2857,"nodeType":"Block","src":"1379:128:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2846,"name":"_proposalist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"1418:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2847,"name":"validTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1432:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2849,"indexExpression":{"id":2848,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"1444:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1432:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2844,"name":"daoContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"1396:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_StreamDao_$2732","typeString":"contract StreamDao"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2731,"src":"1396:21:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1396:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1451:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1396:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2856,"nodeType":"IfStatement","src":"1393:104:12","trueBody":{"id":2855,"nodeType":"Block","src":"1453:44:12","statements":[{"expression":{"hexValue":"74727565","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1478:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2832,"id":2854,"nodeType":"Return","src":"1471:11:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2837,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"1351:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2838,"name":"validTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1355:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1355:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1351:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2858,"initializationExpression":{"assignments":[2834],"declarations":[{"constant":false,"id":2834,"mutability":"mutable","name":"i","nameLocation":"1344:1:12","nodeType":"VariableDeclaration","scope":2858,"src":"1339:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint","nodeType":"ElementaryTypeName","src":"1339:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2836,"initialValue":{"hexValue":"30","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1348:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1339:10:12"},"loopExpression":{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1375:3:12","subExpression":{"id":2841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"1375:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2843,"nodeType":"ExpressionStatement","src":"1375:3:12"},"nodeType":"ForStatement","src":"1335:172:12"},{"expression":{"hexValue":"66616c7365","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1523:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2832,"id":2860,"nodeType":"Return","src":"1516:12:12"}]},"id":2862,"implemented":true,"kind":"function","modifiers":[],"name":"checkProposalEligibility","nameLocation":"1237:24:12","nodeType":"FunctionDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"_proposalist","nameLocation":"1270:12:12","nodeType":"VariableDeclaration","scope":2862,"src":"1262:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2827,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1261:22:12"},"returnParameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2862,"src":"1315:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2830,"name":"bool","nodeType":"ElementaryTypeName","src":"1315:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1305:20:12"},"scope":3166,"src":"1228:307:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2901,"nodeType":"Block","src":"1641:203:12","statements":[{"body":{"id":2897,"nodeType":"Block","src":"1711:105:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"baseExpression":{"id":2885,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"1729:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":2887,"indexExpression":{"id":2886,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"1739:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1729:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":2888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"canVote","nodeType":"MemberAccess","referencedDeclaration":2782,"src":"1729:22:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2890,"indexExpression":{"id":2889,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1752:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1729:25:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2891,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"1758:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1729:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2896,"nodeType":"IfStatement","src":"1725:81:12","trueBody":{"id":2895,"nodeType":"Block","src":"1766:40:12","statements":[{"expression":{"hexValue":"74727565","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1787:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2870,"id":2894,"nodeType":"Return","src":"1780:11:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1671:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"baseExpression":{"id":2876,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"1675:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":2878,"indexExpression":{"id":2877,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"1685:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1675:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":2879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"canVote","nodeType":"MemberAccess","referencedDeclaration":2782,"src":"1675:22:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1675:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1671:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2898,"initializationExpression":{"assignments":[2872],"declarations":[{"constant":false,"id":2872,"mutability":"mutable","name":"i","nameLocation":"1664:1:12","nodeType":"VariableDeclaration","scope":2898,"src":"1656:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1656:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2874,"initialValue":{"hexValue":"30","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1668:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1656:13:12"},"loopExpression":{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1706:3:12","subExpression":{"id":2882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1706:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2884,"nodeType":"ExpressionStatement","src":"1706:3:12"},"nodeType":"ForStatement","src":"1651:165:12"},{"expression":{"hexValue":"66616c7365","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1832:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2870,"id":2900,"nodeType":"Return","src":"1825:12:12"}]},"id":2902,"implemented":true,"kind":"function","modifiers":[],"name":"checkVoteEligibility","nameLocation":"1550:20:12","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"_id","nameLocation":"1579:3:12","nodeType":"VariableDeclaration","scope":2902,"src":"1571:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1571:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"_voter","nameLocation":"1592:6:12","nodeType":"VariableDeclaration","scope":2902,"src":"1584:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"1584:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1570:29:12"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2902,"src":"1631:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2868,"name":"bool","nodeType":"ElementaryTypeName","src":"1631:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1621:20:12"},"scope":3166,"src":"1541:303:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2977,"nodeType":"Block","src":"1937:544:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2912,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1980:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1980:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2911,"name":"checkProposalEligibility","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"1955:24:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1955:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79204e465420686f6c646572732063616e2070757420666f7274682050726f706f73616c73","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1993:42:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383","typeString":"literal_string \"Only NFT holders can put forth Proposals\""},"value":"Only NFT holders can put forth Proposals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383","typeString":"literal_string \"Only NFT holders can put forth Proposals\""}],"id":2910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1947:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1947:89:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"ExpressionStatement","src":"1947:89:12"},{"assignments":[2920],"declarations":[{"constant":false,"id":2920,"mutability":"mutable","name":"newProposal","nameLocation":"2064:11:12","nodeType":"VariableDeclaration","scope":2977,"src":"2047:28:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal"},"typeName":{"id":2919,"nodeType":"UserDefinedTypeName","pathNode":{"id":2918,"name":"proposal","nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"2047:8:12"},"referencedDeclaration":2793,"src":"2047:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal"}},"visibility":"internal"}],"id":2924,"initialValue":{"baseExpression":{"id":2921,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2078:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":2923,"indexExpression":{"id":2922,"name":"nextProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"2088:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2078:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2047:54:12"},{"expression":{"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2925,"name":"newProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2111:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":2927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"2111:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2928,"name":"nextProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"2128:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2111:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2930,"nodeType":"ExpressionStatement","src":"2111:29:12"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2931,"name":"newProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2150:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":2933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"2150:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2171:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2150:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2936,"nodeType":"ExpressionStatement","src":"2150:25:12"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2937,"name":"newProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2185:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":2939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"description","nodeType":"MemberAccess","referencedDeclaration":2773,"src":"2185:23:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2940,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"2211:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2185:38:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2942,"nodeType":"ExpressionStatement","src":"2185:38:12"},{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2943,"name":"newProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2233:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":2945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"2233:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2946,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2256:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2256:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313030","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2271:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2256:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"2233:41:12"},{"expression":{"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2952,"name":"newProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2284:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":2954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"canVote","nodeType":"MemberAccess","referencedDeclaration":2782,"src":"2284:19:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2955,"name":"_canVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2306:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2284:30:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2957,"nodeType":"ExpressionStatement","src":"2284:30:12"},{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2958,"name":"newProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2324:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":2960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"maxVotes","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"2324:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2961,"name":"_canVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2347:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2347:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2324:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"2324:38:12"},{"eventCall":{"arguments":[{"id":2966,"name":"nextProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"2394:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2967,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"2408:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2968,"name":"_canVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2422:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2422:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2970,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2439:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2439:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2965,"name":"proposalCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"2378:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,string memory,uint256,address)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2378:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2973,"nodeType":"EmitStatement","src":"2373:77:12"},{"expression":{"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2460:14:12","subExpression":{"id":2974,"name":"nextProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"2460:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2976,"nodeType":"ExpressionStatement","src":"2460:14:12"}]},"functionSelector":"be8bb7ba","id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"createProposal","nameLocation":"1860:14:12","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"_description","nameLocation":"1889:12:12","nodeType":"VariableDeclaration","scope":2978,"src":"1875:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2903,"name":"string","nodeType":"ElementaryTypeName","src":"1875:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"_canVote","nameLocation":"1920:8:12","nodeType":"VariableDeclaration","scope":2978,"src":"1903:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"1903:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2906,"nodeType":"ArrayTypeName","src":"1903:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1874:55:12"},"returnParameters":{"id":2909,"nodeType":"ParameterList","parameters":[],"src":"1937:0:12"},"scope":3166,"src":"1851:630:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3066,"nodeType":"Block","src":"2544:641:12","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2986,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2562:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":2988,"indexExpression":{"id":2987,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2572:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2562:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":2989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"2562:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732050726f706f73616c20646f6573206e6f74206578697374","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2585:30:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c","typeString":"literal_string \"This Proposal does not exist\""},"value":"This Proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c","typeString":"literal_string \"This Proposal does not exist\""}],"id":2985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2554:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2554:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2992,"nodeType":"ExpressionStatement","src":"2554:62:12"},{"expression":{"arguments":[{"arguments":[{"id":2995,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2655:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2996,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2660:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2660:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2994,"name":"checkVoteEligibility","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"2634:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2634:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e206e6f7420766f7465206f6e20746869732050726f706f73616c","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2673:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da","typeString":"literal_string \"You can not vote on this Proposal\""},"value":"You can not vote on this Proposal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da","typeString":"literal_string \"You can not vote on this Proposal\""}],"id":2993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:83:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"ExpressionStatement","src":"2626:83:12"},{"expression":{"arguments":[{"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2727:38:12","subExpression":{"baseExpression":{"expression":{"baseExpression":{"id":3003,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2728:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":3005,"indexExpression":{"id":3004,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2738:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2728:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":3006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voteStatus","nodeType":"MemberAccess","referencedDeclaration":2788,"src":"2728:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3009,"indexExpression":{"expression":{"id":3007,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2754:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2754:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2728:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206861766520616c726561647920766f746564206f6e20746869732050726f706f73616c","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2767:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2","typeString":"literal_string \"You have already voted on this Proposal\""},"value":"You have already voted on this Proposal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2","typeString":"literal_string \"You have already voted on this Proposal\""}],"id":3002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2719:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2719:90:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3013,"nodeType":"ExpressionStatement","src":"2719:90:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3015,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2827:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2827:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":3017,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2843:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":3019,"indexExpression":{"id":3018,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2853:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2843:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":3020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"2843:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520646561646c696e65206861732070617373656420666f7220746869732050726f706f73616c","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2868:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669","typeString":"literal_string \"The deadline has passed for this Proposal\""},"value":"The deadline has passed for this Proposal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669","typeString":"literal_string \"The deadline has passed for this Proposal\""}],"id":3014,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2819:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2819:93:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3024,"nodeType":"ExpressionStatement","src":"2819:93:12"},{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"p","nameLocation":"2940:1:12","nodeType":"VariableDeclaration","scope":3066,"src":"2923:18:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal"},"typeName":{"id":3026,"nodeType":"UserDefinedTypeName","pathNode":{"id":3025,"name":"proposal","nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"2923:8:12"},"referencedDeclaration":2793,"src":"2923:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal"}},"visibility":"internal"}],"id":3031,"initialValue":{"baseExpression":{"id":3028,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2944:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":3030,"indexExpression":{"id":3029,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"2954:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2944:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2923:35:12"},{"condition":{"id":3032,"name":"_vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"2972:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3044,"nodeType":"Block","src":"3019:38:12","statements":[{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3033:13:12","subExpression":{"expression":{"id":3039,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3033:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":3041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"votesDown","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"3033:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3043,"nodeType":"ExpressionStatement","src":"3033:13:12"}]},"id":3045,"nodeType":"IfStatement","src":"2969:88:12","trueBody":{"id":3038,"nodeType":"Block","src":"2979:36:12","statements":[{"expression":{"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2993:11:12","subExpression":{"expression":{"id":3033,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"2993:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":3035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"votesUp","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"2993:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3037,"nodeType":"ExpressionStatement","src":"2993:11:12"}]}},{"expression":{"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3046,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3067:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":3050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voteStatus","nodeType":"MemberAccess","referencedDeclaration":2788,"src":"3067:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3051,"indexExpression":{"expression":{"id":3048,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3080:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3080:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3067:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3094:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3067:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"nodeType":"ExpressionStatement","src":"3067:31:12"},{"eventCall":{"arguments":[{"expression":{"id":3056,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3122:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":3057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votesUp","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"3122:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3058,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3133:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":3059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votesDown","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"3133:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3060,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3146:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3146:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3062,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"3158:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3063,"name":"_vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"3163:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3055,"name":"newVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"3114:7:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,address,uint256,bool)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3114:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3065,"nodeType":"EmitStatement","src":"3109:60:12"}]},"functionSelector":"1614665c","id":3067,"implemented":true,"kind":"function","modifiers":[],"name":"voteOnProposal","nameLocation":"2497:14:12","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"_id","nameLocation":"2520:3:12","nodeType":"VariableDeclaration","scope":3067,"src":"2512:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2512:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"_vote","nameLocation":"2530:5:12","nodeType":"VariableDeclaration","scope":3067,"src":"2525:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2981,"name":"bool","nodeType":"ElementaryTypeName","src":"2525:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2511:25:12"},"returnParameters":{"id":2984,"nodeType":"ParameterList","parameters":[],"src":"2544:0:12"},"scope":3166,"src":"2488:697:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3144,"nodeType":"Block","src":"3231:555:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3249:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3249:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3075,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"3263:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3249:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79204f776e65722043616e20436f756e7420566f746573","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3270:28:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7","typeString":"literal_string \"Only Owner Can Count Votes\""},"value":"Only Owner Can Count Votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7","typeString":"literal_string \"Only Owner Can Count Votes\""}],"id":3072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3241:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3241:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3079,"nodeType":"ExpressionStatement","src":"3241:58:12"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3081,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3317:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":3083,"indexExpression":{"id":3082,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3327:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":3084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"3317:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732050726f706f73616c20646f6573206e6f74206578697374","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3340:30:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c","typeString":"literal_string \"This Proposal does not exist\""},"value":"This Proposal does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c","typeString":"literal_string \"This Proposal does not exist\""}],"id":3080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3309:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3309:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3087,"nodeType":"ExpressionStatement","src":"3309:62:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3089,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3389:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3389:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":3091,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3404:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":3093,"indexExpression":{"id":3092,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3414:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3404:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":3094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"3404:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3389:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e6720686173206e6f7420636f6e636c75646564","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3429:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2","typeString":"literal_string \"Voting has not concluded\""},"value":"Voting has not concluded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2","typeString":"literal_string \"Voting has not concluded\""}],"id":3088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3381:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3381:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"ExpressionStatement","src":"3381:75:12"},{"expression":{"arguments":[{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3474:30:12","subExpression":{"expression":{"baseExpression":{"id":3100,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3475:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":3102,"indexExpression":{"id":3101,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3485:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3475:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":3103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"countConducted","nodeType":"MemberAccess","referencedDeclaration":2790,"src":"3475:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7420616c726561647920636f6e647563746564","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3506:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae","typeString":"literal_string \"Count already conducted\""},"value":"Count already conducted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae","typeString":"literal_string \"Count already conducted\""}],"id":3099,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3466:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3466:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3107,"nodeType":"ExpressionStatement","src":"3466:66:12"},{"assignments":[3110],"declarations":[{"constant":false,"id":3110,"mutability":"mutable","name":"p","nameLocation":"3560:1:12","nodeType":"VariableDeclaration","scope":3144,"src":"3543:18:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal"},"typeName":{"id":3109,"nodeType":"UserDefinedTypeName","pathNode":{"id":3108,"name":"proposal","nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"3543:8:12"},"referencedDeclaration":2793,"src":"3543:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal"}},"visibility":"internal"}],"id":3114,"initialValue":{"baseExpression":{"id":3111,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3564:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":3113,"indexExpression":{"id":3112,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3574:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3564:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3543:35:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3115,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3600:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":3117,"indexExpression":{"id":3116,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3610:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3600:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":3118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votesDown","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"3600:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":3119,"name":"Proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3627:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_proposal_$2793_storage_$","typeString":"mapping(uint256 => struct StreamTriviaDao.proposal storage ref)"}},"id":3121,"indexExpression":{"id":3120,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3637:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3627:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage","typeString":"struct StreamTriviaDao.proposal storage ref"}},"id":3122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votesUp","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"3627:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3600:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"nodeType":"IfStatement","src":"3597:105:12","trueBody":{"id":3130,"nodeType":"Block","src":"3650:52:12","statements":[{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3124,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3664:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":3126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"passed","nodeType":"MemberAccess","referencedDeclaration":2792,"src":"3664:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3675:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3664:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3129,"nodeType":"ExpressionStatement","src":"3664:15:12"}]}},{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3132,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3712:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":3134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"countConducted","nodeType":"MemberAccess","referencedDeclaration":2790,"src":"3712:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3731:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3712:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3137,"nodeType":"ExpressionStatement","src":"3712:23:12"},{"eventCall":{"arguments":[{"id":3139,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3765:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3140,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3770:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_proposal_$2793_storage_ptr","typeString":"struct StreamTriviaDao.proposal storage pointer"}},"id":3141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"passed","nodeType":"MemberAccess","referencedDeclaration":2792,"src":"3770:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3138,"name":"proposalCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"3751:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3751:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3143,"nodeType":"EmitStatement","src":"3746:33:12"}]},"functionSelector":"1840f0ca","id":3145,"implemented":true,"kind":"function","modifiers":[],"name":"countVotes","nameLocation":"3200:10:12","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"_id","nameLocation":"3219:3:12","nodeType":"VariableDeclaration","scope":3145,"src":"3211:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"3211:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:13:12"},"returnParameters":{"id":3071,"nodeType":"ParameterList","parameters":[],"src":"3231:0:12"},"scope":3166,"src":"3191:595:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3164,"nodeType":"Block","src":"3838:111:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3151,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3856:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3856:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3153,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"3870:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3856:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79204f776e65722043616e2041646420546f6b656e73","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3877:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc","typeString":"literal_string \"Only Owner Can Add Tokens\""},"value":"Only Owner Can Add Tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc","typeString":"literal_string \"Only Owner Can Add Tokens\""}],"id":3150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3848:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3848:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3157,"nodeType":"ExpressionStatement","src":"3848:57:12"},{"expression":{"arguments":[{"id":3161,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"3933:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3158,"name":"validTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3916:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3916:16:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3916:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3163,"nodeType":"ExpressionStatement","src":"3916:26:12"}]},"functionSelector":"fd0d101f","id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"addTokenId","nameLocation":"3802:10:12","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"_tokenId","nameLocation":"3821:8:12","nodeType":"VariableDeclaration","scope":3165,"src":"3813:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3813:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3812:18:12"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[],"src":"3838:0:12"},"scope":3166,"src":"3793:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3167,"src":"166:3790:12","usedErrors":[]}],"src":"33:3923:12"},"id":12},"contracts/triviaStream.sol":{"ast":{"absolutePath":"contracts/triviaStream.sol","exportedSymbols":{"Address":[1435],"Base64":[2583],"Context":[1457],"ERC165":[1656],"ERC721":[944],"IERC165":[1668],"IERC721":[1060],"IERC721Metadata":[1105],"IERC721Receiver":[1078],"Math":[2533],"NftPilarofEducation":[2720],"StreamNft":[3196],"Strings":[1632]},"id":3197,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3168,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"contracts/NftPilarofEd.sol","file":"./NftPilarofEd.sol","id":3169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3197,"sourceUnit":2721,"src":"57:28:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3170,"name":"NftPilarofEducation","nodeType":"IdentifierPath","referencedDeclaration":2720,"src":"109:19:13"},"id":3171,"nodeType":"InheritanceSpecifier","src":"109:19:13"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3196,"linearizedBaseContracts":[3196,2720,944,1105,1060,1656,1668,1457],"name":"StreamNft","nameLocation":"96:9:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3176,"nodeType":"Block","src":"171:2:13","statements":[]},"id":3177,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":3174,"kind":"baseConstructorSpecifier","modifierName":{"id":3173,"name":"NftPilarofEducation","nodeType":"IdentifierPath","referencedDeclaration":2720,"src":"149:19:13"},"nodeType":"ModifierInvocation","src":"149:21:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[],"src":"146:2:13"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[],"src":"171:0:13"},"scope":3196,"src":"135:38:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3194,"nodeType":"Block","src":"218:76:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"236:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"240:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"236:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"34","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"249:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"236:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e672076616c756521","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"252:14:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2","typeString":"literal_string \"Wrong value!\""},"value":"Wrong value!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2","typeString":"literal_string \"Wrong value!\""}],"id":3182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"228:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"228:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3190,"nodeType":"ExpressionStatement","src":"228:39:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3191,"name":"_mintNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"277:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"277:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3193,"nodeType":"ExpressionStatement","src":"277:10:13"}]},"functionSelector":"0d730acc","id":3195,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"188:7:13","nodeType":"FunctionDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"value","nameLocation":"204:5:13","nodeType":"VariableDeclaration","scope":3195,"src":"196:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"196:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"195:15:13"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[],"src":"218:0:13"},"scope":3196,"src":"179:115:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3197,"src":"87:209:13","usedErrors":[]}],"src":"32:264:13"},"id":13}},"contracts":{"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_62":{"entryPoint":null,"id":62,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":589,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":643,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":805,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":852,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":919,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:14","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:14","statements":[{"nodeType":"YulAssignment","src":"112:75:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:14"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:14"},"nodeType":"YulFunctionCall","src":"137:49:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:14"},"nodeType":"YulFunctionCall","src":"121:66:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:14"},"nodeType":"YulFunctionCall","src":"196:21:14"},"nodeType":"YulExpressionStatement","src":"196:21:14"},{"nodeType":"YulVariableDeclaration","src":"226:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:14"},"nodeType":"YulFunctionCall","src":"237:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:14"},"nodeType":"YulFunctionCall","src":"293:79:14"},"nodeType":"YulExpressionStatement","src":"293:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:14"},"nodeType":"YulFunctionCall","src":"268:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:14"},"nodeType":"YulFunctionCall","src":"265:25:14"},"nodeType":"YulIf","src":"262:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:14"},"nodeType":"YulFunctionCall","src":"383:39:14"},"nodeType":"YulExpressionStatement","src":"383:39:14"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:14","type":""}],"src":"7:421:14"},{"body":{"nodeType":"YulBlock","src":"521:282:14","statements":[{"body":{"nodeType":"YulBlock","src":"570:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"572:77:14"},"nodeType":"YulFunctionCall","src":"572:79:14"},"nodeType":"YulExpressionStatement","src":"572:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"549:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"557:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:14"},"nodeType":"YulFunctionCall","src":"545:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"564:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"541:3:14"},"nodeType":"YulFunctionCall","src":"541:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"534:6:14"},"nodeType":"YulFunctionCall","src":"534:35:14"},"nodeType":"YulIf","src":"531:122:14"},{"nodeType":"YulVariableDeclaration","src":"662:27:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"682:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:14"},"nodeType":"YulFunctionCall","src":"676:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"666:6:14","type":""}]},{"nodeType":"YulAssignment","src":"698:99:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"770:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"778:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:14"},"nodeType":"YulFunctionCall","src":"766:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"793:3:14"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"707:58:14"},"nodeType":"YulFunctionCall","src":"707:90:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"698:5:14"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"499:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"507:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"515:5:14","type":""}],"src":"448:355:14"},{"body":{"nodeType":"YulBlock","src":"923:739:14","statements":[{"body":{"nodeType":"YulBlock","src":"969:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"971:77:14"},"nodeType":"YulFunctionCall","src":"971:79:14"},"nodeType":"YulExpressionStatement","src":"971:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"944:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"940:3:14"},"nodeType":"YulFunctionCall","src":"940:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"936:3:14"},"nodeType":"YulFunctionCall","src":"936:32:14"},"nodeType":"YulIf","src":"933:119:14"},{"nodeType":"YulBlock","src":"1062:291:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1077:38:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:14"},"nodeType":"YulFunctionCall","src":"1097:17:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1091:5:14"},"nodeType":"YulFunctionCall","src":"1091:24:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1081:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1162:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1164:77:14"},"nodeType":"YulFunctionCall","src":"1164:79:14"},"nodeType":"YulExpressionStatement","src":"1164:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1134:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1142:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1131:2:14"},"nodeType":"YulFunctionCall","src":"1131:30:14"},"nodeType":"YulIf","src":"1128:117:14"},{"nodeType":"YulAssignment","src":"1259:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1326:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:14"},"nodeType":"YulFunctionCall","src":"1311:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1335:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1269:41:14"},"nodeType":"YulFunctionCall","src":"1269:74:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1259:6:14"}]}]},{"nodeType":"YulBlock","src":"1363:292:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1378:39:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:14"},"nodeType":"YulFunctionCall","src":"1398:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1392:5:14"},"nodeType":"YulFunctionCall","src":"1392:25:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1382:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1466:77:14"},"nodeType":"YulFunctionCall","src":"1466:79:14"},"nodeType":"YulExpressionStatement","src":"1466:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1444:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1433:2:14"},"nodeType":"YulFunctionCall","src":"1433:30:14"},"nodeType":"YulIf","src":"1430:117:14"},{"nodeType":"YulAssignment","src":"1561:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:14"},"nodeType":"YulFunctionCall","src":"1613:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1571:41:14"},"nodeType":"YulFunctionCall","src":"1571:74:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1561:6:14"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"885:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"896:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"908:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"916:6:14","type":""}],"src":"809:853:14"},{"body":{"nodeType":"YulBlock","src":"1709:88:14","statements":[{"nodeType":"YulAssignment","src":"1719:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1729:18:14"},"nodeType":"YulFunctionCall","src":"1729:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1719:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1778:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"1786:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1758:19:14"},"nodeType":"YulFunctionCall","src":"1758:33:14"},"nodeType":"YulExpressionStatement","src":"1758:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1693:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1702:6:14","type":""}],"src":"1668:129:14"},{"body":{"nodeType":"YulBlock","src":"1843:35:14","statements":[{"nodeType":"YulAssignment","src":"1853:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1863:5:14"},"nodeType":"YulFunctionCall","src":"1863:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1853:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1836:6:14","type":""}],"src":"1803:75:14"},{"body":{"nodeType":"YulBlock","src":"1951:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"2056:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2058:16:14"},"nodeType":"YulFunctionCall","src":"2058:18:14"},"nodeType":"YulExpressionStatement","src":"2058:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2028:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2036:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2025:2:14"},"nodeType":"YulFunctionCall","src":"2025:30:14"},"nodeType":"YulIf","src":"2022:56:14"},{"nodeType":"YulAssignment","src":"2088:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2118:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2096:21:14"},"nodeType":"YulFunctionCall","src":"2096:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2088:4:14"}]},{"nodeType":"YulAssignment","src":"2162:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2174:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2180:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:14"},"nodeType":"YulFunctionCall","src":"2170:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2162:4:14"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1935:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1946:4:14","type":""}],"src":"1884:308:14"},{"body":{"nodeType":"YulBlock","src":"2247:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2257:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2266:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2261:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2326:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2351:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"2356:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:14"},"nodeType":"YulFunctionCall","src":"2347:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2370:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"2375:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:14"},"nodeType":"YulFunctionCall","src":"2366:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2360:5:14"},"nodeType":"YulFunctionCall","src":"2360:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:14"},"nodeType":"YulFunctionCall","src":"2340:39:14"},"nodeType":"YulExpressionStatement","src":"2340:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2287:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"2290:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2284:2:14"},"nodeType":"YulFunctionCall","src":"2284:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2298:19:14","statements":[{"nodeType":"YulAssignment","src":"2300:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2309:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:14"},"nodeType":"YulFunctionCall","src":"2305:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2300:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"2280:3:14","statements":[]},"src":"2276:113:14"},{"body":{"nodeType":"YulBlock","src":"2423:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2473:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2478:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:14"},"nodeType":"YulFunctionCall","src":"2469:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"2487:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2462:6:14"},"nodeType":"YulFunctionCall","src":"2462:27:14"},"nodeType":"YulExpressionStatement","src":"2462:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2404:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"2407:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2401:2:14"},"nodeType":"YulFunctionCall","src":"2401:13:14"},"nodeType":"YulIf","src":"2398:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2229:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2234:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"2239:6:14","type":""}],"src":"2198:307:14"},{"body":{"nodeType":"YulBlock","src":"2562:269:14","statements":[{"nodeType":"YulAssignment","src":"2572:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2586:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2592:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2582:3:14"},"nodeType":"YulFunctionCall","src":"2582:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2572:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2603:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2633:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2629:3:14"},"nodeType":"YulFunctionCall","src":"2629:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2607:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2680:51:14","statements":[{"nodeType":"YulAssignment","src":"2694:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2708:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2704:3:14"},"nodeType":"YulFunctionCall","src":"2704:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2694:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2660:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2653:6:14"},"nodeType":"YulFunctionCall","src":"2653:26:14"},"nodeType":"YulIf","src":"2650:81:14"},{"body":{"nodeType":"YulBlock","src":"2783:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2797:16:14"},"nodeType":"YulFunctionCall","src":"2797:18:14"},"nodeType":"YulExpressionStatement","src":"2797:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2747:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2770:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2778:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2767:2:14"},"nodeType":"YulFunctionCall","src":"2767:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2744:2:14"},"nodeType":"YulFunctionCall","src":"2744:38:14"},"nodeType":"YulIf","src":"2741:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2546:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2555:6:14","type":""}],"src":"2511:320:14"},{"body":{"nodeType":"YulBlock","src":"2880:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2890:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2942:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2920:21:14"},"nodeType":"YulFunctionCall","src":"2920:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2908:3:14"},"nodeType":"YulFunctionCall","src":"2908:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2894:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3059:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3061:16:14"},"nodeType":"YulFunctionCall","src":"3061:18:14"},"nodeType":"YulExpressionStatement","src":"3061:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3002:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"3014:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:14"},"nodeType":"YulFunctionCall","src":"2999:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3038:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3050:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3035:2:14"},"nodeType":"YulFunctionCall","src":"3035:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2996:2:14"},"nodeType":"YulFunctionCall","src":"2996:62:14"},"nodeType":"YulIf","src":"2993:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3101:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3090:6:14"},"nodeType":"YulFunctionCall","src":"3090:22:14"},"nodeType":"YulExpressionStatement","src":"3090:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2866:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"2874:4:14","type":""}],"src":"2837:281:14"},{"body":{"nodeType":"YulBlock","src":"3152:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3172:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:14"},"nodeType":"YulFunctionCall","src":"3162:88:14"},"nodeType":"YulExpressionStatement","src":"3162:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3266:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3269:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:14"},"nodeType":"YulFunctionCall","src":"3259:15:14"},"nodeType":"YulExpressionStatement","src":"3259:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:14"},"nodeType":"YulFunctionCall","src":"3283:15:14"},"nodeType":"YulExpressionStatement","src":"3283:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3124:180:14"},{"body":{"nodeType":"YulBlock","src":"3338:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:14"},"nodeType":"YulFunctionCall","src":"3348:88:14"},"nodeType":"YulExpressionStatement","src":"3348:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3452:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3455:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:14"},"nodeType":"YulFunctionCall","src":"3445:15:14"},"nodeType":"YulExpressionStatement","src":"3445:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3476:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3479:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3469:6:14"},"nodeType":"YulFunctionCall","src":"3469:15:14"},"nodeType":"YulExpressionStatement","src":"3469:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3310:180:14"},{"body":{"nodeType":"YulBlock","src":"3585:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3605:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3595:6:14"},"nodeType":"YulFunctionCall","src":"3595:12:14"},"nodeType":"YulExpressionStatement","src":"3595:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3496:117:14"},{"body":{"nodeType":"YulBlock","src":"3708:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3725:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3728:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3718:6:14"},"nodeType":"YulFunctionCall","src":"3718:12:14"},"nodeType":"YulExpressionStatement","src":"3718:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3619:117:14"},{"body":{"nodeType":"YulBlock","src":"3831:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3841:6:14"},"nodeType":"YulFunctionCall","src":"3841:12:14"},"nodeType":"YulExpressionStatement","src":"3841:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3742:117:14"},{"body":{"nodeType":"YulBlock","src":"3954:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:14"},"nodeType":"YulFunctionCall","src":"3964:12:14"},"nodeType":"YulExpressionStatement","src":"3964:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3865:117:14"},{"body":{"nodeType":"YulBlock","src":"4036:54:14","statements":[{"nodeType":"YulAssignment","src":"4046:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4064:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:14"},"nodeType":"YulFunctionCall","src":"4060:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4076:3:14"},"nodeType":"YulFunctionCall","src":"4076:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4056:3:14"},"nodeType":"YulFunctionCall","src":"4056:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4046:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4019:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4029:6:14","type":""}],"src":"3988:102:14"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620026da380380620026da83398181016040528101906200003791906200019f565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61232280620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611863565b6102bc565b6040516100fb9190611b80565b60405180910390f35b61010c61039e565b6040516101199190611b9b565b60405180910390f35b61013c600480360381019061013791906118bd565b610430565b6040516101499190611b19565b60405180910390f35b61016c60048036038101906101679190611823565b610476565b005b6101886004803603810190610183919061170d565b61058e565b005b6101a4600480360381019061019f919061170d565b6105ee565b005b6101c060048036038101906101bb91906118bd565b61060e565b6040516101cd9190611b19565b60405180910390f35b6101f060048036038101906101eb91906116a0565b610695565b6040516101fd9190611cdd565b60405180910390f35b61020e61074d565b60405161021b9190611b9b565b60405180910390f35b61023e600480360381019061023991906117e3565b6107df565b005b61025a60048036038101906102559190611760565b6107f5565b005b610276600480360381019061027191906118bd565b610857565b6040516102839190611b9b565b60405180910390f35b6102a660048036038101906102a191906116cd565b6108bf565b6040516102b39190611b80565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611ed1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611ed1565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c9d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cbd565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611bbd565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611c7d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611c5d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611ed1565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611ed1565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611bbd565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611af5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c7d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611bfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611c1d565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611bfd565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611c3d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611b80565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611bdd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a2611fc1565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611f63565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a9190611de7565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a59190611d91565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b81526004016113269493929190611b34565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e9190611890565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390611bdd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4611f63565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1611f63565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510611f63565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539611f63565b5b0492506008810190505b612710831061156957612710838161155f5761155e611f63565b5b0492506004810190505b6064831061158c576064838161158257611581611f63565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115da6115d584611d1d565b611cf8565b9050828152602081018484840111156115f6576115f5611ff5565b5b611601848285611e8f565b509392505050565b60008135905061161881612290565b92915050565b60008135905061162d816122a7565b92915050565b600081359050611642816122be565b92915050565b600081519050611657816122be565b92915050565b600082601f83011261167257611671611ff0565b5b81356116828482602086016115c7565b91505092915050565b60008135905061169a816122d5565b92915050565b6000602082840312156116b6576116b5611fff565b5b60006116c484828501611609565b91505092915050565b600080604083850312156116e4576116e3611fff565b5b60006116f285828601611609565b925050602061170385828601611609565b9150509250929050565b60008060006060848603121561172657611725611fff565b5b600061173486828701611609565b935050602061174586828701611609565b92505060406117568682870161168b565b9150509250925092565b6000806000806080858703121561177a57611779611fff565b5b600061178887828801611609565b945050602061179987828801611609565b93505060406117aa8782880161168b565b925050606085013567ffffffffffffffff8111156117cb576117ca611ffa565b5b6117d78782880161165d565b91505092959194509250565b600080604083850312156117fa576117f9611fff565b5b600061180885828601611609565b92505060206118198582860161161e565b9150509250929050565b6000806040838503121561183a57611839611fff565b5b600061184885828601611609565b92505060206118598582860161168b565b9150509250929050565b60006020828403121561187957611878611fff565b5b600061188784828501611633565b91505092915050565b6000602082840312156118a6576118a5611fff565b5b60006118b484828501611648565b91505092915050565b6000602082840312156118d3576118d2611fff565b5b60006118e18482850161168b565b91505092915050565b6118f381611e1b565b82525050565b61190281611e2d565b82525050565b600061191382611d4e565b61191d8185611d64565b935061192d818560208601611e9e565b61193681612004565b840191505092915050565b600061194c82611d59565b6119568185611d75565b9350611966818560208601611e9e565b61196f81612004565b840191505092915050565b600061198582611d59565b61198f8185611d86565b935061199f818560208601611e9e565b80840191505092915050565b60006119b8602d83611d75565b91506119c382612015565b604082019050919050565b60006119db603283611d75565b91506119e682612064565b604082019050919050565b60006119fe602583611d75565b9150611a09826120b3565b604082019050919050565b6000611a21602483611d75565b9150611a2c82612102565b604082019050919050565b6000611a44601983611d75565b9150611a4f82612151565b602082019050919050565b6000611a67602983611d75565b9150611a728261217a565b604082019050919050565b6000611a8a601883611d75565b9150611a95826121c9565b602082019050919050565b6000611aad602183611d75565b9150611ab8826121f2565b604082019050919050565b6000611ad0603d83611d75565b9150611adb82612241565b604082019050919050565b611aef81611e85565b82525050565b6000611b01828561197a565b9150611b0d828461197a565b91508190509392505050565b6000602082019050611b2e60008301846118ea565b92915050565b6000608082019050611b4960008301876118ea565b611b5660208301866118ea565b611b636040830185611ae6565b8181036060830152611b758184611908565b905095945050505050565b6000602082019050611b9560008301846118f9565b92915050565b60006020820190508181036000830152611bb58184611941565b905092915050565b60006020820190508181036000830152611bd6816119ab565b9050919050565b60006020820190508181036000830152611bf6816119ce565b9050919050565b60006020820190508181036000830152611c16816119f1565b9050919050565b60006020820190508181036000830152611c3681611a14565b9050919050565b60006020820190508181036000830152611c5681611a37565b9050919050565b60006020820190508181036000830152611c7681611a5a565b9050919050565b60006020820190508181036000830152611c9681611a7d565b9050919050565b60006020820190508181036000830152611cb681611aa0565b9050919050565b60006020820190508181036000830152611cd681611ac3565b9050919050565b6000602082019050611cf26000830184611ae6565b92915050565b6000611d02611d13565b9050611d0e8282611f03565b919050565b6000604051905090565b600067ffffffffffffffff821115611d3857611d37611fc1565b5b611d4182612004565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d9c82611e85565b9150611da783611e85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ddc57611ddb611f34565b5b828201905092915050565b6000611df282611e85565b9150611dfd83611e85565b925082821015611e1057611e0f611f34565b5b828203905092915050565b6000611e2682611e65565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ebc578082015181840152602081019050611ea1565b83811115611ecb576000848401525b50505050565b60006002820490506001821680611ee957607f821691505b60208210811415611efd57611efc611f92565b5b50919050565b611f0c82612004565b810181811067ffffffffffffffff82111715611f2b57611f2a611fc1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61229981611e1b565b81146122a457600080fd5b50565b6122b081611e2d565b81146122bb57600080fd5b50565b6122c781611e39565b81146122d257600080fd5b50565b6122de81611e85565b81146122e957600080fd5b5056fea2646970667358221220d8ee7fada685f0b32f66df66d6451cea01150b5c19624f410f83018282edc5bb64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DA CODESIZE SUB DUP1 PUSH3 0x26DA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2322 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1823 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DA PUSH2 0x15D5 DUP5 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1CF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH2 0x1601 DUP5 DUP3 DUP6 PUSH2 0x1E8F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1618 DUP2 PUSH2 0x2290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x22A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1642 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1657 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1672 JUMPI PUSH2 0x1671 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1682 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169A DUP2 PUSH2 0x22D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1734 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1745 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1756 DUP7 DUP3 DUP8 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1788 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1799 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17AA DUP8 DUP3 DUP9 ADD PUSH2 0x168B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x1FFA JUMP JUMPDEST JUMPDEST PUSH2 0x17D7 DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1808 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1819 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1848 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1859 DUP6 DUP3 DUP7 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP5 DUP3 DUP6 ADD PUSH2 0x1633 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP5 DUP3 DUP6 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F3 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1902 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1913 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x191D DUP2 DUP6 PUSH2 0x1D64 JUMP JUMPDEST SWAP4 POP PUSH2 0x192D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194C DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x1956 DUP2 DUP6 PUSH2 0x1D75 JUMP JUMPDEST SWAP4 POP PUSH2 0x1966 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x196F DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x198F DUP2 DUP6 PUSH2 0x1D86 JUMP JUMPDEST SWAP4 POP PUSH2 0x199F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B8 PUSH1 0x2D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP3 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DB PUSH1 0x32 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E6 DUP3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FE PUSH1 0x25 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A09 DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A21 PUSH1 0x24 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2C DUP3 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A44 PUSH1 0x19 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A67 PUSH1 0x29 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A72 DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8A PUSH1 0x18 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A95 DUP3 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x21 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD0 PUSH1 0x3D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADB DUP3 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B01 DUP3 DUP6 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 DUP5 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB5 DUP2 DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD6 DUP2 PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D02 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0E DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH2 0x1D41 DUP3 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9C DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA7 DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E10 JUMPI PUSH2 0x1E0F PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E26 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EA1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1ECB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EE9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EFD JUMPI PUSH2 0x1EFC PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C DUP3 PUSH2 0x2004 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2299 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP2 EQ PUSH2 0x22A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22B0 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP2 EQ PUSH2 0x22BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C7 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22DE DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP2 EQ PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xEE PUSH32 0xADA685F0B32F66DF66D6451CEA01150B5C19624F410F83018282EDC5BB64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"628:16327:0:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16327;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:14:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;628:16327:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_943":{"entryPoint":4788,"id":943,"parameterSlots":4,"returnSlots":0},"@_approve_776":{"entryPoint":2576,"id":776,"parameterSlots":2,"returnSlots":0},"@_baseURI_213":{"entryPoint":4190,"id":213,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_930":{"entryPoint":4494,"id":930,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_884":{"entryPoint":4794,"id":884,"parameterSlots":4,"returnSlots":1},"@_exists_445":{"entryPoint":4429,"id":445,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_479":{"entryPoint":2761,"id":479,"parameterSlots":2,"returnSlots":1},"@_msgSender_1447":{"entryPoint":2568,"id":1447,"parameterSlots":0,"returnSlots":1},"@_ownerOf_427":{"entryPoint":3672,"id":427,"parameterSlots":1,"returnSlots":1},"@_requireMinted_822":{"entryPoint":2493,"id":822,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_414":{"entryPoint":4098,"id":414,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_808":{"entryPoint":3733,"id":808,"parameterSlots":3,"returnSlots":0},"@_transfer_752":{"entryPoint":2910,"id":752,"parameterSlots":3,"returnSlots":0},"@approve_256":{"entryPoint":1142,"id":256,"parameterSlots":2,"returnSlots":0},"@balanceOf_117":{"entryPoint":1685,"id":117,"parameterSlots":1,"returnSlots":1},"@getApproved_274":{"entryPoint":1072,"id":274,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_309":{"entryPoint":2239,"id":309,"parameterSlots":2,"returnSlots":1},"@isContract_1123":{"entryPoint":5540,"id":1123,"parameterSlots":1,"returnSlots":1},"@log10_2370":{"entryPoint":5201,"id":2370,"parameterSlots":1,"returnSlots":1},"@name_155":{"entryPoint":926,"id":155,"parameterSlots":0,"returnSlots":1},"@ownerOf_145":{"entryPoint":1550,"id":145,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_355":{"entryPoint":1518,"id":355,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_385":{"entryPoint":2037,"id":385,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_291":{"entryPoint":2015,"id":291,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1655":{"entryPoint":2387,"id":1655,"parameterSlots":1,"returnSlots":1},"@supportsInterface_93":{"entryPoint":700,"id":93,"parameterSlots":1,"returnSlots":1},"@symbol_165":{"entryPoint":1869,"id":165,"parameterSlots":0,"returnSlots":1},"@toString_1515":{"entryPoint":4213,"id":1515,"parameterSlots":1,"returnSlots":1},"@tokenURI_204":{"entryPoint":2135,"id":204,"parameterSlots":1,"returnSlots":1},"@transferFrom_336":{"entryPoint":1422,"id":336,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5575,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":5704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5837,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5901,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5984,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6115,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6179,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6378,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6393,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":6571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":6606,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":6641,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":6711,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":6746,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":6781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":6851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6886,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6901,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6964,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7133,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7197,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7229,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7293,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7357,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7389,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7416,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7443,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7453,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7502,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7513,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7524,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7541,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7558,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7569,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7655,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7707,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7725,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7737,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7781,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7813,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":7823,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7838,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7889,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7939,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":7988,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8035,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8082,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8129,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8176,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8181,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8186,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8191,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8196,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":8213,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8292,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":8371,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8450,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8529,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":8570,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":8649,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":8690,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":8769,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8848,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8871,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8894,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8917,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23861:14","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:14","statements":[{"nodeType":"YulAssignment","src":"100:74:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:14"},"nodeType":"YulFunctionCall","src":"125:48:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:14"},"nodeType":"YulFunctionCall","src":"109:65:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:14"},"nodeType":"YulFunctionCall","src":"183:21:14"},"nodeType":"YulExpressionStatement","src":"183:21:14"},{"nodeType":"YulVariableDeclaration","src":"213:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:14"},"nodeType":"YulFunctionCall","src":"224:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:14"},"nodeType":"YulFunctionCall","src":"280:79:14"},"nodeType":"YulExpressionStatement","src":"280:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:14"},"nodeType":"YulFunctionCall","src":"255:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:14"},"nodeType":"YulFunctionCall","src":"252:25:14"},"nodeType":"YulIf","src":"249:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:14"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:14"},"nodeType":"YulFunctionCall","src":"370:41:14"},"nodeType":"YulExpressionStatement","src":"370:41:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:14","type":""}],"src":"7:410:14"},{"body":{"nodeType":"YulBlock","src":"475:87:14","statements":[{"nodeType":"YulAssignment","src":"485:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:14"},"nodeType":"YulFunctionCall","src":"494:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:14"},"nodeType":"YulFunctionCall","src":"523:33:14"},"nodeType":"YulExpressionStatement","src":"523:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:14","type":""}],"src":"423:139:14"},{"body":{"nodeType":"YulBlock","src":"617:84:14","statements":[{"nodeType":"YulAssignment","src":"627:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:14"},"nodeType":"YulFunctionCall","src":"636:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:14"},"nodeType":"YulFunctionCall","src":"665:30:14"},"nodeType":"YulExpressionStatement","src":"665:30:14"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:14","type":""}],"src":"568:133:14"},{"body":{"nodeType":"YulBlock","src":"758:86:14","statements":[{"nodeType":"YulAssignment","src":"768:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:14"},"nodeType":"YulFunctionCall","src":"777:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:14"},"nodeType":"YulFunctionCall","src":"806:32:14"},"nodeType":"YulExpressionStatement","src":"806:32:14"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:14","type":""}],"src":"707:137:14"},{"body":{"nodeType":"YulBlock","src":"912:79:14","statements":[{"nodeType":"YulAssignment","src":"922:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:14"},"nodeType":"YulFunctionCall","src":"931:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:14"},"nodeType":"YulFunctionCall","src":"953:32:14"},"nodeType":"YulExpressionStatement","src":"953:32:14"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:14","type":""}],"src":"850:141:14"},{"body":{"nodeType":"YulBlock","src":"1071:277:14","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:14"},"nodeType":"YulFunctionCall","src":"1122:79:14"},"nodeType":"YulExpressionStatement","src":"1122:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:14"},"nodeType":"YulFunctionCall","src":"1095:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:14"},"nodeType":"YulFunctionCall","src":"1091:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:14"},"nodeType":"YulFunctionCall","src":"1084:35:14"},"nodeType":"YulIf","src":"1081:122:14"},{"nodeType":"YulVariableDeclaration","src":"1212:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:14"},"nodeType":"YulFunctionCall","src":"1226:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:14"},"nodeType":"YulFunctionCall","src":"1311:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:14"},"nodeType":"YulFunctionCall","src":"1264:78:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:14","type":""}],"src":"1010:338:14"},{"body":{"nodeType":"YulBlock","src":"1406:87:14","statements":[{"nodeType":"YulAssignment","src":"1416:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:14"},"nodeType":"YulFunctionCall","src":"1425:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:14"},"nodeType":"YulFunctionCall","src":"1454:33:14"},"nodeType":"YulExpressionStatement","src":"1454:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:14","type":""}],"src":"1354:139:14"},{"body":{"nodeType":"YulBlock","src":"1565:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:14"},"nodeType":"YulFunctionCall","src":"1613:79:14"},"nodeType":"YulExpressionStatement","src":"1613:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:14"},"nodeType":"YulFunctionCall","src":"1582:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:14"},"nodeType":"YulFunctionCall","src":"1578:32:14"},"nodeType":"YulIf","src":"1575:119:14"},{"nodeType":"YulBlock","src":"1704:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:14"},"nodeType":"YulFunctionCall","src":"1779:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:14"},"nodeType":"YulFunctionCall","src":"1758:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:14","type":""}],"src":"1499:329:14"},{"body":{"nodeType":"YulBlock","src":"1917:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:14"},"nodeType":"YulFunctionCall","src":"1965:79:14"},"nodeType":"YulExpressionStatement","src":"1965:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:14"},"nodeType":"YulFunctionCall","src":"1934:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:14"},"nodeType":"YulFunctionCall","src":"1930:32:14"},"nodeType":"YulIf","src":"1927:119:14"},{"nodeType":"YulBlock","src":"2056:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:14"},"nodeType":"YulFunctionCall","src":"2131:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:14"},"nodeType":"YulFunctionCall","src":"2110:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:14"}]}]},{"nodeType":"YulBlock","src":"2183:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:14"},"nodeType":"YulFunctionCall","src":"2259:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:14"},"nodeType":"YulFunctionCall","src":"2238:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:14","type":""}],"src":"1834:474:14"},{"body":{"nodeType":"YulBlock","src":"2414:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:14"},"nodeType":"YulFunctionCall","src":"2462:79:14"},"nodeType":"YulExpressionStatement","src":"2462:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:14"},"nodeType":"YulFunctionCall","src":"2431:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:14"},"nodeType":"YulFunctionCall","src":"2427:32:14"},"nodeType":"YulIf","src":"2424:119:14"},{"nodeType":"YulBlock","src":"2553:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:14"},"nodeType":"YulFunctionCall","src":"2628:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:14"},"nodeType":"YulFunctionCall","src":"2607:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:14"}]}]},{"nodeType":"YulBlock","src":"2680:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:14"},"nodeType":"YulFunctionCall","src":"2756:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:14"},"nodeType":"YulFunctionCall","src":"2735:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:14"}]}]},{"nodeType":"YulBlock","src":"2808:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:14"},"nodeType":"YulFunctionCall","src":"2884:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:14"},"nodeType":"YulFunctionCall","src":"2863:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:14","type":""}],"src":"2314:619:14"},{"body":{"nodeType":"YulBlock","src":"3065:817:14","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:14"},"nodeType":"YulFunctionCall","src":"3114:79:14"},"nodeType":"YulExpressionStatement","src":"3114:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:14"},"nodeType":"YulFunctionCall","src":"3082:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:14"},"nodeType":"YulFunctionCall","src":"3078:33:14"},"nodeType":"YulIf","src":"3075:120:14"},{"nodeType":"YulBlock","src":"3205:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:14"},"nodeType":"YulFunctionCall","src":"3280:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:14"},"nodeType":"YulFunctionCall","src":"3259:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:14"}]}]},{"nodeType":"YulBlock","src":"3332:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:14"},"nodeType":"YulFunctionCall","src":"3408:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:14"},"nodeType":"YulFunctionCall","src":"3387:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:14"}]}]},{"nodeType":"YulBlock","src":"3460:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:14"},"nodeType":"YulFunctionCall","src":"3536:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:14"},"nodeType":"YulFunctionCall","src":"3515:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:14"}]}]},{"nodeType":"YulBlock","src":"3588:287:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:14"},"nodeType":"YulFunctionCall","src":"3630:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:14"},"nodeType":"YulFunctionCall","src":"3617:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:14"},"nodeType":"YulFunctionCall","src":"3698:79:14"},"nodeType":"YulExpressionStatement","src":"3698:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:14"},"nodeType":"YulFunctionCall","src":"3665:30:14"},"nodeType":"YulIf","src":"3662:117:14"},{"nodeType":"YulAssignment","src":"3793:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:14"},"nodeType":"YulFunctionCall","src":"3833:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:14"},"nodeType":"YulFunctionCall","src":"3803:62:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:14","type":""}],"src":"2939:943:14"},{"body":{"nodeType":"YulBlock","src":"3968:388:14","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:14"},"nodeType":"YulFunctionCall","src":"4016:79:14"},"nodeType":"YulExpressionStatement","src":"4016:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:14"},"nodeType":"YulFunctionCall","src":"3985:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:14"},"nodeType":"YulFunctionCall","src":"3981:32:14"},"nodeType":"YulIf","src":"3978:119:14"},{"nodeType":"YulBlock","src":"4107:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:14"},"nodeType":"YulFunctionCall","src":"4182:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:14"},"nodeType":"YulFunctionCall","src":"4161:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:14"}]}]},{"nodeType":"YulBlock","src":"4234:115:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:14"},"nodeType":"YulFunctionCall","src":"4307:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:14"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:14"},"nodeType":"YulFunctionCall","src":"4289:50:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:14","type":""}],"src":"3888:468:14"},{"body":{"nodeType":"YulBlock","src":"4445:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:14"},"nodeType":"YulFunctionCall","src":"4493:79:14"},"nodeType":"YulExpressionStatement","src":"4493:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:14"},"nodeType":"YulFunctionCall","src":"4462:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:14"},"nodeType":"YulFunctionCall","src":"4458:32:14"},"nodeType":"YulIf","src":"4455:119:14"},{"nodeType":"YulBlock","src":"4584:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:14"},"nodeType":"YulFunctionCall","src":"4659:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:14"},"nodeType":"YulFunctionCall","src":"4638:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:14"}]}]},{"nodeType":"YulBlock","src":"4711:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:14"},"nodeType":"YulFunctionCall","src":"4787:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:14"},"nodeType":"YulFunctionCall","src":"4766:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:14","type":""}],"src":"4362:474:14"},{"body":{"nodeType":"YulBlock","src":"4907:262:14","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:14"},"nodeType":"YulFunctionCall","src":"4955:79:14"},"nodeType":"YulExpressionStatement","src":"4955:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:14"},"nodeType":"YulFunctionCall","src":"4924:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:14"},"nodeType":"YulFunctionCall","src":"4920:32:14"},"nodeType":"YulIf","src":"4917:119:14"},{"nodeType":"YulBlock","src":"5046:116:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:14"},"nodeType":"YulFunctionCall","src":"5120:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:14"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:14"},"nodeType":"YulFunctionCall","src":"5100:52:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:14","type":""}],"src":"4842:327:14"},{"body":{"nodeType":"YulBlock","src":"5251:273:14","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:14"},"nodeType":"YulFunctionCall","src":"5299:79:14"},"nodeType":"YulExpressionStatement","src":"5299:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:14"},"nodeType":"YulFunctionCall","src":"5268:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:14"},"nodeType":"YulFunctionCall","src":"5264:32:14"},"nodeType":"YulIf","src":"5261:119:14"},{"nodeType":"YulBlock","src":"5390:127:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:14"},"nodeType":"YulFunctionCall","src":"5475:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:14"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:14"},"nodeType":"YulFunctionCall","src":"5444:63:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:14","type":""}],"src":"5175:349:14"},{"body":{"nodeType":"YulBlock","src":"5596:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:14"},"nodeType":"YulFunctionCall","src":"5644:79:14"},"nodeType":"YulExpressionStatement","src":"5644:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:14"},"nodeType":"YulFunctionCall","src":"5613:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:14"},"nodeType":"YulFunctionCall","src":"5609:32:14"},"nodeType":"YulIf","src":"5606:119:14"},{"nodeType":"YulBlock","src":"5735:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:14"},"nodeType":"YulFunctionCall","src":"5810:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:14"},"nodeType":"YulFunctionCall","src":"5789:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:14","type":""}],"src":"5530:329:14"},{"body":{"nodeType":"YulBlock","src":"5930:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:14"},"nodeType":"YulFunctionCall","src":"5952:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:14"},"nodeType":"YulFunctionCall","src":"5940:37:14"},"nodeType":"YulExpressionStatement","src":"5940:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:14","type":""}],"src":"5865:118:14"},{"body":{"nodeType":"YulBlock","src":"6048:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:14"},"nodeType":"YulFunctionCall","src":"6070:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:14"},"nodeType":"YulFunctionCall","src":"6058:34:14"},"nodeType":"YulExpressionStatement","src":"6058:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:14","type":""}],"src":"5989:109:14"},{"body":{"nodeType":"YulBlock","src":"6194:270:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:14"},"nodeType":"YulFunctionCall","src":"6218:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:14"},"nodeType":"YulFunctionCall","src":"6272:70:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:14"},"nodeType":"YulFunctionCall","src":"6373:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:14"},"nodeType":"YulFunctionCall","src":"6351:52:14"},"nodeType":"YulExpressionStatement","src":"6351:52:14"},{"nodeType":"YulAssignment","src":"6412:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:14"},"nodeType":"YulFunctionCall","src":"6428:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:14"},"nodeType":"YulFunctionCall","src":"6419:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:14","type":""}],"src":"6104:360:14"},{"body":{"nodeType":"YulBlock","src":"6562:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:14"},"nodeType":"YulFunctionCall","src":"6586:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:14"},"nodeType":"YulFunctionCall","src":"6641:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:14"},"nodeType":"YulFunctionCall","src":"6743:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:14"},"nodeType":"YulFunctionCall","src":"6721:52:14"},"nodeType":"YulExpressionStatement","src":"6721:52:14"},{"nodeType":"YulAssignment","src":"6782:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:14"},"nodeType":"YulFunctionCall","src":"6798:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:14"},"nodeType":"YulFunctionCall","src":"6789:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:14","type":""}],"src":"6470:364:14"},{"body":{"nodeType":"YulBlock","src":"6950:267:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6960:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7007:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6974:32:14"},"nodeType":"YulFunctionCall","src":"6974:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6964:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7022:96:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7106:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7111:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7029:76:14"},"nodeType":"YulFunctionCall","src":"7029:89:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7022:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7153:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"7160:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:14"},"nodeType":"YulFunctionCall","src":"7149:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"7167:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7172:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7127:21:14"},"nodeType":"YulFunctionCall","src":"7127:52:14"},"nodeType":"YulExpressionStatement","src":"7127:52:14"},{"nodeType":"YulAssignment","src":"7188:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7199:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7204:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7195:3:14"},"nodeType":"YulFunctionCall","src":"7195:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7188:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6931:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6938:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6946:3:14","type":""}],"src":"6840:377:14"},{"body":{"nodeType":"YulBlock","src":"7369:220:14","statements":[{"nodeType":"YulAssignment","src":"7379:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7445:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7450:2:14","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7386:58:14"},"nodeType":"YulFunctionCall","src":"7386:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:14"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7462:88:14"},"nodeType":"YulFunctionCall","src":"7462:93:14"},"nodeType":"YulExpressionStatement","src":"7462:93:14"},{"nodeType":"YulAssignment","src":"7564:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7575:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7571:3:14"},"nodeType":"YulFunctionCall","src":"7571:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7564:3:14"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7357:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7365:3:14","type":""}],"src":"7223:366:14"},{"body":{"nodeType":"YulBlock","src":"7741:220:14","statements":[{"nodeType":"YulAssignment","src":"7751:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7817:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7822:2:14","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7758:58:14"},"nodeType":"YulFunctionCall","src":"7758:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7751:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7923:3:14"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7834:88:14"},"nodeType":"YulFunctionCall","src":"7834:93:14"},"nodeType":"YulExpressionStatement","src":"7834:93:14"},{"nodeType":"YulAssignment","src":"7936:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7947:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7952:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7943:3:14"},"nodeType":"YulFunctionCall","src":"7943:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7936:3:14"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7729:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7737:3:14","type":""}],"src":"7595:366:14"},{"body":{"nodeType":"YulBlock","src":"8113:220:14","statements":[{"nodeType":"YulAssignment","src":"8123:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8189:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8194:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8130:58:14"},"nodeType":"YulFunctionCall","src":"8130:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8123:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8295:3:14"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"8206:88:14"},"nodeType":"YulFunctionCall","src":"8206:93:14"},"nodeType":"YulExpressionStatement","src":"8206:93:14"},{"nodeType":"YulAssignment","src":"8308:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8319:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8324:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8315:3:14"},"nodeType":"YulFunctionCall","src":"8315:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8308:3:14"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8101:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8109:3:14","type":""}],"src":"7967:366:14"},{"body":{"nodeType":"YulBlock","src":"8485:220:14","statements":[{"nodeType":"YulAssignment","src":"8495:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8561:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8566:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8502:58:14"},"nodeType":"YulFunctionCall","src":"8502:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8495:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8667:3:14"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"8578:88:14"},"nodeType":"YulFunctionCall","src":"8578:93:14"},"nodeType":"YulExpressionStatement","src":"8578:93:14"},{"nodeType":"YulAssignment","src":"8680:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8691:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8696:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8687:3:14"},"nodeType":"YulFunctionCall","src":"8687:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8680:3:14"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8473:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8481:3:14","type":""}],"src":"8339:366:14"},{"body":{"nodeType":"YulBlock","src":"8857:220:14","statements":[{"nodeType":"YulAssignment","src":"8867:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8933:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8938:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8874:58:14"},"nodeType":"YulFunctionCall","src":"8874:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8867:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9039:3:14"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"8950:88:14"},"nodeType":"YulFunctionCall","src":"8950:93:14"},"nodeType":"YulExpressionStatement","src":"8950:93:14"},{"nodeType":"YulAssignment","src":"9052:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9063:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9068:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9059:3:14"},"nodeType":"YulFunctionCall","src":"9059:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9052:3:14"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8845:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8853:3:14","type":""}],"src":"8711:366:14"},{"body":{"nodeType":"YulBlock","src":"9229:220:14","statements":[{"nodeType":"YulAssignment","src":"9239:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9305:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9310:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9246:58:14"},"nodeType":"YulFunctionCall","src":"9246:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9239:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9411:3:14"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"9322:88:14"},"nodeType":"YulFunctionCall","src":"9322:93:14"},"nodeType":"YulExpressionStatement","src":"9322:93:14"},{"nodeType":"YulAssignment","src":"9424:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9435:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9440:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9431:3:14"},"nodeType":"YulFunctionCall","src":"9431:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9424:3:14"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9217:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9225:3:14","type":""}],"src":"9083:366:14"},{"body":{"nodeType":"YulBlock","src":"9601:220:14","statements":[{"nodeType":"YulAssignment","src":"9611:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9677:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9682:2:14","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9618:58:14"},"nodeType":"YulFunctionCall","src":"9618:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9611:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9783:3:14"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"9694:88:14"},"nodeType":"YulFunctionCall","src":"9694:93:14"},"nodeType":"YulExpressionStatement","src":"9694:93:14"},{"nodeType":"YulAssignment","src":"9796:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9807:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9812:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:14"},"nodeType":"YulFunctionCall","src":"9803:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9796:3:14"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9589:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9597:3:14","type":""}],"src":"9455:366:14"},{"body":{"nodeType":"YulBlock","src":"9973:220:14","statements":[{"nodeType":"YulAssignment","src":"9983:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10049:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10054:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9990:58:14"},"nodeType":"YulFunctionCall","src":"9990:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9983:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10155:3:14"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"10066:88:14"},"nodeType":"YulFunctionCall","src":"10066:93:14"},"nodeType":"YulExpressionStatement","src":"10066:93:14"},{"nodeType":"YulAssignment","src":"10168:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10179:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10184:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10175:3:14"},"nodeType":"YulFunctionCall","src":"10175:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10168:3:14"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9961:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9969:3:14","type":""}],"src":"9827:366:14"},{"body":{"nodeType":"YulBlock","src":"10345:220:14","statements":[{"nodeType":"YulAssignment","src":"10355:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10421:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10426:2:14","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10362:58:14"},"nodeType":"YulFunctionCall","src":"10362:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10355:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10527:3:14"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"10438:88:14"},"nodeType":"YulFunctionCall","src":"10438:93:14"},"nodeType":"YulExpressionStatement","src":"10438:93:14"},{"nodeType":"YulAssignment","src":"10540:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10551:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10556:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10547:3:14"},"nodeType":"YulFunctionCall","src":"10547:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10540:3:14"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10333:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10341:3:14","type":""}],"src":"10199:366:14"},{"body":{"nodeType":"YulBlock","src":"10636:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10653:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10676:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10658:17:14"},"nodeType":"YulFunctionCall","src":"10658:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10646:6:14"},"nodeType":"YulFunctionCall","src":"10646:37:14"},"nodeType":"YulExpressionStatement","src":"10646:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10624:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10631:3:14","type":""}],"src":"10571:118:14"},{"body":{"nodeType":"YulBlock","src":"10879:251:14","statements":[{"nodeType":"YulAssignment","src":"10890:102:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10979:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"10988:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10897:81:14"},"nodeType":"YulFunctionCall","src":"10897:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10890:3:14"}]},{"nodeType":"YulAssignment","src":"11002:102:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11091:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"11100:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11009:81:14"},"nodeType":"YulFunctionCall","src":"11009:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11002:3:14"}]},{"nodeType":"YulAssignment","src":"11114:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"11121:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11114:3:14"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10850:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10856:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10864:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10875:3:14","type":""}],"src":"10695:435:14"},{"body":{"nodeType":"YulBlock","src":"11234:124:14","statements":[{"nodeType":"YulAssignment","src":"11244:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11256:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11267:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:14"},"nodeType":"YulFunctionCall","src":"11252:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11244:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11324:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11337:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11348:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11333:3:14"},"nodeType":"YulFunctionCall","src":"11333:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11280:43:14"},"nodeType":"YulFunctionCall","src":"11280:71:14"},"nodeType":"YulExpressionStatement","src":"11280:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11206:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11218:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11229:4:14","type":""}],"src":"11136:222:14"},{"body":{"nodeType":"YulBlock","src":"11564:440:14","statements":[{"nodeType":"YulAssignment","src":"11574:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11586:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11597:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11582:3:14"},"nodeType":"YulFunctionCall","src":"11582:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11574:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11655:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11668:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11679:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11664:3:14"},"nodeType":"YulFunctionCall","src":"11664:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11611:43:14"},"nodeType":"YulFunctionCall","src":"11611:71:14"},"nodeType":"YulExpressionStatement","src":"11611:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11736:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11749:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11760:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11745:3:14"},"nodeType":"YulFunctionCall","src":"11745:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11692:43:14"},"nodeType":"YulFunctionCall","src":"11692:72:14"},"nodeType":"YulExpressionStatement","src":"11692:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11818:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11831:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11842:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11827:3:14"},"nodeType":"YulFunctionCall","src":"11827:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11774:43:14"},"nodeType":"YulFunctionCall","src":"11774:72:14"},"nodeType":"YulExpressionStatement","src":"11774:72:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11867:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11878:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11863:3:14"},"nodeType":"YulFunctionCall","src":"11863:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11887:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11893:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11883:3:14"},"nodeType":"YulFunctionCall","src":"11883:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11856:6:14"},"nodeType":"YulFunctionCall","src":"11856:48:14"},"nodeType":"YulExpressionStatement","src":"11856:48:14"},{"nodeType":"YulAssignment","src":"11913:84:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11983:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"11992:4:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11921:61:14"},"nodeType":"YulFunctionCall","src":"11921:76:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11913:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11512:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11524:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11532:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11540:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11548:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11559:4:14","type":""}],"src":"11364:640:14"},{"body":{"nodeType":"YulBlock","src":"12102:118:14","statements":[{"nodeType":"YulAssignment","src":"12112:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:14"},"nodeType":"YulFunctionCall","src":"12120:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12112:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12186:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12199:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12210:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12195:3:14"},"nodeType":"YulFunctionCall","src":"12195:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12148:37:14"},"nodeType":"YulFunctionCall","src":"12148:65:14"},"nodeType":"YulExpressionStatement","src":"12148:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12074:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12086:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12097:4:14","type":""}],"src":"12010:210:14"},{"body":{"nodeType":"YulBlock","src":"12344:195:14","statements":[{"nodeType":"YulAssignment","src":"12354:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12366:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12377:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12362:3:14"},"nodeType":"YulFunctionCall","src":"12362:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12354:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12401:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12412:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12397:3:14"},"nodeType":"YulFunctionCall","src":"12397:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12420:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12426:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12416:3:14"},"nodeType":"YulFunctionCall","src":"12416:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12390:6:14"},"nodeType":"YulFunctionCall","src":"12390:47:14"},"nodeType":"YulExpressionStatement","src":"12390:47:14"},{"nodeType":"YulAssignment","src":"12446:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12518:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"12527:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12454:63:14"},"nodeType":"YulFunctionCall","src":"12454:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12446:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12316:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12328:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12339:4:14","type":""}],"src":"12226:313:14"},{"body":{"nodeType":"YulBlock","src":"12716:248:14","statements":[{"nodeType":"YulAssignment","src":"12726:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12738:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12749:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12734:3:14"},"nodeType":"YulFunctionCall","src":"12734:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12726:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12773:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12784:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12769:3:14"},"nodeType":"YulFunctionCall","src":"12769:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12792:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12798:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12788:3:14"},"nodeType":"YulFunctionCall","src":"12788:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12762:6:14"},"nodeType":"YulFunctionCall","src":"12762:47:14"},"nodeType":"YulExpressionStatement","src":"12762:47:14"},{"nodeType":"YulAssignment","src":"12818:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12952:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12826:124:14"},"nodeType":"YulFunctionCall","src":"12826:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12696:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12711:4:14","type":""}],"src":"12545:419:14"},{"body":{"nodeType":"YulBlock","src":"13141:248:14","statements":[{"nodeType":"YulAssignment","src":"13151:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13163:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13174:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13159:3:14"},"nodeType":"YulFunctionCall","src":"13159:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13151:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13198:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13209:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13194:3:14"},"nodeType":"YulFunctionCall","src":"13194:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13217:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13223:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13213:3:14"},"nodeType":"YulFunctionCall","src":"13213:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13187:6:14"},"nodeType":"YulFunctionCall","src":"13187:47:14"},"nodeType":"YulExpressionStatement","src":"13187:47:14"},{"nodeType":"YulAssignment","src":"13243:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13377:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13251:124:14"},"nodeType":"YulFunctionCall","src":"13251:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13243:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13121:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13136:4:14","type":""}],"src":"12970:419:14"},{"body":{"nodeType":"YulBlock","src":"13566:248:14","statements":[{"nodeType":"YulAssignment","src":"13576:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13588:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13599:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13584:3:14"},"nodeType":"YulFunctionCall","src":"13584:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13576:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13623:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13634:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13619:3:14"},"nodeType":"YulFunctionCall","src":"13619:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13642:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13648:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13638:3:14"},"nodeType":"YulFunctionCall","src":"13638:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13612:6:14"},"nodeType":"YulFunctionCall","src":"13612:47:14"},"nodeType":"YulExpressionStatement","src":"13612:47:14"},{"nodeType":"YulAssignment","src":"13668:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13802:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13676:124:14"},"nodeType":"YulFunctionCall","src":"13676:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13668:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13546:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13561:4:14","type":""}],"src":"13395:419:14"},{"body":{"nodeType":"YulBlock","src":"13991:248:14","statements":[{"nodeType":"YulAssignment","src":"14001:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14013:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14024:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14009:3:14"},"nodeType":"YulFunctionCall","src":"14009:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14001:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14048:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14059:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14044:3:14"},"nodeType":"YulFunctionCall","src":"14044:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14067:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14073:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14063:3:14"},"nodeType":"YulFunctionCall","src":"14063:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14037:6:14"},"nodeType":"YulFunctionCall","src":"14037:47:14"},"nodeType":"YulExpressionStatement","src":"14037:47:14"},{"nodeType":"YulAssignment","src":"14093:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14227:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14101:124:14"},"nodeType":"YulFunctionCall","src":"14101:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14093:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13971:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13986:4:14","type":""}],"src":"13820:419:14"},{"body":{"nodeType":"YulBlock","src":"14416:248:14","statements":[{"nodeType":"YulAssignment","src":"14426:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14438:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14449:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14434:3:14"},"nodeType":"YulFunctionCall","src":"14434:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14426:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14473:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14484:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14469:3:14"},"nodeType":"YulFunctionCall","src":"14469:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14492:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14498:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14488:3:14"},"nodeType":"YulFunctionCall","src":"14488:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14462:6:14"},"nodeType":"YulFunctionCall","src":"14462:47:14"},"nodeType":"YulExpressionStatement","src":"14462:47:14"},{"nodeType":"YulAssignment","src":"14518:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14652:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14526:124:14"},"nodeType":"YulFunctionCall","src":"14526:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14518:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14396:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14411:4:14","type":""}],"src":"14245:419:14"},{"body":{"nodeType":"YulBlock","src":"14841:248:14","statements":[{"nodeType":"YulAssignment","src":"14851:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14863:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14874:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14859:3:14"},"nodeType":"YulFunctionCall","src":"14859:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14851:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14898:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14909:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14894:3:14"},"nodeType":"YulFunctionCall","src":"14894:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14917:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14923:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14913:3:14"},"nodeType":"YulFunctionCall","src":"14913:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14887:6:14"},"nodeType":"YulFunctionCall","src":"14887:47:14"},"nodeType":"YulExpressionStatement","src":"14887:47:14"},{"nodeType":"YulAssignment","src":"14943:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15077:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14951:124:14"},"nodeType":"YulFunctionCall","src":"14951:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14943:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14821:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14836:4:14","type":""}],"src":"14670:419:14"},{"body":{"nodeType":"YulBlock","src":"15266:248:14","statements":[{"nodeType":"YulAssignment","src":"15276:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15288:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15299:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15284:3:14"},"nodeType":"YulFunctionCall","src":"15284:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15276:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15323:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15334:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15319:3:14"},"nodeType":"YulFunctionCall","src":"15319:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15342:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15348:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15338:3:14"},"nodeType":"YulFunctionCall","src":"15338:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15312:6:14"},"nodeType":"YulFunctionCall","src":"15312:47:14"},"nodeType":"YulExpressionStatement","src":"15312:47:14"},{"nodeType":"YulAssignment","src":"15368:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15502:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15376:124:14"},"nodeType":"YulFunctionCall","src":"15376:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15368:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15246:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15261:4:14","type":""}],"src":"15095:419:14"},{"body":{"nodeType":"YulBlock","src":"15691:248:14","statements":[{"nodeType":"YulAssignment","src":"15701:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15713:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15724:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15709:3:14"},"nodeType":"YulFunctionCall","src":"15709:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15701:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15748:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15759:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15744:3:14"},"nodeType":"YulFunctionCall","src":"15744:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15767:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15773:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15763:3:14"},"nodeType":"YulFunctionCall","src":"15763:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15737:6:14"},"nodeType":"YulFunctionCall","src":"15737:47:14"},"nodeType":"YulExpressionStatement","src":"15737:47:14"},{"nodeType":"YulAssignment","src":"15793:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15927:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15801:124:14"},"nodeType":"YulFunctionCall","src":"15801:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15793:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15671:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15686:4:14","type":""}],"src":"15520:419:14"},{"body":{"nodeType":"YulBlock","src":"16116:248:14","statements":[{"nodeType":"YulAssignment","src":"16126:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16138:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16149:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16134:3:14"},"nodeType":"YulFunctionCall","src":"16134:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16126:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16173:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16184:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16169:3:14"},"nodeType":"YulFunctionCall","src":"16169:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16192:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"16198:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16188:3:14"},"nodeType":"YulFunctionCall","src":"16188:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16162:6:14"},"nodeType":"YulFunctionCall","src":"16162:47:14"},"nodeType":"YulExpressionStatement","src":"16162:47:14"},{"nodeType":"YulAssignment","src":"16218:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16352:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16226:124:14"},"nodeType":"YulFunctionCall","src":"16226:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16218:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16096:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16111:4:14","type":""}],"src":"15945:419:14"},{"body":{"nodeType":"YulBlock","src":"16468:124:14","statements":[{"nodeType":"YulAssignment","src":"16478:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16490:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16501:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16486:3:14"},"nodeType":"YulFunctionCall","src":"16486:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16478:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16558:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16571:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16582:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16567:3:14"},"nodeType":"YulFunctionCall","src":"16567:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16514:43:14"},"nodeType":"YulFunctionCall","src":"16514:71:14"},"nodeType":"YulExpressionStatement","src":"16514:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16440:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16452:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16463:4:14","type":""}],"src":"16370:222:14"},{"body":{"nodeType":"YulBlock","src":"16639:88:14","statements":[{"nodeType":"YulAssignment","src":"16649:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"16659:18:14"},"nodeType":"YulFunctionCall","src":"16659:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16649:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16708:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"16716:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"16688:19:14"},"nodeType":"YulFunctionCall","src":"16688:33:14"},"nodeType":"YulExpressionStatement","src":"16688:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"16623:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16632:6:14","type":""}],"src":"16598:129:14"},{"body":{"nodeType":"YulBlock","src":"16773:35:14","statements":[{"nodeType":"YulAssignment","src":"16783:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16799:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16793:5:14"},"nodeType":"YulFunctionCall","src":"16793:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16783:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16766:6:14","type":""}],"src":"16733:75:14"},{"body":{"nodeType":"YulBlock","src":"16880:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"16985:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16987:16:14"},"nodeType":"YulFunctionCall","src":"16987:18:14"},"nodeType":"YulExpressionStatement","src":"16987:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16957:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16965:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16954:2:14"},"nodeType":"YulFunctionCall","src":"16954:30:14"},"nodeType":"YulIf","src":"16951:56:14"},{"nodeType":"YulAssignment","src":"17017:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17047:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17025:21:14"},"nodeType":"YulFunctionCall","src":"17025:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17017:4:14"}]},{"nodeType":"YulAssignment","src":"17091:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17103:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17099:3:14"},"nodeType":"YulFunctionCall","src":"17099:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17091:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16864:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16875:4:14","type":""}],"src":"16814:307:14"},{"body":{"nodeType":"YulBlock","src":"17185:40:14","statements":[{"nodeType":"YulAssignment","src":"17196:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17212:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17206:5:14"},"nodeType":"YulFunctionCall","src":"17206:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17196:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17168:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17178:6:14","type":""}],"src":"17127:98:14"},{"body":{"nodeType":"YulBlock","src":"17290:40:14","statements":[{"nodeType":"YulAssignment","src":"17301:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17317:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17311:5:14"},"nodeType":"YulFunctionCall","src":"17311:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17301:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17273:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17283:6:14","type":""}],"src":"17231:99:14"},{"body":{"nodeType":"YulBlock","src":"17431:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17448:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"17453:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17441:6:14"},"nodeType":"YulFunctionCall","src":"17441:19:14"},"nodeType":"YulExpressionStatement","src":"17441:19:14"},{"nodeType":"YulAssignment","src":"17469:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17488:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17493:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17484:3:14"},"nodeType":"YulFunctionCall","src":"17484:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17469:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17403:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"17408:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17419:11:14","type":""}],"src":"17336:168:14"},{"body":{"nodeType":"YulBlock","src":"17606:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17623:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"17628:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17616:6:14"},"nodeType":"YulFunctionCall","src":"17616:19:14"},"nodeType":"YulExpressionStatement","src":"17616:19:14"},{"nodeType":"YulAssignment","src":"17644:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17663:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17668:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17659:3:14"},"nodeType":"YulFunctionCall","src":"17659:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17644:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17578:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"17583:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17594:11:14","type":""}],"src":"17510:169:14"},{"body":{"nodeType":"YulBlock","src":"17799:34:14","statements":[{"nodeType":"YulAssignment","src":"17809:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"17824:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17809:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17771:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"17776:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17787:11:14","type":""}],"src":"17685:148:14"},{"body":{"nodeType":"YulBlock","src":"17883:261:14","statements":[{"nodeType":"YulAssignment","src":"17893:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17916:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17898:17:14"},"nodeType":"YulFunctionCall","src":"17898:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17893:1:14"}]},{"nodeType":"YulAssignment","src":"17927:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17950:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17932:17:14"},"nodeType":"YulFunctionCall","src":"17932:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17927:1:14"}]},{"body":{"nodeType":"YulBlock","src":"18090:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18092:16:14"},"nodeType":"YulFunctionCall","src":"18092:18:14"},"nodeType":"YulExpressionStatement","src":"18092:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18011:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18018:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"18086:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18014:3:14"},"nodeType":"YulFunctionCall","src":"18014:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18008:2:14"},"nodeType":"YulFunctionCall","src":"18008:81:14"},"nodeType":"YulIf","src":"18005:107:14"},{"nodeType":"YulAssignment","src":"18122:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18133:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"18136:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18129:3:14"},"nodeType":"YulFunctionCall","src":"18129:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18122:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17870:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"17873:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17879:3:14","type":""}],"src":"17839:305:14"},{"body":{"nodeType":"YulBlock","src":"18195:146:14","statements":[{"nodeType":"YulAssignment","src":"18205:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18228:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18210:17:14"},"nodeType":"YulFunctionCall","src":"18210:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18205:1:14"}]},{"nodeType":"YulAssignment","src":"18239:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18262:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18244:17:14"},"nodeType":"YulFunctionCall","src":"18244:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18239:1:14"}]},{"body":{"nodeType":"YulBlock","src":"18286:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18288:16:14"},"nodeType":"YulFunctionCall","src":"18288:18:14"},"nodeType":"YulExpressionStatement","src":"18288:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18280:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"18283:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18277:2:14"},"nodeType":"YulFunctionCall","src":"18277:8:14"},"nodeType":"YulIf","src":"18274:34:14"},{"nodeType":"YulAssignment","src":"18318:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18330:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"18333:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18326:3:14"},"nodeType":"YulFunctionCall","src":"18326:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18318:4:14"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18181:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"18184:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18190:4:14","type":""}],"src":"18150:191:14"},{"body":{"nodeType":"YulBlock","src":"18392:51:14","statements":[{"nodeType":"YulAssignment","src":"18402:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18431:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"18413:17:14"},"nodeType":"YulFunctionCall","src":"18413:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18402:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18374:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18384:7:14","type":""}],"src":"18347:96:14"},{"body":{"nodeType":"YulBlock","src":"18491:48:14","statements":[{"nodeType":"YulAssignment","src":"18501:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18526:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18519:6:14"},"nodeType":"YulFunctionCall","src":"18519:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18512:6:14"},"nodeType":"YulFunctionCall","src":"18512:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18501:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18473:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18483:7:14","type":""}],"src":"18449:90:14"},{"body":{"nodeType":"YulBlock","src":"18589:105:14","statements":[{"nodeType":"YulAssignment","src":"18599:89:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18614:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"18621:66:14","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18610:3:14"},"nodeType":"YulFunctionCall","src":"18610:78:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18599:7:14"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18571:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18581:7:14","type":""}],"src":"18545:149:14"},{"body":{"nodeType":"YulBlock","src":"18745:81:14","statements":[{"nodeType":"YulAssignment","src":"18755:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18770:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"18777:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18766:3:14"},"nodeType":"YulFunctionCall","src":"18766:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18755:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18727:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18737:7:14","type":""}],"src":"18700:126:14"},{"body":{"nodeType":"YulBlock","src":"18877:32:14","statements":[{"nodeType":"YulAssignment","src":"18887:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"18898:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18887:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18859:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18869:7:14","type":""}],"src":"18832:77:14"},{"body":{"nodeType":"YulBlock","src":"18966:103:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18989:3:14"},{"name":"src","nodeType":"YulIdentifier","src":"18994:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"18999:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18976:12:14"},"nodeType":"YulFunctionCall","src":"18976:30:14"},"nodeType":"YulExpressionStatement","src":"18976:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19047:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"19052:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19043:3:14"},"nodeType":"YulFunctionCall","src":"19043:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"19061:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19036:6:14"},"nodeType":"YulFunctionCall","src":"19036:27:14"},"nodeType":"YulExpressionStatement","src":"19036:27:14"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18948:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18953:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"18958:6:14","type":""}],"src":"18915:154:14"},{"body":{"nodeType":"YulBlock","src":"19124:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19134:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"19143:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19138:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"19203:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19228:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"19233:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19224:3:14"},"nodeType":"YulFunctionCall","src":"19224:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19247:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"19252:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19243:3:14"},"nodeType":"YulFunctionCall","src":"19243:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19237:5:14"},"nodeType":"YulFunctionCall","src":"19237:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19217:6:14"},"nodeType":"YulFunctionCall","src":"19217:39:14"},"nodeType":"YulExpressionStatement","src":"19217:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19164:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"19167:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19161:2:14"},"nodeType":"YulFunctionCall","src":"19161:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19175:19:14","statements":[{"nodeType":"YulAssignment","src":"19177:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19186:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"19189:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19182:3:14"},"nodeType":"YulFunctionCall","src":"19182:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19177:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"19157:3:14","statements":[]},"src":"19153:113:14"},{"body":{"nodeType":"YulBlock","src":"19300:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19350:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"19355:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19346:3:14"},"nodeType":"YulFunctionCall","src":"19346:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"19364:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19339:6:14"},"nodeType":"YulFunctionCall","src":"19339:27:14"},"nodeType":"YulExpressionStatement","src":"19339:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19281:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"19284:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19278:2:14"},"nodeType":"YulFunctionCall","src":"19278:13:14"},"nodeType":"YulIf","src":"19275:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19106:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"19111:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"19116:6:14","type":""}],"src":"19075:307:14"},{"body":{"nodeType":"YulBlock","src":"19439:269:14","statements":[{"nodeType":"YulAssignment","src":"19449:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19463:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"19469:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19459:3:14"},"nodeType":"YulFunctionCall","src":"19459:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19449:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"19480:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19510:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"19516:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19506:3:14"},"nodeType":"YulFunctionCall","src":"19506:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19484:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"19557:51:14","statements":[{"nodeType":"YulAssignment","src":"19571:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19585:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19593:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19581:3:14"},"nodeType":"YulFunctionCall","src":"19581:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19571:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19537:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19530:6:14"},"nodeType":"YulFunctionCall","src":"19530:26:14"},"nodeType":"YulIf","src":"19527:81:14"},{"body":{"nodeType":"YulBlock","src":"19660:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19674:16:14"},"nodeType":"YulFunctionCall","src":"19674:18:14"},"nodeType":"YulExpressionStatement","src":"19674:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19624:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19647:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19655:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19644:2:14"},"nodeType":"YulFunctionCall","src":"19644:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19621:2:14"},"nodeType":"YulFunctionCall","src":"19621:38:14"},"nodeType":"YulIf","src":"19618:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19423:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19432:6:14","type":""}],"src":"19388:320:14"},{"body":{"nodeType":"YulBlock","src":"19757:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19767:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19789:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19819:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19797:21:14"},"nodeType":"YulFunctionCall","src":"19797:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19785:3:14"},"nodeType":"YulFunctionCall","src":"19785:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19771:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"19936:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19938:16:14"},"nodeType":"YulFunctionCall","src":"19938:18:14"},"nodeType":"YulExpressionStatement","src":"19938:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19879:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"19891:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19876:2:14"},"nodeType":"YulFunctionCall","src":"19876:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19915:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19927:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19912:2:14"},"nodeType":"YulFunctionCall","src":"19912:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19873:2:14"},"nodeType":"YulFunctionCall","src":"19873:62:14"},"nodeType":"YulIf","src":"19870:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19974:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19978:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19967:6:14"},"nodeType":"YulFunctionCall","src":"19967:22:14"},"nodeType":"YulExpressionStatement","src":"19967:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19743:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"19751:4:14","type":""}],"src":"19714:281:14"},{"body":{"nodeType":"YulBlock","src":"20029:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20046:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20049:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20039:6:14"},"nodeType":"YulFunctionCall","src":"20039:88:14"},"nodeType":"YulExpressionStatement","src":"20039:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20143:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20146:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20136:6:14"},"nodeType":"YulFunctionCall","src":"20136:15:14"},"nodeType":"YulExpressionStatement","src":"20136:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20167:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20170:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20160:6:14"},"nodeType":"YulFunctionCall","src":"20160:15:14"},"nodeType":"YulExpressionStatement","src":"20160:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20001:180:14"},{"body":{"nodeType":"YulBlock","src":"20215:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20232:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20235:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20225:6:14"},"nodeType":"YulFunctionCall","src":"20225:88:14"},"nodeType":"YulExpressionStatement","src":"20225:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20329:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20332:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20322:6:14"},"nodeType":"YulFunctionCall","src":"20322:15:14"},"nodeType":"YulExpressionStatement","src":"20322:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20353:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20356:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20346:6:14"},"nodeType":"YulFunctionCall","src":"20346:15:14"},"nodeType":"YulExpressionStatement","src":"20346:15:14"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"20187:180:14"},{"body":{"nodeType":"YulBlock","src":"20401:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20418:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20421:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20411:6:14"},"nodeType":"YulFunctionCall","src":"20411:88:14"},"nodeType":"YulExpressionStatement","src":"20411:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20515:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20518:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20508:6:14"},"nodeType":"YulFunctionCall","src":"20508:15:14"},"nodeType":"YulExpressionStatement","src":"20508:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20539:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20542:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20532:6:14"},"nodeType":"YulFunctionCall","src":"20532:15:14"},"nodeType":"YulExpressionStatement","src":"20532:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20373:180:14"},{"body":{"nodeType":"YulBlock","src":"20587:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20604:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20607:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20597:6:14"},"nodeType":"YulFunctionCall","src":"20597:88:14"},"nodeType":"YulExpressionStatement","src":"20597:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20701:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20704:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20694:6:14"},"nodeType":"YulFunctionCall","src":"20694:15:14"},"nodeType":"YulExpressionStatement","src":"20694:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20725:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20728:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20718:6:14"},"nodeType":"YulFunctionCall","src":"20718:15:14"},"nodeType":"YulExpressionStatement","src":"20718:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"20559:180:14"},{"body":{"nodeType":"YulBlock","src":"20834:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20851:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20854:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20844:6:14"},"nodeType":"YulFunctionCall","src":"20844:12:14"},"nodeType":"YulExpressionStatement","src":"20844:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"20745:117:14"},{"body":{"nodeType":"YulBlock","src":"20957:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20974:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20977:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20967:6:14"},"nodeType":"YulFunctionCall","src":"20967:12:14"},"nodeType":"YulExpressionStatement","src":"20967:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"20868:117:14"},{"body":{"nodeType":"YulBlock","src":"21080:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21097:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21100:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21090:6:14"},"nodeType":"YulFunctionCall","src":"21090:12:14"},"nodeType":"YulExpressionStatement","src":"21090:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20991:117:14"},{"body":{"nodeType":"YulBlock","src":"21203:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21220:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21223:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21213:6:14"},"nodeType":"YulFunctionCall","src":"21213:12:14"},"nodeType":"YulExpressionStatement","src":"21213:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"21114:117:14"},{"body":{"nodeType":"YulBlock","src":"21285:54:14","statements":[{"nodeType":"YulAssignment","src":"21295:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21313:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"21320:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21309:3:14"},"nodeType":"YulFunctionCall","src":"21309:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21329:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21325:3:14"},"nodeType":"YulFunctionCall","src":"21325:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21305:3:14"},"nodeType":"YulFunctionCall","src":"21305:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21295:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21268:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"21278:6:14","type":""}],"src":"21237:102:14"},{"body":{"nodeType":"YulBlock","src":"21451:126:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21473:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21481:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21469:3:14"},"nodeType":"YulFunctionCall","src":"21469:14:14"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"21485:34:14","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21462:6:14"},"nodeType":"YulFunctionCall","src":"21462:58:14"},"nodeType":"YulExpressionStatement","src":"21462:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21541:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21549:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21537:3:14"},"nodeType":"YulFunctionCall","src":"21537:15:14"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"21554:15:14","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21530:6:14"},"nodeType":"YulFunctionCall","src":"21530:40:14"},"nodeType":"YulExpressionStatement","src":"21530:40:14"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21443:6:14","type":""}],"src":"21345:232:14"},{"body":{"nodeType":"YulBlock","src":"21689:131:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21711:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21719:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21707:3:14"},"nodeType":"YulFunctionCall","src":"21707:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"21723:34:14","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21700:6:14"},"nodeType":"YulFunctionCall","src":"21700:58:14"},"nodeType":"YulExpressionStatement","src":"21700:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21779:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21787:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21775:3:14"},"nodeType":"YulFunctionCall","src":"21775:15:14"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"21792:20:14","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21768:6:14"},"nodeType":"YulFunctionCall","src":"21768:45:14"},"nodeType":"YulExpressionStatement","src":"21768:45:14"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21681:6:14","type":""}],"src":"21583:237:14"},{"body":{"nodeType":"YulBlock","src":"21932:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21954:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21962:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21950:3:14"},"nodeType":"YulFunctionCall","src":"21950:14:14"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"21966:34:14","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21943:6:14"},"nodeType":"YulFunctionCall","src":"21943:58:14"},"nodeType":"YulExpressionStatement","src":"21943:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22022:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22030:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22018:3:14"},"nodeType":"YulFunctionCall","src":"22018:15:14"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"22035:7:14","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22011:6:14"},"nodeType":"YulFunctionCall","src":"22011:32:14"},"nodeType":"YulExpressionStatement","src":"22011:32:14"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21924:6:14","type":""}],"src":"21826:224:14"},{"body":{"nodeType":"YulBlock","src":"22162:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22184:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22192:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22180:3:14"},"nodeType":"YulFunctionCall","src":"22180:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"22196:34:14","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22173:6:14"},"nodeType":"YulFunctionCall","src":"22173:58:14"},"nodeType":"YulExpressionStatement","src":"22173:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22252:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22260:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22248:3:14"},"nodeType":"YulFunctionCall","src":"22248:15:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"22265:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22241:6:14"},"nodeType":"YulFunctionCall","src":"22241:31:14"},"nodeType":"YulExpressionStatement","src":"22241:31:14"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22154:6:14","type":""}],"src":"22056:223:14"},{"body":{"nodeType":"YulBlock","src":"22391:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22413:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22421:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22409:3:14"},"nodeType":"YulFunctionCall","src":"22409:14:14"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"22425:27:14","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22402:6:14"},"nodeType":"YulFunctionCall","src":"22402:51:14"},"nodeType":"YulExpressionStatement","src":"22402:51:14"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22383:6:14","type":""}],"src":"22285:175:14"},{"body":{"nodeType":"YulBlock","src":"22572:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22594:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22602:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22590:3:14"},"nodeType":"YulFunctionCall","src":"22590:14:14"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"22606:34:14","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22583:6:14"},"nodeType":"YulFunctionCall","src":"22583:58:14"},"nodeType":"YulExpressionStatement","src":"22583:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22662:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22670:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22658:3:14"},"nodeType":"YulFunctionCall","src":"22658:15:14"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22675:11:14","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22651:6:14"},"nodeType":"YulFunctionCall","src":"22651:36:14"},"nodeType":"YulExpressionStatement","src":"22651:36:14"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22564:6:14","type":""}],"src":"22466:228:14"},{"body":{"nodeType":"YulBlock","src":"22806:68:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22828:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22836:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22824:3:14"},"nodeType":"YulFunctionCall","src":"22824:14:14"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"22840:26:14","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22817:6:14"},"nodeType":"YulFunctionCall","src":"22817:50:14"},"nodeType":"YulExpressionStatement","src":"22817:50:14"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22798:6:14","type":""}],"src":"22700:174:14"},{"body":{"nodeType":"YulBlock","src":"22986:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23008:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23016:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23004:3:14"},"nodeType":"YulFunctionCall","src":"23004:14:14"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"23020:34:14","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22997:6:14"},"nodeType":"YulFunctionCall","src":"22997:58:14"},"nodeType":"YulExpressionStatement","src":"22997:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23076:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23084:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23072:3:14"},"nodeType":"YulFunctionCall","src":"23072:15:14"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"23089:3:14","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23065:6:14"},"nodeType":"YulFunctionCall","src":"23065:28:14"},"nodeType":"YulExpressionStatement","src":"23065:28:14"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22978:6:14","type":""}],"src":"22880:220:14"},{"body":{"nodeType":"YulBlock","src":"23212:142:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23234:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23242:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23230:3:14"},"nodeType":"YulFunctionCall","src":"23230:14:14"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"23246:34:14","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23223:6:14"},"nodeType":"YulFunctionCall","src":"23223:58:14"},"nodeType":"YulExpressionStatement","src":"23223:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23302:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23310:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23298:3:14"},"nodeType":"YulFunctionCall","src":"23298:15:14"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"23315:31:14","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23291:6:14"},"nodeType":"YulFunctionCall","src":"23291:56:14"},"nodeType":"YulExpressionStatement","src":"23291:56:14"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23204:6:14","type":""}],"src":"23106:248:14"},{"body":{"nodeType":"YulBlock","src":"23403:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"23460:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23469:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23472:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23462:6:14"},"nodeType":"YulFunctionCall","src":"23462:12:14"},"nodeType":"YulExpressionStatement","src":"23462:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23426:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23451:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"23433:17:14"},"nodeType":"YulFunctionCall","src":"23433:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23423:2:14"},"nodeType":"YulFunctionCall","src":"23423:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23416:6:14"},"nodeType":"YulFunctionCall","src":"23416:43:14"},"nodeType":"YulIf","src":"23413:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23396:5:14","type":""}],"src":"23360:122:14"},{"body":{"nodeType":"YulBlock","src":"23528:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"23582:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23591:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23594:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23584:6:14"},"nodeType":"YulFunctionCall","src":"23584:12:14"},"nodeType":"YulExpressionStatement","src":"23584:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23551:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23573:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"23558:14:14"},"nodeType":"YulFunctionCall","src":"23558:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23548:2:14"},"nodeType":"YulFunctionCall","src":"23548:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23541:6:14"},"nodeType":"YulFunctionCall","src":"23541:40:14"},"nodeType":"YulIf","src":"23538:60:14"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23521:5:14","type":""}],"src":"23488:116:14"},{"body":{"nodeType":"YulBlock","src":"23652:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"23708:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23717:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23720:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23710:6:14"},"nodeType":"YulFunctionCall","src":"23710:12:14"},"nodeType":"YulExpressionStatement","src":"23710:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23675:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23699:5:14"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"23682:16:14"},"nodeType":"YulFunctionCall","src":"23682:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23672:2:14"},"nodeType":"YulFunctionCall","src":"23672:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23665:6:14"},"nodeType":"YulFunctionCall","src":"23665:42:14"},"nodeType":"YulIf","src":"23662:62:14"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23645:5:14","type":""}],"src":"23610:120:14"},{"body":{"nodeType":"YulBlock","src":"23779:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"23836:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23845:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23848:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23838:6:14"},"nodeType":"YulFunctionCall","src":"23838:12:14"},"nodeType":"YulExpressionStatement","src":"23838:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23802:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23827:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23809:17:14"},"nodeType":"YulFunctionCall","src":"23809:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23799:2:14"},"nodeType":"YulFunctionCall","src":"23799:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23792:6:14"},"nodeType":"YulFunctionCall","src":"23792:43:14"},"nodeType":"YulIf","src":"23789:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23772:5:14","type":""}],"src":"23736:122:14"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611863565b6102bc565b6040516100fb9190611b80565b60405180910390f35b61010c61039e565b6040516101199190611b9b565b60405180910390f35b61013c600480360381019061013791906118bd565b610430565b6040516101499190611b19565b60405180910390f35b61016c60048036038101906101679190611823565b610476565b005b6101886004803603810190610183919061170d565b61058e565b005b6101a4600480360381019061019f919061170d565b6105ee565b005b6101c060048036038101906101bb91906118bd565b61060e565b6040516101cd9190611b19565b60405180910390f35b6101f060048036038101906101eb91906116a0565b610695565b6040516101fd9190611cdd565b60405180910390f35b61020e61074d565b60405161021b9190611b9b565b60405180910390f35b61023e600480360381019061023991906117e3565b6107df565b005b61025a60048036038101906102559190611760565b6107f5565b005b610276600480360381019061027191906118bd565b610857565b6040516102839190611b9b565b60405180910390f35b6102a660048036038101906102a191906116cd565b6108bf565b6040516102b39190611b80565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611ed1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611ed1565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c9d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cbd565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611bbd565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611c7d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611c5d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611ed1565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611ed1565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611bbd565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611af5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c7d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611bfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611c1d565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611bfd565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611c3d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611b80565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611bdd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a2611fc1565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611f63565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a9190611de7565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a59190611d91565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b81526004016113269493929190611b34565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e9190611890565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390611bdd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4611f63565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1611f63565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510611f63565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539611f63565b5b0492506008810190505b612710831061156957612710838161155f5761155e611f63565b5b0492506004810190505b6064831061158c576064838161158257611581611f63565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115da6115d584611d1d565b611cf8565b9050828152602081018484840111156115f6576115f5611ff5565b5b611601848285611e8f565b509392505050565b60008135905061161881612290565b92915050565b60008135905061162d816122a7565b92915050565b600081359050611642816122be565b92915050565b600081519050611657816122be565b92915050565b600082601f83011261167257611671611ff0565b5b81356116828482602086016115c7565b91505092915050565b60008135905061169a816122d5565b92915050565b6000602082840312156116b6576116b5611fff565b5b60006116c484828501611609565b91505092915050565b600080604083850312156116e4576116e3611fff565b5b60006116f285828601611609565b925050602061170385828601611609565b9150509250929050565b60008060006060848603121561172657611725611fff565b5b600061173486828701611609565b935050602061174586828701611609565b92505060406117568682870161168b565b9150509250925092565b6000806000806080858703121561177a57611779611fff565b5b600061178887828801611609565b945050602061179987828801611609565b93505060406117aa8782880161168b565b925050606085013567ffffffffffffffff8111156117cb576117ca611ffa565b5b6117d78782880161165d565b91505092959194509250565b600080604083850312156117fa576117f9611fff565b5b600061180885828601611609565b92505060206118198582860161161e565b9150509250929050565b6000806040838503121561183a57611839611fff565b5b600061184885828601611609565b92505060206118598582860161168b565b9150509250929050565b60006020828403121561187957611878611fff565b5b600061188784828501611633565b91505092915050565b6000602082840312156118a6576118a5611fff565b5b60006118b484828501611648565b91505092915050565b6000602082840312156118d3576118d2611fff565b5b60006118e18482850161168b565b91505092915050565b6118f381611e1b565b82525050565b61190281611e2d565b82525050565b600061191382611d4e565b61191d8185611d64565b935061192d818560208601611e9e565b61193681612004565b840191505092915050565b600061194c82611d59565b6119568185611d75565b9350611966818560208601611e9e565b61196f81612004565b840191505092915050565b600061198582611d59565b61198f8185611d86565b935061199f818560208601611e9e565b80840191505092915050565b60006119b8602d83611d75565b91506119c382612015565b604082019050919050565b60006119db603283611d75565b91506119e682612064565b604082019050919050565b60006119fe602583611d75565b9150611a09826120b3565b604082019050919050565b6000611a21602483611d75565b9150611a2c82612102565b604082019050919050565b6000611a44601983611d75565b9150611a4f82612151565b602082019050919050565b6000611a67602983611d75565b9150611a728261217a565b604082019050919050565b6000611a8a601883611d75565b9150611a95826121c9565b602082019050919050565b6000611aad602183611d75565b9150611ab8826121f2565b604082019050919050565b6000611ad0603d83611d75565b9150611adb82612241565b604082019050919050565b611aef81611e85565b82525050565b6000611b01828561197a565b9150611b0d828461197a565b91508190509392505050565b6000602082019050611b2e60008301846118ea565b92915050565b6000608082019050611b4960008301876118ea565b611b5660208301866118ea565b611b636040830185611ae6565b8181036060830152611b758184611908565b905095945050505050565b6000602082019050611b9560008301846118f9565b92915050565b60006020820190508181036000830152611bb58184611941565b905092915050565b60006020820190508181036000830152611bd6816119ab565b9050919050565b60006020820190508181036000830152611bf6816119ce565b9050919050565b60006020820190508181036000830152611c16816119f1565b9050919050565b60006020820190508181036000830152611c3681611a14565b9050919050565b60006020820190508181036000830152611c5681611a37565b9050919050565b60006020820190508181036000830152611c7681611a5a565b9050919050565b60006020820190508181036000830152611c9681611a7d565b9050919050565b60006020820190508181036000830152611cb681611aa0565b9050919050565b60006020820190508181036000830152611cd681611ac3565b9050919050565b6000602082019050611cf26000830184611ae6565b92915050565b6000611d02611d13565b9050611d0e8282611f03565b919050565b6000604051905090565b600067ffffffffffffffff821115611d3857611d37611fc1565b5b611d4182612004565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d9c82611e85565b9150611da783611e85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ddc57611ddb611f34565b5b828201905092915050565b6000611df282611e85565b9150611dfd83611e85565b925082821015611e1057611e0f611f34565b5b828203905092915050565b6000611e2682611e65565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ebc578082015181840152602081019050611ea1565b83811115611ecb576000848401525b50505050565b60006002820490506001821680611ee957607f821691505b60208210811415611efd57611efc611f92565b5b50919050565b611f0c82612004565b810181811067ffffffffffffffff82111715611f2b57611f2a611fc1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61229981611e1b565b81146122a457600080fd5b50565b6122b081611e2d565b81146122bb57600080fd5b50565b6122c781611e39565b81146122d257600080fd5b50565b6122de81611e85565b81146122e957600080fd5b5056fea2646970667358221220d8ee7fada685f0b32f66df66d6451cea01150b5c19624f410f83018282edc5bb64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1823 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1ED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x1F63 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DA PUSH2 0x15D5 DUP5 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1CF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH2 0x1601 DUP5 DUP3 DUP6 PUSH2 0x1E8F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1618 DUP2 PUSH2 0x2290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x22A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1642 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1657 DUP2 PUSH2 0x22BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1672 JUMPI PUSH2 0x1671 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1682 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169A DUP2 PUSH2 0x22D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH2 0x16B5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1734 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1745 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1756 DUP7 DUP3 DUP8 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1788 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1799 DUP8 DUP3 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17AA DUP8 DUP3 DUP9 ADD PUSH2 0x168B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x1FFA JUMP JUMPDEST JUMPDEST PUSH2 0x17D7 DUP8 DUP3 DUP9 ADD PUSH2 0x165D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1808 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1819 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1848 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1859 DUP6 DUP3 DUP7 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP5 DUP3 DUP6 ADD PUSH2 0x1633 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP5 DUP3 DUP6 ADD PUSH2 0x168B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F3 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1902 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1913 DUP3 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x191D DUP2 DUP6 PUSH2 0x1D64 JUMP JUMPDEST SWAP4 POP PUSH2 0x192D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194C DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x1956 DUP2 DUP6 PUSH2 0x1D75 JUMP JUMPDEST SWAP4 POP PUSH2 0x1966 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x196F DUP2 PUSH2 0x2004 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP3 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x198F DUP2 DUP6 PUSH2 0x1D86 JUMP JUMPDEST SWAP4 POP PUSH2 0x199F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B8 PUSH1 0x2D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP3 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DB PUSH1 0x32 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E6 DUP3 PUSH2 0x2064 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FE PUSH1 0x25 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A09 DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A21 PUSH1 0x24 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2C DUP3 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A44 PUSH1 0x19 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A67 PUSH1 0x29 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A72 DUP3 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8A PUSH1 0x18 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A95 DUP3 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x21 DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD0 PUSH1 0x3D DUP4 PUSH2 0x1D75 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADB DUP3 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B01 DUP3 DUP6 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AE6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 DUP5 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB5 DUP2 DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD6 DUP2 PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D02 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0E DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST PUSH2 0x1D41 DUP3 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9C DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA7 DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 DUP3 PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP4 PUSH2 0x1E85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E10 JUMPI PUSH2 0x1E0F PUSH2 0x1F34 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E26 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EA1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1ECB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EE9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EFD JUMPI PUSH2 0x1EFC PUSH2 0x1F92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C DUP3 PUSH2 0x2004 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1FC1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2299 DUP2 PUSH2 0x1E1B JUMP JUMPDEST DUP2 EQ PUSH2 0x22A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22B0 DUP2 PUSH2 0x1E2D JUMP JUMPDEST DUP2 EQ PUSH2 0x22BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C7 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22DE DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP2 EQ PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xEE PUSH32 0xADA685F0B32F66DF66D6451CEA01150B5C19624F410F83018282EDC5BB64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"628:16327:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:0:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;12768:171:0:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:6:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:0:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:9:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:410:14:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:366::-;7365:3;7386:67;7450:2;7445:3;7386:67;:::i;:::-;7379:74;;7462:93;7551:3;7462:93;:::i;:::-;7580:2;7575:3;7571:12;7564:19;;7223:366;;;:::o;7595:::-;7737:3;7758:67;7822:2;7817:3;7758:67;:::i;:::-;7751:74;;7834:93;7923:3;7834:93;:::i;:::-;7952:2;7947:3;7943:12;7936:19;;7595:366;;;:::o;7967:::-;8109:3;8130:67;8194:2;8189:3;8130:67;:::i;:::-;8123:74;;8206:93;8295:3;8206:93;:::i;:::-;8324:2;8319:3;8315:12;8308:19;;7967:366;;;:::o;8339:::-;8481:3;8502:67;8566:2;8561:3;8502:67;:::i;:::-;8495:74;;8578:93;8667:3;8578:93;:::i;:::-;8696:2;8691:3;8687:12;8680:19;;8339:366;;;:::o;8711:::-;8853:3;8874:67;8938:2;8933:3;8874:67;:::i;:::-;8867:74;;8950:93;9039:3;8950:93;:::i;:::-;9068:2;9063:3;9059:12;9052:19;;8711:366;;;:::o;9083:::-;9225:3;9246:67;9310:2;9305:3;9246:67;:::i;:::-;9239:74;;9322:93;9411:3;9322:93;:::i;:::-;9440:2;9435:3;9431:12;9424:19;;9083:366;;;:::o;9455:::-;9597:3;9618:67;9682:2;9677:3;9618:67;:::i;:::-;9611:74;;9694:93;9783:3;9694:93;:::i;:::-;9812:2;9807:3;9803:12;9796:19;;9455:366;;;:::o;9827:::-;9969:3;9990:67;10054:2;10049:3;9990:67;:::i;:::-;9983:74;;10066:93;10155:3;10066:93;:::i;:::-;10184:2;10179:3;10175:12;10168:19;;9827:366;;;:::o;10199:::-;10341:3;10362:67;10426:2;10421:3;10362:67;:::i;:::-;10355:74;;10438:93;10527:3;10438:93;:::i;:::-;10556:2;10551:3;10547:12;10540:19;;10199:366;;;:::o;10571:118::-;10658:24;10676:5;10658:24;:::i;:::-;10653:3;10646:37;10571:118;;:::o;10695:435::-;10875:3;10897:95;10988:3;10979:6;10897:95;:::i;:::-;10890:102;;11009:95;11100:3;11091:6;11009:95;:::i;:::-;11002:102;;11121:3;11114:10;;10695:435;;;;;:::o;11136:222::-;11229:4;11267:2;11256:9;11252:18;11244:26;;11280:71;11348:1;11337:9;11333:17;11324:6;11280:71;:::i;:::-;11136:222;;;;:::o;11364:640::-;11559:4;11597:3;11586:9;11582:19;11574:27;;11611:71;11679:1;11668:9;11664:17;11655:6;11611:71;:::i;:::-;11692:72;11760:2;11749:9;11745:18;11736:6;11692:72;:::i;:::-;11774;11842:2;11831:9;11827:18;11818:6;11774:72;:::i;:::-;11893:9;11887:4;11883:20;11878:2;11867:9;11863:18;11856:48;11921:76;11992:4;11983:6;11921:76;:::i;:::-;11913:84;;11364:640;;;;;;;:::o;12010:210::-;12097:4;12135:2;12124:9;12120:18;12112:26;;12148:65;12210:1;12199:9;12195:17;12186:6;12148:65;:::i;:::-;12010:210;;;;:::o;12226:313::-;12339:4;12377:2;12366:9;12362:18;12354:26;;12426:9;12420:4;12416:20;12412:1;12401:9;12397:17;12390:47;12454:78;12527:4;12518:6;12454:78;:::i;:::-;12446:86;;12226:313;;;;:::o;12545:419::-;12711:4;12749:2;12738:9;12734:18;12726:26;;12798:9;12792:4;12788:20;12784:1;12773:9;12769:17;12762:47;12826:131;12952:4;12826:131;:::i;:::-;12818:139;;12545:419;;;:::o;12970:::-;13136:4;13174:2;13163:9;13159:18;13151:26;;13223:9;13217:4;13213:20;13209:1;13198:9;13194:17;13187:47;13251:131;13377:4;13251:131;:::i;:::-;13243:139;;12970:419;;;:::o;13395:::-;13561:4;13599:2;13588:9;13584:18;13576:26;;13648:9;13642:4;13638:20;13634:1;13623:9;13619:17;13612:47;13676:131;13802:4;13676:131;:::i;:::-;13668:139;;13395:419;;;:::o;13820:::-;13986:4;14024:2;14013:9;14009:18;14001:26;;14073:9;14067:4;14063:20;14059:1;14048:9;14044:17;14037:47;14101:131;14227:4;14101:131;:::i;:::-;14093:139;;13820:419;;;:::o;14245:::-;14411:4;14449:2;14438:9;14434:18;14426:26;;14498:9;14492:4;14488:20;14484:1;14473:9;14469:17;14462:47;14526:131;14652:4;14526:131;:::i;:::-;14518:139;;14245:419;;;:::o;14670:::-;14836:4;14874:2;14863:9;14859:18;14851:26;;14923:9;14917:4;14913:20;14909:1;14898:9;14894:17;14887:47;14951:131;15077:4;14951:131;:::i;:::-;14943:139;;14670:419;;;:::o;15095:::-;15261:4;15299:2;15288:9;15284:18;15276:26;;15348:9;15342:4;15338:20;15334:1;15323:9;15319:17;15312:47;15376:131;15502:4;15376:131;:::i;:::-;15368:139;;15095:419;;;:::o;15520:::-;15686:4;15724:2;15713:9;15709:18;15701:26;;15773:9;15767:4;15763:20;15759:1;15748:9;15744:17;15737:47;15801:131;15927:4;15801:131;:::i;:::-;15793:139;;15520:419;;;:::o;15945:::-;16111:4;16149:2;16138:9;16134:18;16126:26;;16198:9;16192:4;16188:20;16184:1;16173:9;16169:17;16162:47;16226:131;16352:4;16226:131;:::i;:::-;16218:139;;15945:419;;;:::o;16370:222::-;16463:4;16501:2;16490:9;16486:18;16478:26;;16514:71;16582:1;16571:9;16567:17;16558:6;16514:71;:::i;:::-;16370:222;;;;:::o;16598:129::-;16632:6;16659:20;;:::i;:::-;16649:30;;16688:33;16716:4;16708:6;16688:33;:::i;:::-;16598:129;;;:::o;16733:75::-;16766:6;16799:2;16793:9;16783:19;;16733:75;:::o;16814:307::-;16875:4;16965:18;16957:6;16954:30;16951:56;;;16987:18;;:::i;:::-;16951:56;17025:29;17047:6;17025:29;:::i;:::-;17017:37;;17109:4;17103;17099:15;17091:23;;16814:307;;;:::o;17127:98::-;17178:6;17212:5;17206:12;17196:22;;17127:98;;;:::o;17231:99::-;17283:6;17317:5;17311:12;17301:22;;17231:99;;;:::o;17336:168::-;17419:11;17453:6;17448:3;17441:19;17493:4;17488:3;17484:14;17469:29;;17336:168;;;;:::o;17510:169::-;17594:11;17628:6;17623:3;17616:19;17668:4;17663:3;17659:14;17644:29;;17510:169;;;;:::o;17685:148::-;17787:11;17824:3;17809:18;;17685:148;;;;:::o;17839:305::-;17879:3;17898:20;17916:1;17898:20;:::i;:::-;17893:25;;17932:20;17950:1;17932:20;:::i;:::-;17927:25;;18086:1;18018:66;18014:74;18011:1;18008:81;18005:107;;;18092:18;;:::i;:::-;18005:107;18136:1;18133;18129:9;18122:16;;17839:305;;;;:::o;18150:191::-;18190:4;18210:20;18228:1;18210:20;:::i;:::-;18205:25;;18244:20;18262:1;18244:20;:::i;:::-;18239:25;;18283:1;18280;18277:8;18274:34;;;18288:18;;:::i;:::-;18274:34;18333:1;18330;18326:9;18318:17;;18150:191;;;;:::o;18347:96::-;18384:7;18413:24;18431:5;18413:24;:::i;:::-;18402:35;;18347:96;;;:::o;18449:90::-;18483:7;18526:5;18519:13;18512:21;18501:32;;18449:90;;;:::o;18545:149::-;18581:7;18621:66;18614:5;18610:78;18599:89;;18545:149;;;:::o;18700:126::-;18737:7;18777:42;18770:5;18766:54;18755:65;;18700:126;;;:::o;18832:77::-;18869:7;18898:5;18887:16;;18832:77;;;:::o;18915:154::-;18999:6;18994:3;18989;18976:30;19061:1;19052:6;19047:3;19043:16;19036:27;18915:154;;;:::o;19075:307::-;19143:1;19153:113;19167:6;19164:1;19161:13;19153:113;;;19252:1;19247:3;19243:11;19237:18;19233:1;19228:3;19224:11;19217:39;19189:2;19186:1;19182:10;19177:15;;19153:113;;;19284:6;19281:1;19278:13;19275:101;;;19364:1;19355:6;19350:3;19346:16;19339:27;19275:101;19124:258;19075:307;;;:::o;19388:320::-;19432:6;19469:1;19463:4;19459:12;19449:22;;19516:1;19510:4;19506:12;19537:18;19527:81;;19593:4;19585:6;19581:17;19571:27;;19527:81;19655:2;19647:6;19644:14;19624:18;19621:38;19618:84;;;19674:18;;:::i;:::-;19618:84;19439:269;19388:320;;;:::o;19714:281::-;19797:27;19819:4;19797:27;:::i;:::-;19789:6;19785:40;19927:6;19915:10;19912:22;19891:18;19879:10;19876:34;19873:62;19870:88;;;19938:18;;:::i;:::-;19870:88;19978:10;19974:2;19967:22;19757:238;19714:281;;:::o;20001:180::-;20049:77;20046:1;20039:88;20146:4;20143:1;20136:15;20170:4;20167:1;20160:15;20187:180;20235:77;20232:1;20225:88;20332:4;20329:1;20322:15;20356:4;20353:1;20346:15;20373:180;20421:77;20418:1;20411:88;20518:4;20515:1;20508:15;20542:4;20539:1;20532:15;20559:180;20607:77;20604:1;20597:88;20704:4;20701:1;20694:15;20728:4;20725:1;20718:15;20745:117;20854:1;20851;20844:12;20868:117;20977:1;20974;20967:12;20991:117;21100:1;21097;21090:12;21114:117;21223:1;21220;21213:12;21237:102;21278:6;21329:2;21325:7;21320:2;21313:5;21309:14;21305:28;21295:38;;21237:102;;;:::o;21345:232::-;21485:34;21481:1;21473:6;21469:14;21462:58;21554:15;21549:2;21541:6;21537:15;21530:40;21345:232;:::o;21583:237::-;21723:34;21719:1;21711:6;21707:14;21700:58;21792:20;21787:2;21779:6;21775:15;21768:45;21583:237;:::o;21826:224::-;21966:34;21962:1;21954:6;21950:14;21943:58;22035:7;22030:2;22022:6;22018:15;22011:32;21826:224;:::o;22056:223::-;22196:34;22192:1;22184:6;22180:14;22173:58;22265:6;22260:2;22252:6;22248:15;22241:31;22056:223;:::o;22285:175::-;22425:27;22421:1;22413:6;22409:14;22402:51;22285:175;:::o;22466:228::-;22606:34;22602:1;22594:6;22590:14;22583:58;22675:11;22670:2;22662:6;22658:15;22651:36;22466:228;:::o;22700:174::-;22840:26;22836:1;22828:6;22824:14;22817:50;22700:174;:::o;22880:220::-;23020:34;23016:1;23008:6;23004:14;22997:58;23089:3;23084:2;23076:6;23072:15;23065:28;22880:220;:::o;23106:248::-;23246:34;23242:1;23234:6;23230:14;23223:58;23315:31;23310:2;23302:6;23298:15;23291:56;23106:248;:::o;23360:122::-;23433:24;23451:5;23433:24;:::i;:::-;23426:5;23423:35;23413:63;;23472:1;23469;23462:12;23413:63;23360:122;:::o;23488:116::-;23558:21;23573:5;23558:21;:::i;:::-;23551:5;23548:32;23538:60;;23594:1;23591;23584:12;23538:60;23488:116;:::o;23610:120::-;23682:23;23699:5;23682:23;:::i;:::-;23675:5;23672:34;23662:62;;23720:1;23717;23710:12;23662:62;23610:120;:::o;23736:122::-;23809:24;23827:5;23809:24;:::i;:::-;23802:5;23799:35;23789:63;;23848:1;23845;23838:12;23789:63;23736:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1798800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3467","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"infinite","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":25,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":27,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":31,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":35,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":39,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":45,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080fee02d62f18fb661f56930df7c1f126654f6b3a78ce5cc32cdcb32151203fd64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 INVALID 0xE0 0x2D PUSH3 0xF18FB6 PUSH2 0xF569 ADDRESS 0xDF PUSH29 0x1F126654F6B3A78CE5CC32CDCB32151203FD64736F6C63430008070033 ","sourceMap":"194:8964:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080fee02d62f18fb661f56930df7c1f126654f6b3a78ce5cc32cdcb32151203fd64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 INVALID 0xE0 0x2D PUSH3 0xF18FB6 PUSH2 0xF569 ADDRESS 0xDF PUSH29 0x1F126654F6B3A78CE5CC32CDCB32151203FD64736F6C63430008070033 ","sourceMap":"194:8964:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e54bbe508058abc16ba9ab18b15d60304dcfbec11b06791a21ce393f6c77ed564736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SLOAD 0xBB 0xE5 ADDMOD SDIV DUP11 0xBC AND 0xBA SWAP11 0xB1 DUP12 ISZERO 0xD6 SUB DIV 0xDC 0xFB 0xEC GT 0xB0 PUSH8 0x91A21CE393F6C77E 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"188:2065:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e54bbe508058abc16ba9ab18b15d60304dcfbec11b06791a21ce393f6c77ed564736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SLOAD 0xBB 0xE5 ADDMOD SDIV DUP11 0xBC AND 0xBA SWAP11 0xB1 DUP12 ISZERO 0xD6 SUB DIV 0xDC 0xFB 0xEC GT 0xB0 PUSH8 0x91A21CE393F6C77E 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"188:2065:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adc8bca8ac6496ed9b3beb6b4c3a022305dad7b59bb328b83de1bdab7925719c64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC8 0xBC 0xA8 0xAC PUSH5 0x96ED9B3BEB PUSH12 0x4C3A022305DAD7B59BB328B8 RETURNDATASIZE 0xE1 0xBD 0xAB PUSH26 0x25719C64736F6C63430008070033000000000000000000000000 ","sourceMap":"202:12302:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adc8bca8ac6496ed9b3beb6b4c3a022305dad7b59bb328b83de1bdab7925719c64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC8 0xBC 0xA8 0xAC PUSH5 0x96ED9B3BEB PUSH12 0x4C3A022305DAD7B59BB328B8 RETURNDATASIZE 0xE1 0xBD 0xAB PUSH26 0x25719C64736F6C63430008070033000000000000000000000000 ","sourceMap":"202:12302:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"base64-sol/base64.sol":{"Base64":{"abi":[],"devdoc":{"author":"Brecht Devos - <brecht@loopring.org>","kind":"dev","methods":{},"title":"Base64","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cd14887dbee643f7e31a5380cebde5310babde0bc94e5f347eb3be47c6040fe764736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD EQ DUP9 PUSH30 0xBEE643F7E31A5380CEBDE5310BABDE0BC94E5F347EB3BE47C6040FE76473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"166:2114:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cd14887dbee643f7e31a5380cebde5310babde0bc94e5f347eb3be47c6040fe764736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD EQ DUP9 PUSH30 0xBEE643F7E31A5380CEBDE5310BABDE0BC94E5F347EB3BE47C6040FE76473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"166:2114:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Brecht Devos - <brecht@loopring.org>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Base64\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides a function for encoding some bytes in base64\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"base64-sol/base64.sol\":\"Base64\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides a function for encoding some bytes in base64\\nlibrary Base64 {\\n    string internal constant TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n        \\n        // load the table into memory\\n        string memory table = TABLE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n            \\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n            \\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n            \\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n            \\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               dataPtr := add(dataPtr, 3)\\n               \\n               // read 3 bytes\\n               let input := mload(dataPtr)\\n               \\n               // write 4 characters\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(18, input), 0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(12, input), 0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr( 6, input), 0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(        input,  0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n            }\\n            \\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n        \\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x0c8ad17afea99676d4dbab1857f52a7660b67602a79d03abd0a4c742074bbeb3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Provides a function for encoding some bytes in base64","version":1}}},"contracts/NftPilarofEd.sol":{"NftPilarofEducation":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"TOKEN_IMAGE_URI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"hasNft","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"s_hasNft","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2610":{"entryPoint":null,"id":2610,"parameterSlots":0,"returnSlots":0},"@_62":{"entryPoint":null,"id":62,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":368,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":422,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:14","statements":[{"body":{"nodeType":"YulBlock","src":"58:269:14","statements":[{"nodeType":"YulAssignment","src":"68:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"82:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"88:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"78:3:14"},"nodeType":"YulFunctionCall","src":"78:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"68:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"99:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"129:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"125:3:14"},"nodeType":"YulFunctionCall","src":"125:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"103:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"176:51:14","statements":[{"nodeType":"YulAssignment","src":"190:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"204:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"212:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"200:3:14"},"nodeType":"YulFunctionCall","src":"200:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"190:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"156:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"149:6:14"},"nodeType":"YulFunctionCall","src":"149:26:14"},"nodeType":"YulIf","src":"146:81:14"},{"body":{"nodeType":"YulBlock","src":"279:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"293:16:14"},"nodeType":"YulFunctionCall","src":"293:18:14"},"nodeType":"YulExpressionStatement","src":"293:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"243:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"266:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"274:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"263:2:14"},"nodeType":"YulFunctionCall","src":"263:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"240:2:14"},"nodeType":"YulFunctionCall","src":"240:38:14"},"nodeType":"YulIf","src":"237:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"51:6:14","type":""}],"src":"7:320:14"},{"body":{"nodeType":"YulBlock","src":"361:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"378:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"381:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"371:6:14"},"nodeType":"YulFunctionCall","src":"371:88:14"},"nodeType":"YulExpressionStatement","src":"371:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"475:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"478:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"468:6:14"},"nodeType":"YulFunctionCall","src":"468:15:14"},"nodeType":"YulExpressionStatement","src":"468:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"499:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"492:6:14"},"nodeType":"YulFunctionCall","src":"492:15:14"},"nodeType":"YulExpressionStatement","src":"492:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"333:180:14"}]},"contents":"{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53747265616D5472697669610000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6C6576656C203100000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x1D5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xCE SWAP1 PUSH3 0x170 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x10D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x13D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x14D SWAP2 SWAP1 PUSH3 0x151 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x189 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0x1A6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x274E DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xF5D18D35 EQ PUSH2 0x364 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AE JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x4ED7FF63 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x5DBE700F EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46F JUMPI POP PUSH2 0x46E DUP3 PUSH2 0xAD9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x485 SWAP1 PUSH2 0x213E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B1 SWAP1 PUSH2 0x213E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x513 DUP3 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP3 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C1 SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E9 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x618 JUMPI POP PUSH2 0x617 DUP2 PUSH2 0x612 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST JUMPDEST PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64E SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x661 DUP4 DUP4 PUSH2 0xB96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x677 PUSH2 0x671 PUSH2 0xB8E JUMP JUMPDEST DUP3 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C1 DUP4 DUP4 DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6E1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x949 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2696 PUSH1 0x43 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x764 DUP4 PUSH2 0xFDE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x851 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x213E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x213E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x929 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x929 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x945 PUSH2 0x93E PUSH2 0xB8E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x101B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x95A PUSH2 0x954 PUSH2 0xB8E JUMP JUMPDEST DUP4 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x990 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9B5 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x9FE PUSH2 0x9C0 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2696 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9EA SWAP3 SWAP2 SWAP1 PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA0F SWAP3 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4C DUP2 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB82 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC09 DUP4 PUSH2 0x758 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC5B DUP4 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC9D JUMPI POP PUSH2 0xC9C DUP2 DUP6 PUSH2 0xA25 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xCDB JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC3 DUP5 PUSH2 0x508 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD04 DUP3 PUSH2 0x758 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC1 SWAP1 PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13E7 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF7 DUP3 PUSH2 0x758 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE44 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xFD9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x150D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1193 DUP5 DUP5 DUP5 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x119F DUP5 DUP5 DUP5 DUP5 PUSH2 0x1513 JUMP JUMPDEST PUSH2 0x11DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D5 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26D9 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x1273 SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12B3 JUMPI PUSH2 0x12B2 PUSH2 0x222E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12E5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1360 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x137A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x138A JUMPI PUSH2 0x1395 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x1395 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13C8 DUP4 PUSH2 0xFDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147B JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1473 SWAP2 SWAP1 PUSH2 0x2054 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1506 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14FE SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1534 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16AA JUMP JUMPDEST ISZERO PUSH2 0x169D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x155D PUSH2 0xB8E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15CA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C7 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x164D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163C SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E0 PUSH2 0x16DB DUP5 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0x1EDA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x2262 JUMP JUMPDEST JUMPDEST PUSH2 0x1707 DUP5 DUP3 DUP6 PUSH2 0x20FC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x171E DUP2 PUSH2 0x2639 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1733 DUP2 PUSH2 0x2650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1748 DUP2 PUSH2 0x2667 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x175D DUP2 PUSH2 0x2667 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1778 JUMPI PUSH2 0x1777 PUSH2 0x225D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1788 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17A0 DUP2 PUSH2 0x267E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17BC JUMPI PUSH2 0x17BB PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17CA DUP5 DUP3 DUP6 ADD PUSH2 0x170F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EA JUMPI PUSH2 0x17E9 PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F8 DUP6 DUP3 DUP7 ADD PUSH2 0x170F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1809 DUP6 DUP3 DUP7 ADD PUSH2 0x170F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x182C JUMPI PUSH2 0x182B PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x183A DUP7 DUP3 DUP8 ADD PUSH2 0x170F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x184B DUP7 DUP3 DUP8 ADD PUSH2 0x170F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x185C DUP7 DUP3 DUP8 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1880 JUMPI PUSH2 0x187F PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x188E DUP8 DUP3 DUP9 ADD PUSH2 0x170F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189F DUP8 DUP3 DUP9 ADD PUSH2 0x170F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18B0 DUP8 DUP3 DUP9 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x2267 JUMP JUMPDEST JUMPDEST PUSH2 0x18DD DUP8 DUP3 DUP9 ADD PUSH2 0x1763 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1900 JUMPI PUSH2 0x18FF PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190E DUP6 DUP3 DUP7 ADD PUSH2 0x170F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191F DUP6 DUP3 DUP7 ADD PUSH2 0x1724 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x194E DUP6 DUP3 DUP7 ADD PUSH2 0x170F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195F DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x198D DUP5 DUP3 DUP6 ADD PUSH2 0x1739 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP5 DUP3 DUP6 ADD PUSH2 0x174E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D9 JUMPI PUSH2 0x19D8 PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19E7 DUP5 DUP3 DUP6 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F9 DUP2 PUSH2 0x2088 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A08 DUP2 PUSH2 0x209A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A19 DUP3 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x1A23 DUP2 DUP6 PUSH2 0x1F46 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A33 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x210B JUMP JUMPDEST PUSH2 0x1A3C DUP2 PUSH2 0x2271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A52 DUP3 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1A5C DUP2 DUP6 PUSH2 0x1F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x210B JUMP JUMPDEST PUSH2 0x1A75 DUP2 PUSH2 0x2271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8B DUP3 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1A95 DUP2 DUP6 PUSH2 0x1F68 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AA5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x210B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABE PUSH1 0x2D DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC9 DUP3 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE1 PUSH1 0x9 DUP4 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEC DUP3 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B04 PUSH1 0x32 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0F DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH1 0x25 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B32 DUP3 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4A PUSH1 0x4D DUP4 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B55 DUP3 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x4D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6D PUSH1 0x24 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B78 DUP3 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x19 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x245C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB3 PUSH1 0x41 DUP4 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBE DUP3 PUSH2 0x2485 JUMP JUMPDEST PUSH1 0x41 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD6 PUSH1 0x29 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE1 DUP3 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF9 PUSH1 0x2 DUP4 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C04 DUP3 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1C PUSH1 0x18 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C27 DUP3 PUSH2 0x2572 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3F PUSH1 0x21 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4A DUP3 PUSH2 0x259B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C62 PUSH1 0x3D DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6D DUP3 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C81 DUP2 PUSH2 0x20F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C93 DUP3 DUP6 PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9F DUP3 DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB6 DUP3 PUSH2 0x1AD4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC2 DUP3 DUP6 PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP3 PUSH2 0x1B3D JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD8 DUP3 PUSH2 0x1BA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEF DUP3 PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D10 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D2B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x19F0 JUMP JUMPDEST PUSH2 0x1D38 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19F0 JUMP JUMPDEST PUSH2 0x1D45 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C78 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D57 DUP2 DUP5 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D97 DUP2 DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB8 DUP2 PUSH2 0x1AB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD8 DUP2 PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF8 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E18 DUP2 PUSH2 0x1B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E38 DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E58 DUP2 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E78 DUP2 PUSH2 0x1C0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E98 DUP2 PUSH2 0x1C32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB8 DUP2 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EF0 DUP3 DUP3 PUSH2 0x2170 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F19 PUSH2 0x222E JUMP JUMPDEST JUMPDEST PUSH2 0x1F23 DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7E DUP3 PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F89 DUP4 PUSH2 0x20F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1FBE JUMPI PUSH2 0x1FBD PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD4 DUP3 PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDF DUP4 PUSH2 0x20F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FEF JUMPI PUSH2 0x1FEE PUSH2 0x21D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2005 DUP3 PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2010 DUP4 PUSH2 0x20F2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2049 JUMPI PUSH2 0x2048 PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205F DUP3 PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x206A DUP4 PUSH2 0x20F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x207D JUMPI PUSH2 0x207C PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2093 DUP3 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2129 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x210E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2138 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2156 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x216A JUMPI PUSH2 0x2169 PUSH2 0x21FF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2179 DUP3 PUSH2 0x2271 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2198 JUMPI PUSH2 0x2197 PUSH2 0x222E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22596F752063617074757265642074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x686973204E46542061732070617274206F662074686520656475636174696F6E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x616C2053747265616D21222C2000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B696C6C73222C202276616C7565223A203130307D5D2C2022696D616765223A PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2642 DUP2 PUSH2 0x2088 JUMP JUMPDEST DUP2 EQ PUSH2 0x264D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2659 DUP2 PUSH2 0x209A JUMP JUMPDEST DUP2 EQ PUSH2 0x2664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2670 DUP2 PUSH2 0x20A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x267B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2687 DUP2 PUSH2 0x20F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH9 0x747470733A2F2F6970 PUSH7 0x732E696F2F6970 PUSH7 0x732F516D556558 JUMP CALLDATASIZE CALLER JUMP PUSH23 0x725958774436356774457A365746434A786F363250484A CALLDATALOAD PUSH17 0x437569664336716D367555414243444546 SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 DUP3 0xFB 0xCB GASLIMIT 0xD1 DUP4 NUMBER 0xBB CODESIZE ADDRESS 0xF6 0xE3 0xE7 PUSH21 0xE8B41587B729A06E8ED3D06895897964C1BB64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"148:1880:11:-:0;;;401:125;;;;;;;;;;1390:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;518:1:11::1;501:14;:18;;;;148:1880:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:14:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:81;;212:4;204:6;200:17;190:27;;146:81;274:2;266:6;263:14;243:18;240:38;237:84;;;293:18;;:::i;:::-;237:84;58:269;7:320;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;148:1880:11;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TOKEN_IMAGE_URI_2592":{"entryPoint":1852,"id":2592,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_943":{"entryPoint":5389,"id":943,"parameterSlots":4,"returnSlots":0},"@_approve_776":{"entryPoint":2966,"id":776,"parameterSlots":2,"returnSlots":0},"@_baseURI_2619":{"entryPoint":4580,"id":2619,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_930":{"entryPoint":5095,"id":930,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_884":{"entryPoint":5395,"id":884,"parameterSlots":4,"returnSlots":1},"@_exists_445":{"entryPoint":5030,"id":445,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_479":{"entryPoint":3151,"id":479,"parameterSlots":2,"returnSlots":1},"@_msgSender_1447":{"entryPoint":2958,"id":1447,"parameterSlots":0,"returnSlots":1},"@_ownerOf_427":{"entryPoint":4062,"id":427,"parameterSlots":1,"returnSlots":1},"@_requireMinted_822":{"entryPoint":2883,"id":822,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_414":{"entryPoint":4488,"id":414,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_808":{"entryPoint":4123,"id":808,"parameterSlots":3,"returnSlots":0},"@_transfer_752":{"entryPoint":3300,"id":752,"parameterSlots":3,"returnSlots":0},"@approve_256":{"entryPoint":1358,"id":256,"parameterSlots":2,"returnSlots":0},"@balanceOf_117":{"entryPoint":2025,"id":117,"parameterSlots":1,"returnSlots":1},"@encode_2582":{"entryPoint":4641,"id":2582,"parameterSlots":1,"returnSlots":1},"@getApproved_274":{"entryPoint":1288,"id":274,"parameterSlots":1,"returnSlots":1},"@getTokenCounter_2719":{"entryPoint":2015,"id":2719,"parameterSlots":0,"returnSlots":1},"@hasNft_2711":{"entryPoint":1766,"id":2711,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_309":{"entryPoint":2597,"id":309,"parameterSlots":2,"returnSlots":1},"@isContract_1123":{"entryPoint":5802,"id":1123,"parameterSlots":1,"returnSlots":1},"@name_155":{"entryPoint":1142,"id":155,"parameterSlots":0,"returnSlots":1},"@ownerOf_145":{"entryPoint":1880,"id":145,"parameterSlots":1,"returnSlots":1},"@s_hasNft_2598":{"entryPoint":2745,"id":2598,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_355":{"entryPoint":1734,"id":355,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_385":{"entryPoint":2377,"id":385,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_291":{"entryPoint":2355,"id":291,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1655":{"entryPoint":2777,"id":1655,"parameterSlots":1,"returnSlots":1},"@supportsInterface_93":{"entryPoint":916,"id":93,"parameterSlots":1,"returnSlots":1},"@symbol_165":{"entryPoint":2209,"id":165,"parameterSlots":0,"returnSlots":1},"@tokenURI_2699":{"entryPoint":2475,"id":2699,"parameterSlots":1,"returnSlots":1},"@transferFrom_336":{"entryPoint":1638,"id":336,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5837,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5945,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":5966,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5987,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6099,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6163,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6246,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6377,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6441,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6505,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6640,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6727,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":6833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6868,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":6903,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":6938,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6973,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7008,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7043,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7078,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7113,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7148,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":7218,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7253,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7288,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7303,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7339,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7419,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7446,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7583,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7615,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7647,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7711,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7743,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7775,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7839,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7871,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7898,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7925,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7935,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7984,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7995,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8006,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8023,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8040,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8051,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8137,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8186,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8276,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8328,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8346,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":8358,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8402,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8434,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8444,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":8459,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8510,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8560,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":8609,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8656,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8703,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8750,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8797,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8802,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8807,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8812,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8817,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":8834,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832":{"entryPoint":8913,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8954,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":9033,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf":{"entryPoint":9112,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":9229,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":9308,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719":{"entryPoint":9349,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":9466,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475":{"entryPoint":9545,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":9586,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":9627,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":9706,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9785,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9808,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9831,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9854,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28791:14","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:14","statements":[{"nodeType":"YulAssignment","src":"100:74:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:14"},"nodeType":"YulFunctionCall","src":"125:48:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:14"},"nodeType":"YulFunctionCall","src":"109:65:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:14"},"nodeType":"YulFunctionCall","src":"183:21:14"},"nodeType":"YulExpressionStatement","src":"183:21:14"},{"nodeType":"YulVariableDeclaration","src":"213:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:14"},"nodeType":"YulFunctionCall","src":"224:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:14"},"nodeType":"YulFunctionCall","src":"280:79:14"},"nodeType":"YulExpressionStatement","src":"280:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:14"},"nodeType":"YulFunctionCall","src":"255:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:14"},"nodeType":"YulFunctionCall","src":"252:25:14"},"nodeType":"YulIf","src":"249:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:14"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:14"},"nodeType":"YulFunctionCall","src":"370:41:14"},"nodeType":"YulExpressionStatement","src":"370:41:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:14","type":""}],"src":"7:410:14"},{"body":{"nodeType":"YulBlock","src":"475:87:14","statements":[{"nodeType":"YulAssignment","src":"485:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:14"},"nodeType":"YulFunctionCall","src":"494:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:14"},"nodeType":"YulFunctionCall","src":"523:33:14"},"nodeType":"YulExpressionStatement","src":"523:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:14","type":""}],"src":"423:139:14"},{"body":{"nodeType":"YulBlock","src":"617:84:14","statements":[{"nodeType":"YulAssignment","src":"627:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:14"},"nodeType":"YulFunctionCall","src":"636:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:14"},"nodeType":"YulFunctionCall","src":"665:30:14"},"nodeType":"YulExpressionStatement","src":"665:30:14"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:14","type":""}],"src":"568:133:14"},{"body":{"nodeType":"YulBlock","src":"758:86:14","statements":[{"nodeType":"YulAssignment","src":"768:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:14"},"nodeType":"YulFunctionCall","src":"777:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:14"},"nodeType":"YulFunctionCall","src":"806:32:14"},"nodeType":"YulExpressionStatement","src":"806:32:14"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:14","type":""}],"src":"707:137:14"},{"body":{"nodeType":"YulBlock","src":"912:79:14","statements":[{"nodeType":"YulAssignment","src":"922:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:14"},"nodeType":"YulFunctionCall","src":"931:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:14"},"nodeType":"YulFunctionCall","src":"953:32:14"},"nodeType":"YulExpressionStatement","src":"953:32:14"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:14","type":""}],"src":"850:141:14"},{"body":{"nodeType":"YulBlock","src":"1071:277:14","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:14"},"nodeType":"YulFunctionCall","src":"1122:79:14"},"nodeType":"YulExpressionStatement","src":"1122:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:14"},"nodeType":"YulFunctionCall","src":"1095:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:14"},"nodeType":"YulFunctionCall","src":"1091:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:14"},"nodeType":"YulFunctionCall","src":"1084:35:14"},"nodeType":"YulIf","src":"1081:122:14"},{"nodeType":"YulVariableDeclaration","src":"1212:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:14"},"nodeType":"YulFunctionCall","src":"1226:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:14"},"nodeType":"YulFunctionCall","src":"1311:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:14"},"nodeType":"YulFunctionCall","src":"1264:78:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:14","type":""}],"src":"1010:338:14"},{"body":{"nodeType":"YulBlock","src":"1406:87:14","statements":[{"nodeType":"YulAssignment","src":"1416:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:14"},"nodeType":"YulFunctionCall","src":"1425:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:14"},"nodeType":"YulFunctionCall","src":"1454:33:14"},"nodeType":"YulExpressionStatement","src":"1454:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:14","type":""}],"src":"1354:139:14"},{"body":{"nodeType":"YulBlock","src":"1565:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:14"},"nodeType":"YulFunctionCall","src":"1613:79:14"},"nodeType":"YulExpressionStatement","src":"1613:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:14"},"nodeType":"YulFunctionCall","src":"1582:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:14"},"nodeType":"YulFunctionCall","src":"1578:32:14"},"nodeType":"YulIf","src":"1575:119:14"},{"nodeType":"YulBlock","src":"1704:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:14"},"nodeType":"YulFunctionCall","src":"1779:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:14"},"nodeType":"YulFunctionCall","src":"1758:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:14","type":""}],"src":"1499:329:14"},{"body":{"nodeType":"YulBlock","src":"1917:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:14"},"nodeType":"YulFunctionCall","src":"1965:79:14"},"nodeType":"YulExpressionStatement","src":"1965:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:14"},"nodeType":"YulFunctionCall","src":"1934:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:14"},"nodeType":"YulFunctionCall","src":"1930:32:14"},"nodeType":"YulIf","src":"1927:119:14"},{"nodeType":"YulBlock","src":"2056:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:14"},"nodeType":"YulFunctionCall","src":"2131:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:14"},"nodeType":"YulFunctionCall","src":"2110:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:14"}]}]},{"nodeType":"YulBlock","src":"2183:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:14"},"nodeType":"YulFunctionCall","src":"2259:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:14"},"nodeType":"YulFunctionCall","src":"2238:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:14","type":""}],"src":"1834:474:14"},{"body":{"nodeType":"YulBlock","src":"2414:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:14"},"nodeType":"YulFunctionCall","src":"2462:79:14"},"nodeType":"YulExpressionStatement","src":"2462:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:14"},"nodeType":"YulFunctionCall","src":"2431:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:14"},"nodeType":"YulFunctionCall","src":"2427:32:14"},"nodeType":"YulIf","src":"2424:119:14"},{"nodeType":"YulBlock","src":"2553:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:14"},"nodeType":"YulFunctionCall","src":"2628:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:14"},"nodeType":"YulFunctionCall","src":"2607:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:14"}]}]},{"nodeType":"YulBlock","src":"2680:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:14"},"nodeType":"YulFunctionCall","src":"2756:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:14"},"nodeType":"YulFunctionCall","src":"2735:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:14"}]}]},{"nodeType":"YulBlock","src":"2808:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:14"},"nodeType":"YulFunctionCall","src":"2884:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:14"},"nodeType":"YulFunctionCall","src":"2863:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:14","type":""}],"src":"2314:619:14"},{"body":{"nodeType":"YulBlock","src":"3065:817:14","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:14"},"nodeType":"YulFunctionCall","src":"3114:79:14"},"nodeType":"YulExpressionStatement","src":"3114:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:14"},"nodeType":"YulFunctionCall","src":"3082:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:14"},"nodeType":"YulFunctionCall","src":"3078:33:14"},"nodeType":"YulIf","src":"3075:120:14"},{"nodeType":"YulBlock","src":"3205:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:14"},"nodeType":"YulFunctionCall","src":"3280:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:14"},"nodeType":"YulFunctionCall","src":"3259:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:14"}]}]},{"nodeType":"YulBlock","src":"3332:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:14"},"nodeType":"YulFunctionCall","src":"3408:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:14"},"nodeType":"YulFunctionCall","src":"3387:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:14"}]}]},{"nodeType":"YulBlock","src":"3460:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:14"},"nodeType":"YulFunctionCall","src":"3536:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:14"},"nodeType":"YulFunctionCall","src":"3515:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:14"}]}]},{"nodeType":"YulBlock","src":"3588:287:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:14"},"nodeType":"YulFunctionCall","src":"3630:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:14"},"nodeType":"YulFunctionCall","src":"3617:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:14"},"nodeType":"YulFunctionCall","src":"3698:79:14"},"nodeType":"YulExpressionStatement","src":"3698:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:14"},"nodeType":"YulFunctionCall","src":"3665:30:14"},"nodeType":"YulIf","src":"3662:117:14"},{"nodeType":"YulAssignment","src":"3793:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:14"},"nodeType":"YulFunctionCall","src":"3833:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:14"},"nodeType":"YulFunctionCall","src":"3803:62:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:14","type":""}],"src":"2939:943:14"},{"body":{"nodeType":"YulBlock","src":"3968:388:14","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:14"},"nodeType":"YulFunctionCall","src":"4016:79:14"},"nodeType":"YulExpressionStatement","src":"4016:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:14"},"nodeType":"YulFunctionCall","src":"3985:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:14"},"nodeType":"YulFunctionCall","src":"3981:32:14"},"nodeType":"YulIf","src":"3978:119:14"},{"nodeType":"YulBlock","src":"4107:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:14"},"nodeType":"YulFunctionCall","src":"4182:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:14"},"nodeType":"YulFunctionCall","src":"4161:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:14"}]}]},{"nodeType":"YulBlock","src":"4234:115:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:14"},"nodeType":"YulFunctionCall","src":"4307:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:14"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:14"},"nodeType":"YulFunctionCall","src":"4289:50:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:14","type":""}],"src":"3888:468:14"},{"body":{"nodeType":"YulBlock","src":"4445:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:14"},"nodeType":"YulFunctionCall","src":"4493:79:14"},"nodeType":"YulExpressionStatement","src":"4493:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:14"},"nodeType":"YulFunctionCall","src":"4462:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:14"},"nodeType":"YulFunctionCall","src":"4458:32:14"},"nodeType":"YulIf","src":"4455:119:14"},{"nodeType":"YulBlock","src":"4584:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:14"},"nodeType":"YulFunctionCall","src":"4659:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:14"},"nodeType":"YulFunctionCall","src":"4638:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:14"}]}]},{"nodeType":"YulBlock","src":"4711:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:14"},"nodeType":"YulFunctionCall","src":"4787:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:14"},"nodeType":"YulFunctionCall","src":"4766:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:14","type":""}],"src":"4362:474:14"},{"body":{"nodeType":"YulBlock","src":"4907:262:14","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:14"},"nodeType":"YulFunctionCall","src":"4955:79:14"},"nodeType":"YulExpressionStatement","src":"4955:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:14"},"nodeType":"YulFunctionCall","src":"4924:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:14"},"nodeType":"YulFunctionCall","src":"4920:32:14"},"nodeType":"YulIf","src":"4917:119:14"},{"nodeType":"YulBlock","src":"5046:116:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:14"},"nodeType":"YulFunctionCall","src":"5120:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:14"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:14"},"nodeType":"YulFunctionCall","src":"5100:52:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:14","type":""}],"src":"4842:327:14"},{"body":{"nodeType":"YulBlock","src":"5251:273:14","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:14"},"nodeType":"YulFunctionCall","src":"5299:79:14"},"nodeType":"YulExpressionStatement","src":"5299:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:14"},"nodeType":"YulFunctionCall","src":"5268:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:14"},"nodeType":"YulFunctionCall","src":"5264:32:14"},"nodeType":"YulIf","src":"5261:119:14"},{"nodeType":"YulBlock","src":"5390:127:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:14"},"nodeType":"YulFunctionCall","src":"5475:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:14"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:14"},"nodeType":"YulFunctionCall","src":"5444:63:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:14","type":""}],"src":"5175:349:14"},{"body":{"nodeType":"YulBlock","src":"5596:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:14"},"nodeType":"YulFunctionCall","src":"5644:79:14"},"nodeType":"YulExpressionStatement","src":"5644:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:14"},"nodeType":"YulFunctionCall","src":"5613:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:14"},"nodeType":"YulFunctionCall","src":"5609:32:14"},"nodeType":"YulIf","src":"5606:119:14"},{"nodeType":"YulBlock","src":"5735:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:14"},"nodeType":"YulFunctionCall","src":"5810:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:14"},"nodeType":"YulFunctionCall","src":"5789:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:14","type":""}],"src":"5530:329:14"},{"body":{"nodeType":"YulBlock","src":"5930:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:14"},"nodeType":"YulFunctionCall","src":"5952:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:14"},"nodeType":"YulFunctionCall","src":"5940:37:14"},"nodeType":"YulExpressionStatement","src":"5940:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:14","type":""}],"src":"5865:118:14"},{"body":{"nodeType":"YulBlock","src":"6048:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:14"},"nodeType":"YulFunctionCall","src":"6070:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:14"},"nodeType":"YulFunctionCall","src":"6058:34:14"},"nodeType":"YulExpressionStatement","src":"6058:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:14","type":""}],"src":"5989:109:14"},{"body":{"nodeType":"YulBlock","src":"6194:270:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:14"},"nodeType":"YulFunctionCall","src":"6218:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:14"},"nodeType":"YulFunctionCall","src":"6272:70:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:14"},"nodeType":"YulFunctionCall","src":"6373:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:14"},"nodeType":"YulFunctionCall","src":"6351:52:14"},"nodeType":"YulExpressionStatement","src":"6351:52:14"},{"nodeType":"YulAssignment","src":"6412:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:14"},"nodeType":"YulFunctionCall","src":"6428:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:14"},"nodeType":"YulFunctionCall","src":"6419:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:14","type":""}],"src":"6104:360:14"},{"body":{"nodeType":"YulBlock","src":"6562:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:14"},"nodeType":"YulFunctionCall","src":"6586:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:14"},"nodeType":"YulFunctionCall","src":"6641:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:14"},"nodeType":"YulFunctionCall","src":"6743:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:14"},"nodeType":"YulFunctionCall","src":"6721:52:14"},"nodeType":"YulExpressionStatement","src":"6721:52:14"},{"nodeType":"YulAssignment","src":"6782:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:14"},"nodeType":"YulFunctionCall","src":"6798:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:14"},"nodeType":"YulFunctionCall","src":"6789:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:14","type":""}],"src":"6470:364:14"},{"body":{"nodeType":"YulBlock","src":"6950:267:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6960:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7007:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6974:32:14"},"nodeType":"YulFunctionCall","src":"6974:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6964:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7022:96:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7106:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7111:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7029:76:14"},"nodeType":"YulFunctionCall","src":"7029:89:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7022:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7153:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"7160:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:14"},"nodeType":"YulFunctionCall","src":"7149:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"7167:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7172:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7127:21:14"},"nodeType":"YulFunctionCall","src":"7127:52:14"},"nodeType":"YulExpressionStatement","src":"7127:52:14"},{"nodeType":"YulAssignment","src":"7188:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7199:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7204:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7195:3:14"},"nodeType":"YulFunctionCall","src":"7195:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7188:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6931:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6938:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6946:3:14","type":""}],"src":"6840:377:14"},{"body":{"nodeType":"YulBlock","src":"7369:220:14","statements":[{"nodeType":"YulAssignment","src":"7379:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7445:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7450:2:14","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7386:58:14"},"nodeType":"YulFunctionCall","src":"7386:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:14"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7462:88:14"},"nodeType":"YulFunctionCall","src":"7462:93:14"},"nodeType":"YulExpressionStatement","src":"7462:93:14"},{"nodeType":"YulAssignment","src":"7564:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7575:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7571:3:14"},"nodeType":"YulFunctionCall","src":"7571:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7564:3:14"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7357:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7365:3:14","type":""}],"src":"7223:366:14"},{"body":{"nodeType":"YulBlock","src":"7759:236:14","statements":[{"nodeType":"YulAssignment","src":"7769:91:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7853:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7858:1:14","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7776:76:14"},"nodeType":"YulFunctionCall","src":"7776:84:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7769:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7958:3:14"}],"functionName":{"name":"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","nodeType":"YulIdentifier","src":"7869:88:14"},"nodeType":"YulFunctionCall","src":"7869:93:14"},"nodeType":"YulExpressionStatement","src":"7869:93:14"},{"nodeType":"YulAssignment","src":"7971:18:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7982:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7987:1:14","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7978:3:14"},"nodeType":"YulFunctionCall","src":"7978:11:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7971:3:14"}]}]},"name":"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7747:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7755:3:14","type":""}],"src":"7595:400:14"},{"body":{"nodeType":"YulBlock","src":"8147:220:14","statements":[{"nodeType":"YulAssignment","src":"8157:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8223:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8228:2:14","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8164:58:14"},"nodeType":"YulFunctionCall","src":"8164:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8157:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8329:3:14"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"8240:88:14"},"nodeType":"YulFunctionCall","src":"8240:93:14"},"nodeType":"YulExpressionStatement","src":"8240:93:14"},{"nodeType":"YulAssignment","src":"8342:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8353:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8358:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8349:3:14"},"nodeType":"YulFunctionCall","src":"8349:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8342:3:14"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8135:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8143:3:14","type":""}],"src":"8001:366:14"},{"body":{"nodeType":"YulBlock","src":"8519:220:14","statements":[{"nodeType":"YulAssignment","src":"8529:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8595:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8600:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8536:58:14"},"nodeType":"YulFunctionCall","src":"8536:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8529:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8701:3:14"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"8612:88:14"},"nodeType":"YulFunctionCall","src":"8612:93:14"},"nodeType":"YulExpressionStatement","src":"8612:93:14"},{"nodeType":"YulAssignment","src":"8714:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8725:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8730:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8721:3:14"},"nodeType":"YulFunctionCall","src":"8721:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8714:3:14"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8507:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8515:3:14","type":""}],"src":"8373:366:14"},{"body":{"nodeType":"YulBlock","src":"8909:238:14","statements":[{"nodeType":"YulAssignment","src":"8919:92:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9003:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9008:2:14","type":"","value":"77"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8926:76:14"},"nodeType":"YulFunctionCall","src":"8926:85:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8919:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9109:3:14"}],"functionName":{"name":"store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf","nodeType":"YulIdentifier","src":"9020:88:14"},"nodeType":"YulFunctionCall","src":"9020:93:14"},"nodeType":"YulExpressionStatement","src":"9020:93:14"},{"nodeType":"YulAssignment","src":"9122:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9133:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9138:2:14","type":"","value":"77"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9129:3:14"},"nodeType":"YulFunctionCall","src":"9129:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9122:3:14"}]}]},"name":"abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8897:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8905:3:14","type":""}],"src":"8745:402:14"},{"body":{"nodeType":"YulBlock","src":"9299:220:14","statements":[{"nodeType":"YulAssignment","src":"9309:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9375:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9380:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9316:58:14"},"nodeType":"YulFunctionCall","src":"9316:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9309:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9481:3:14"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"9392:88:14"},"nodeType":"YulFunctionCall","src":"9392:93:14"},"nodeType":"YulExpressionStatement","src":"9392:93:14"},{"nodeType":"YulAssignment","src":"9494:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9505:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9510:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9501:3:14"},"nodeType":"YulFunctionCall","src":"9501:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9494:3:14"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9287:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9295:3:14","type":""}],"src":"9153:366:14"},{"body":{"nodeType":"YulBlock","src":"9671:220:14","statements":[{"nodeType":"YulAssignment","src":"9681:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9747:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9752:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9688:58:14"},"nodeType":"YulFunctionCall","src":"9688:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9681:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9853:3:14"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"9764:88:14"},"nodeType":"YulFunctionCall","src":"9764:93:14"},"nodeType":"YulExpressionStatement","src":"9764:93:14"},{"nodeType":"YulAssignment","src":"9866:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9877:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9882:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9873:3:14"},"nodeType":"YulFunctionCall","src":"9873:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9866:3:14"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9659:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9667:3:14","type":""}],"src":"9525:366:14"},{"body":{"nodeType":"YulBlock","src":"10061:238:14","statements":[{"nodeType":"YulAssignment","src":"10071:92:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10155:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10160:2:14","type":"","value":"65"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10078:76:14"},"nodeType":"YulFunctionCall","src":"10078:85:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10071:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10261:3:14"}],"functionName":{"name":"store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719","nodeType":"YulIdentifier","src":"10172:88:14"},"nodeType":"YulFunctionCall","src":"10172:93:14"},"nodeType":"YulExpressionStatement","src":"10172:93:14"},{"nodeType":"YulAssignment","src":"10274:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10285:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10290:2:14","type":"","value":"65"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10281:3:14"},"nodeType":"YulFunctionCall","src":"10281:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10274:3:14"}]}]},"name":"abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10049:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10057:3:14","type":""}],"src":"9897:402:14"},{"body":{"nodeType":"YulBlock","src":"10451:220:14","statements":[{"nodeType":"YulAssignment","src":"10461:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10527:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10532:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10468:58:14"},"nodeType":"YulFunctionCall","src":"10468:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10461:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10633:3:14"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"10544:88:14"},"nodeType":"YulFunctionCall","src":"10544:93:14"},"nodeType":"YulExpressionStatement","src":"10544:93:14"},{"nodeType":"YulAssignment","src":"10646:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10657:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10662:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10653:3:14"},"nodeType":"YulFunctionCall","src":"10653:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10646:3:14"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10439:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10447:3:14","type":""}],"src":"10305:366:14"},{"body":{"nodeType":"YulBlock","src":"10841:236:14","statements":[{"nodeType":"YulAssignment","src":"10851:91:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10935:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10940:1:14","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10858:76:14"},"nodeType":"YulFunctionCall","src":"10858:84:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10851:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11040:3:14"}],"functionName":{"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulIdentifier","src":"10951:88:14"},"nodeType":"YulFunctionCall","src":"10951:93:14"},"nodeType":"YulExpressionStatement","src":"10951:93:14"},{"nodeType":"YulAssignment","src":"11053:18:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11064:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11069:1:14","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11060:3:14"},"nodeType":"YulFunctionCall","src":"11060:11:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11053:3:14"}]}]},"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10829:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10837:3:14","type":""}],"src":"10677:400:14"},{"body":{"nodeType":"YulBlock","src":"11229:220:14","statements":[{"nodeType":"YulAssignment","src":"11239:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11305:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11310:2:14","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11246:58:14"},"nodeType":"YulFunctionCall","src":"11246:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11239:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11411:3:14"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"11322:88:14"},"nodeType":"YulFunctionCall","src":"11322:93:14"},"nodeType":"YulExpressionStatement","src":"11322:93:14"},{"nodeType":"YulAssignment","src":"11424:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11435:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11440:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11431:3:14"},"nodeType":"YulFunctionCall","src":"11431:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11424:3:14"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11217:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11225:3:14","type":""}],"src":"11083:366:14"},{"body":{"nodeType":"YulBlock","src":"11601:220:14","statements":[{"nodeType":"YulAssignment","src":"11611:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11677:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11682:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11618:58:14"},"nodeType":"YulFunctionCall","src":"11618:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11611:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11783:3:14"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11694:88:14"},"nodeType":"YulFunctionCall","src":"11694:93:14"},"nodeType":"YulExpressionStatement","src":"11694:93:14"},{"nodeType":"YulAssignment","src":"11796:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11807:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11812:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11803:3:14"},"nodeType":"YulFunctionCall","src":"11803:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11796:3:14"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11589:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11597:3:14","type":""}],"src":"11455:366:14"},{"body":{"nodeType":"YulBlock","src":"11973:220:14","statements":[{"nodeType":"YulAssignment","src":"11983:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12049:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12054:2:14","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11990:58:14"},"nodeType":"YulFunctionCall","src":"11990:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11983:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12155:3:14"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12066:88:14"},"nodeType":"YulFunctionCall","src":"12066:93:14"},"nodeType":"YulExpressionStatement","src":"12066:93:14"},{"nodeType":"YulAssignment","src":"12168:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12179:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12184:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12175:3:14"},"nodeType":"YulFunctionCall","src":"12175:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12168:3:14"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11961:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11969:3:14","type":""}],"src":"11827:366:14"},{"body":{"nodeType":"YulBlock","src":"12264:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12281:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12304:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12286:17:14"},"nodeType":"YulFunctionCall","src":"12286:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12274:6:14"},"nodeType":"YulFunctionCall","src":"12274:37:14"},"nodeType":"YulExpressionStatement","src":"12274:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12252:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12259:3:14","type":""}],"src":"12199:118:14"},{"body":{"nodeType":"YulBlock","src":"12507:251:14","statements":[{"nodeType":"YulAssignment","src":"12518:102:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12607:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"12616:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12525:81:14"},"nodeType":"YulFunctionCall","src":"12525:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12518:3:14"}]},{"nodeType":"YulAssignment","src":"12630:102:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12719:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"12728:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12637:81:14"},"nodeType":"YulFunctionCall","src":"12637:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12630:3:14"}]},{"nodeType":"YulAssignment","src":"12742:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"12749:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12742:3:14"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12478:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12484:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12492:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12503:3:14","type":""}],"src":"12323:435:14"},{"body":{"nodeType":"YulBlock","src":"13352:911:14","statements":[{"nodeType":"YulAssignment","src":"13363:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13514:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13370:142:14"},"nodeType":"YulFunctionCall","src":"13370:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13363:3:14"}]},{"nodeType":"YulAssignment","src":"13528:102:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13617:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"13626:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13535:81:14"},"nodeType":"YulFunctionCall","src":"13535:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13528:3:14"}]},{"nodeType":"YulAssignment","src":"13640:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13791:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13647:142:14"},"nodeType":"YulFunctionCall","src":"13647:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13640:3:14"}]},{"nodeType":"YulAssignment","src":"13805:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13956:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13812:142:14"},"nodeType":"YulFunctionCall","src":"13812:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13805:3:14"}]},{"nodeType":"YulAssignment","src":"13970:102:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14059:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"14068:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13977:81:14"},"nodeType":"YulFunctionCall","src":"13977:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13970:3:14"}]},{"nodeType":"YulAssignment","src":"14082:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14233:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14089:142:14"},"nodeType":"YulFunctionCall","src":"14089:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14082:3:14"}]},{"nodeType":"YulAssignment","src":"14247:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"14254:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14247:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13323:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13329:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13337:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13348:3:14","type":""}],"src":"12764:1499:14"},{"body":{"nodeType":"YulBlock","src":"14367:124:14","statements":[{"nodeType":"YulAssignment","src":"14377:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14389:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14400:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14385:3:14"},"nodeType":"YulFunctionCall","src":"14385:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14377:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14457:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14470:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14481:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14466:3:14"},"nodeType":"YulFunctionCall","src":"14466:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14413:43:14"},"nodeType":"YulFunctionCall","src":"14413:71:14"},"nodeType":"YulExpressionStatement","src":"14413:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14339:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14351:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14362:4:14","type":""}],"src":"14269:222:14"},{"body":{"nodeType":"YulBlock","src":"14697:440:14","statements":[{"nodeType":"YulAssignment","src":"14707:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14719:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14730:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14715:3:14"},"nodeType":"YulFunctionCall","src":"14715:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14707:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14788:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14801:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14812:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14797:3:14"},"nodeType":"YulFunctionCall","src":"14797:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14744:43:14"},"nodeType":"YulFunctionCall","src":"14744:71:14"},"nodeType":"YulExpressionStatement","src":"14744:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14869:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14882:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14893:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14878:3:14"},"nodeType":"YulFunctionCall","src":"14878:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14825:43:14"},"nodeType":"YulFunctionCall","src":"14825:72:14"},"nodeType":"YulExpressionStatement","src":"14825:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14951:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14964:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14975:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14960:3:14"},"nodeType":"YulFunctionCall","src":"14960:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14907:43:14"},"nodeType":"YulFunctionCall","src":"14907:72:14"},"nodeType":"YulExpressionStatement","src":"14907:72:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15000:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15011:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14996:3:14"},"nodeType":"YulFunctionCall","src":"14996:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15020:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15026:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15016:3:14"},"nodeType":"YulFunctionCall","src":"15016:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14989:6:14"},"nodeType":"YulFunctionCall","src":"14989:48:14"},"nodeType":"YulExpressionStatement","src":"14989:48:14"},{"nodeType":"YulAssignment","src":"15046:84:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15116:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"15125:4:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15054:61:14"},"nodeType":"YulFunctionCall","src":"15054:76:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15046:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14645:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14657:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14665:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14673:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14681:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14692:4:14","type":""}],"src":"14497:640:14"},{"body":{"nodeType":"YulBlock","src":"15235:118:14","statements":[{"nodeType":"YulAssignment","src":"15245:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15257:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15268:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15253:3:14"},"nodeType":"YulFunctionCall","src":"15253:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15245:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15319:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15332:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15343:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15328:3:14"},"nodeType":"YulFunctionCall","src":"15328:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"15281:37:14"},"nodeType":"YulFunctionCall","src":"15281:65:14"},"nodeType":"YulExpressionStatement","src":"15281:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15207:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15219:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15230:4:14","type":""}],"src":"15143:210:14"},{"body":{"nodeType":"YulBlock","src":"15477:195:14","statements":[{"nodeType":"YulAssignment","src":"15487:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15499:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15510:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15495:3:14"},"nodeType":"YulFunctionCall","src":"15495:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15487:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15534:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15545:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15530:3:14"},"nodeType":"YulFunctionCall","src":"15530:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15553:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15559:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15549:3:14"},"nodeType":"YulFunctionCall","src":"15549:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15523:6:14"},"nodeType":"YulFunctionCall","src":"15523:47:14"},"nodeType":"YulExpressionStatement","src":"15523:47:14"},{"nodeType":"YulAssignment","src":"15579:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15651:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"15660:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15587:63:14"},"nodeType":"YulFunctionCall","src":"15587:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15579:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15449:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15461:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15472:4:14","type":""}],"src":"15359:313:14"},{"body":{"nodeType":"YulBlock","src":"15849:248:14","statements":[{"nodeType":"YulAssignment","src":"15859:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15871:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15882:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15867:3:14"},"nodeType":"YulFunctionCall","src":"15867:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15859:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15906:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15917:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15902:3:14"},"nodeType":"YulFunctionCall","src":"15902:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15925:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15931:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15921:3:14"},"nodeType":"YulFunctionCall","src":"15921:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15895:6:14"},"nodeType":"YulFunctionCall","src":"15895:47:14"},"nodeType":"YulExpressionStatement","src":"15895:47:14"},{"nodeType":"YulAssignment","src":"15951:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16085:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15959:124:14"},"nodeType":"YulFunctionCall","src":"15959:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15951:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15829:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15844:4:14","type":""}],"src":"15678:419:14"},{"body":{"nodeType":"YulBlock","src":"16274:248:14","statements":[{"nodeType":"YulAssignment","src":"16284:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16296:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16307:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16292:3:14"},"nodeType":"YulFunctionCall","src":"16292:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16284:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16331:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16342:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16327:3:14"},"nodeType":"YulFunctionCall","src":"16327:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16350:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"16356:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16346:3:14"},"nodeType":"YulFunctionCall","src":"16346:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16320:6:14"},"nodeType":"YulFunctionCall","src":"16320:47:14"},"nodeType":"YulExpressionStatement","src":"16320:47:14"},{"nodeType":"YulAssignment","src":"16376:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16510:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16384:124:14"},"nodeType":"YulFunctionCall","src":"16384:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16376:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16254:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16269:4:14","type":""}],"src":"16103:419:14"},{"body":{"nodeType":"YulBlock","src":"16699:248:14","statements":[{"nodeType":"YulAssignment","src":"16709:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16721:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16732:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16717:3:14"},"nodeType":"YulFunctionCall","src":"16717:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16709:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16756:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16767:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16752:3:14"},"nodeType":"YulFunctionCall","src":"16752:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16775:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"16781:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16771:3:14"},"nodeType":"YulFunctionCall","src":"16771:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16745:6:14"},"nodeType":"YulFunctionCall","src":"16745:47:14"},"nodeType":"YulExpressionStatement","src":"16745:47:14"},{"nodeType":"YulAssignment","src":"16801:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16935:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16809:124:14"},"nodeType":"YulFunctionCall","src":"16809:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16801:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16679:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16694:4:14","type":""}],"src":"16528:419:14"},{"body":{"nodeType":"YulBlock","src":"17124:248:14","statements":[{"nodeType":"YulAssignment","src":"17134:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17146:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17157:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17142:3:14"},"nodeType":"YulFunctionCall","src":"17142:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17134:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17181:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17192:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17177:3:14"},"nodeType":"YulFunctionCall","src":"17177:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17200:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17206:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17196:3:14"},"nodeType":"YulFunctionCall","src":"17196:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17170:6:14"},"nodeType":"YulFunctionCall","src":"17170:47:14"},"nodeType":"YulExpressionStatement","src":"17170:47:14"},{"nodeType":"YulAssignment","src":"17226:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17360:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17234:124:14"},"nodeType":"YulFunctionCall","src":"17234:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17226:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17104:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17119:4:14","type":""}],"src":"16953:419:14"},{"body":{"nodeType":"YulBlock","src":"17549:248:14","statements":[{"nodeType":"YulAssignment","src":"17559:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17571:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17582:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17567:3:14"},"nodeType":"YulFunctionCall","src":"17567:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17559:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17606:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17617:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17602:3:14"},"nodeType":"YulFunctionCall","src":"17602:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17625:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17631:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17621:3:14"},"nodeType":"YulFunctionCall","src":"17621:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17595:6:14"},"nodeType":"YulFunctionCall","src":"17595:47:14"},"nodeType":"YulExpressionStatement","src":"17595:47:14"},{"nodeType":"YulAssignment","src":"17651:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17785:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17659:124:14"},"nodeType":"YulFunctionCall","src":"17659:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17651:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17529:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17544:4:14","type":""}],"src":"17378:419:14"},{"body":{"nodeType":"YulBlock","src":"17974:248:14","statements":[{"nodeType":"YulAssignment","src":"17984:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17996:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18007:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17992:3:14"},"nodeType":"YulFunctionCall","src":"17992:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17984:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18031:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18042:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18027:3:14"},"nodeType":"YulFunctionCall","src":"18027:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18050:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"18056:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18046:3:14"},"nodeType":"YulFunctionCall","src":"18046:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18020:6:14"},"nodeType":"YulFunctionCall","src":"18020:47:14"},"nodeType":"YulExpressionStatement","src":"18020:47:14"},{"nodeType":"YulAssignment","src":"18076:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18210:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18084:124:14"},"nodeType":"YulFunctionCall","src":"18084:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18076:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17954:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17969:4:14","type":""}],"src":"17803:419:14"},{"body":{"nodeType":"YulBlock","src":"18399:248:14","statements":[{"nodeType":"YulAssignment","src":"18409:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18421:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18432:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18417:3:14"},"nodeType":"YulFunctionCall","src":"18417:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18409:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18456:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18467:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18452:3:14"},"nodeType":"YulFunctionCall","src":"18452:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18475:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"18481:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18471:3:14"},"nodeType":"YulFunctionCall","src":"18471:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18445:6:14"},"nodeType":"YulFunctionCall","src":"18445:47:14"},"nodeType":"YulExpressionStatement","src":"18445:47:14"},{"nodeType":"YulAssignment","src":"18501:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18635:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18509:124:14"},"nodeType":"YulFunctionCall","src":"18509:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18501:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18379:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18394:4:14","type":""}],"src":"18228:419:14"},{"body":{"nodeType":"YulBlock","src":"18824:248:14","statements":[{"nodeType":"YulAssignment","src":"18834:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18846:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18857:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18842:3:14"},"nodeType":"YulFunctionCall","src":"18842:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18834:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18881:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18892:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18877:3:14"},"nodeType":"YulFunctionCall","src":"18877:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18900:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"18906:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18896:3:14"},"nodeType":"YulFunctionCall","src":"18896:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18870:6:14"},"nodeType":"YulFunctionCall","src":"18870:47:14"},"nodeType":"YulExpressionStatement","src":"18870:47:14"},{"nodeType":"YulAssignment","src":"18926:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19060:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18934:124:14"},"nodeType":"YulFunctionCall","src":"18934:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18926:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18804:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18819:4:14","type":""}],"src":"18653:419:14"},{"body":{"nodeType":"YulBlock","src":"19249:248:14","statements":[{"nodeType":"YulAssignment","src":"19259:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19271:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19282:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19267:3:14"},"nodeType":"YulFunctionCall","src":"19267:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19259:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19306:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19317:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19302:3:14"},"nodeType":"YulFunctionCall","src":"19302:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19325:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"19331:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19321:3:14"},"nodeType":"YulFunctionCall","src":"19321:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19295:6:14"},"nodeType":"YulFunctionCall","src":"19295:47:14"},"nodeType":"YulExpressionStatement","src":"19295:47:14"},{"nodeType":"YulAssignment","src":"19351:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19485:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19359:124:14"},"nodeType":"YulFunctionCall","src":"19359:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19351:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19229:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19244:4:14","type":""}],"src":"19078:419:14"},{"body":{"nodeType":"YulBlock","src":"19601:124:14","statements":[{"nodeType":"YulAssignment","src":"19611:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19623:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19634:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19619:3:14"},"nodeType":"YulFunctionCall","src":"19619:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19611:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19691:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19704:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19715:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19700:3:14"},"nodeType":"YulFunctionCall","src":"19700:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19647:43:14"},"nodeType":"YulFunctionCall","src":"19647:71:14"},"nodeType":"YulExpressionStatement","src":"19647:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19573:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19585:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19596:4:14","type":""}],"src":"19503:222:14"},{"body":{"nodeType":"YulBlock","src":"19772:88:14","statements":[{"nodeType":"YulAssignment","src":"19782:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"19792:18:14"},"nodeType":"YulFunctionCall","src":"19792:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19782:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19841:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"19849:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"19821:19:14"},"nodeType":"YulFunctionCall","src":"19821:33:14"},"nodeType":"YulExpressionStatement","src":"19821:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"19756:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"19765:6:14","type":""}],"src":"19731:129:14"},{"body":{"nodeType":"YulBlock","src":"19906:35:14","statements":[{"nodeType":"YulAssignment","src":"19916:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19932:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19926:5:14"},"nodeType":"YulFunctionCall","src":"19926:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19916:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"19899:6:14","type":""}],"src":"19866:75:14"},{"body":{"nodeType":"YulBlock","src":"20013:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"20118:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20120:16:14"},"nodeType":"YulFunctionCall","src":"20120:18:14"},"nodeType":"YulExpressionStatement","src":"20120:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20090:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20098:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20087:2:14"},"nodeType":"YulFunctionCall","src":"20087:30:14"},"nodeType":"YulIf","src":"20084:56:14"},{"nodeType":"YulAssignment","src":"20150:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20180:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"20158:21:14"},"nodeType":"YulFunctionCall","src":"20158:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20150:4:14"}]},{"nodeType":"YulAssignment","src":"20224:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"20236:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"20242:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20232:3:14"},"nodeType":"YulFunctionCall","src":"20232:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20224:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"19997:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"20008:4:14","type":""}],"src":"19947:307:14"},{"body":{"nodeType":"YulBlock","src":"20318:40:14","statements":[{"nodeType":"YulAssignment","src":"20329:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20345:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20339:5:14"},"nodeType":"YulFunctionCall","src":"20339:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20329:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20301:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20311:6:14","type":""}],"src":"20260:98:14"},{"body":{"nodeType":"YulBlock","src":"20423:40:14","statements":[{"nodeType":"YulAssignment","src":"20434:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20450:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20444:5:14"},"nodeType":"YulFunctionCall","src":"20444:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20434:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20406:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20416:6:14","type":""}],"src":"20364:99:14"},{"body":{"nodeType":"YulBlock","src":"20564:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20581:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"20586:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20574:6:14"},"nodeType":"YulFunctionCall","src":"20574:19:14"},"nodeType":"YulExpressionStatement","src":"20574:19:14"},{"nodeType":"YulAssignment","src":"20602:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20621:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"20626:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20617:3:14"},"nodeType":"YulFunctionCall","src":"20617:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20602:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20536:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"20541:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20552:11:14","type":""}],"src":"20469:168:14"},{"body":{"nodeType":"YulBlock","src":"20739:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20756:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"20761:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20749:6:14"},"nodeType":"YulFunctionCall","src":"20749:19:14"},"nodeType":"YulExpressionStatement","src":"20749:19:14"},{"nodeType":"YulAssignment","src":"20777:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20796:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"20801:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20792:3:14"},"nodeType":"YulFunctionCall","src":"20792:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20777:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20711:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"20716:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20727:11:14","type":""}],"src":"20643:169:14"},{"body":{"nodeType":"YulBlock","src":"20932:34:14","statements":[{"nodeType":"YulAssignment","src":"20942:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"20957:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20942:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20904:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"20909:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20920:11:14","type":""}],"src":"20818:148:14"},{"body":{"nodeType":"YulBlock","src":"21016:261:14","statements":[{"nodeType":"YulAssignment","src":"21026:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21049:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21031:17:14"},"nodeType":"YulFunctionCall","src":"21031:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21026:1:14"}]},{"nodeType":"YulAssignment","src":"21060:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21083:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21065:17:14"},"nodeType":"YulFunctionCall","src":"21065:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21060:1:14"}]},{"body":{"nodeType":"YulBlock","src":"21223:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21225:16:14"},"nodeType":"YulFunctionCall","src":"21225:18:14"},"nodeType":"YulExpressionStatement","src":"21225:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21144:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21151:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"21219:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21147:3:14"},"nodeType":"YulFunctionCall","src":"21147:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21141:2:14"},"nodeType":"YulFunctionCall","src":"21141:81:14"},"nodeType":"YulIf","src":"21138:107:14"},{"nodeType":"YulAssignment","src":"21255:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21266:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"21269:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21262:3:14"},"nodeType":"YulFunctionCall","src":"21262:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21255:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21003:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"21006:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21012:3:14","type":""}],"src":"20972:305:14"},{"body":{"nodeType":"YulBlock","src":"21325:143:14","statements":[{"nodeType":"YulAssignment","src":"21335:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21358:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21340:17:14"},"nodeType":"YulFunctionCall","src":"21340:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21335:1:14"}]},{"nodeType":"YulAssignment","src":"21369:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21392:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21374:17:14"},"nodeType":"YulFunctionCall","src":"21374:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21369:1:14"}]},{"body":{"nodeType":"YulBlock","src":"21416:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"21418:16:14"},"nodeType":"YulFunctionCall","src":"21418:18:14"},"nodeType":"YulExpressionStatement","src":"21418:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21413:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21406:6:14"},"nodeType":"YulFunctionCall","src":"21406:9:14"},"nodeType":"YulIf","src":"21403:35:14"},{"nodeType":"YulAssignment","src":"21448:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21457:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"21460:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21453:3:14"},"nodeType":"YulFunctionCall","src":"21453:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"21448:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21314:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"21317:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"21323:1:14","type":""}],"src":"21283:185:14"},{"body":{"nodeType":"YulBlock","src":"21522:300:14","statements":[{"nodeType":"YulAssignment","src":"21532:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21555:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21537:17:14"},"nodeType":"YulFunctionCall","src":"21537:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21532:1:14"}]},{"nodeType":"YulAssignment","src":"21566:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21589:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21571:17:14"},"nodeType":"YulFunctionCall","src":"21571:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21566:1:14"}]},{"body":{"nodeType":"YulBlock","src":"21764:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21766:16:14"},"nodeType":"YulFunctionCall","src":"21766:18:14"},"nodeType":"YulExpressionStatement","src":"21766:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21676:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21669:6:14"},"nodeType":"YulFunctionCall","src":"21669:9:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21662:6:14"},"nodeType":"YulFunctionCall","src":"21662:17:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21684:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21691:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"21759:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21687:3:14"},"nodeType":"YulFunctionCall","src":"21687:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21681:2:14"},"nodeType":"YulFunctionCall","src":"21681:81:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21658:3:14"},"nodeType":"YulFunctionCall","src":"21658:105:14"},"nodeType":"YulIf","src":"21655:131:14"},{"nodeType":"YulAssignment","src":"21796:20:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21811:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"21814:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21807:3:14"},"nodeType":"YulFunctionCall","src":"21807:9:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"21796:7:14"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21505:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"21508:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"21514:7:14","type":""}],"src":"21474:348:14"},{"body":{"nodeType":"YulBlock","src":"21873:146:14","statements":[{"nodeType":"YulAssignment","src":"21883:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21906:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21888:17:14"},"nodeType":"YulFunctionCall","src":"21888:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21883:1:14"}]},{"nodeType":"YulAssignment","src":"21917:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21940:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21922:17:14"},"nodeType":"YulFunctionCall","src":"21922:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21917:1:14"}]},{"body":{"nodeType":"YulBlock","src":"21964:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21966:16:14"},"nodeType":"YulFunctionCall","src":"21966:18:14"},"nodeType":"YulExpressionStatement","src":"21966:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21958:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"21961:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21955:2:14"},"nodeType":"YulFunctionCall","src":"21955:8:14"},"nodeType":"YulIf","src":"21952:34:14"},{"nodeType":"YulAssignment","src":"21996:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22008:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"22011:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22004:3:14"},"nodeType":"YulFunctionCall","src":"22004:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21996:4:14"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21859:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"21862:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21868:4:14","type":""}],"src":"21828:191:14"},{"body":{"nodeType":"YulBlock","src":"22070:51:14","statements":[{"nodeType":"YulAssignment","src":"22080:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22109:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"22091:17:14"},"nodeType":"YulFunctionCall","src":"22091:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22080:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22052:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22062:7:14","type":""}],"src":"22025:96:14"},{"body":{"nodeType":"YulBlock","src":"22169:48:14","statements":[{"nodeType":"YulAssignment","src":"22179:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22204:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22197:6:14"},"nodeType":"YulFunctionCall","src":"22197:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22190:6:14"},"nodeType":"YulFunctionCall","src":"22190:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22179:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22151:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22161:7:14","type":""}],"src":"22127:90:14"},{"body":{"nodeType":"YulBlock","src":"22267:105:14","statements":[{"nodeType":"YulAssignment","src":"22277:89:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22292:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"22299:66:14","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22288:3:14"},"nodeType":"YulFunctionCall","src":"22288:78:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22277:7:14"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22249:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22259:7:14","type":""}],"src":"22223:149:14"},{"body":{"nodeType":"YulBlock","src":"22423:81:14","statements":[{"nodeType":"YulAssignment","src":"22433:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22448:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"22455:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22444:3:14"},"nodeType":"YulFunctionCall","src":"22444:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22433:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22405:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22415:7:14","type":""}],"src":"22378:126:14"},{"body":{"nodeType":"YulBlock","src":"22555:32:14","statements":[{"nodeType":"YulAssignment","src":"22565:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"22576:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22565:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22537:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22547:7:14","type":""}],"src":"22510:77:14"},{"body":{"nodeType":"YulBlock","src":"22644:103:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22667:3:14"},{"name":"src","nodeType":"YulIdentifier","src":"22672:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"22677:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"22654:12:14"},"nodeType":"YulFunctionCall","src":"22654:30:14"},"nodeType":"YulExpressionStatement","src":"22654:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22725:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"22730:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22721:3:14"},"nodeType":"YulFunctionCall","src":"22721:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"22739:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22714:6:14"},"nodeType":"YulFunctionCall","src":"22714:27:14"},"nodeType":"YulExpressionStatement","src":"22714:27:14"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"22626:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"22631:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"22636:6:14","type":""}],"src":"22593:154:14"},{"body":{"nodeType":"YulBlock","src":"22802:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"22812:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"22821:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22816:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"22881:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22906:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"22911:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22902:3:14"},"nodeType":"YulFunctionCall","src":"22902:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22925:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"22930:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22921:3:14"},"nodeType":"YulFunctionCall","src":"22921:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22915:5:14"},"nodeType":"YulFunctionCall","src":"22915:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22895:6:14"},"nodeType":"YulFunctionCall","src":"22895:39:14"},"nodeType":"YulExpressionStatement","src":"22895:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22842:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"22845:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22839:2:14"},"nodeType":"YulFunctionCall","src":"22839:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22853:19:14","statements":[{"nodeType":"YulAssignment","src":"22855:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22864:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"22867:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22860:3:14"},"nodeType":"YulFunctionCall","src":"22860:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22855:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"22835:3:14","statements":[]},"src":"22831:113:14"},{"body":{"nodeType":"YulBlock","src":"22978:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23028:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"23033:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23024:3:14"},"nodeType":"YulFunctionCall","src":"23024:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"23042:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23017:6:14"},"nodeType":"YulFunctionCall","src":"23017:27:14"},"nodeType":"YulExpressionStatement","src":"23017:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22959:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"22962:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22956:2:14"},"nodeType":"YulFunctionCall","src":"22956:13:14"},"nodeType":"YulIf","src":"22953:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"22784:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"22789:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"22794:6:14","type":""}],"src":"22753:307:14"},{"body":{"nodeType":"YulBlock","src":"23117:269:14","statements":[{"nodeType":"YulAssignment","src":"23127:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23141:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"23147:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23137:3:14"},"nodeType":"YulFunctionCall","src":"23137:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23127:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"23158:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23188:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"23194:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23184:3:14"},"nodeType":"YulFunctionCall","src":"23184:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"23162:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"23235:51:14","statements":[{"nodeType":"YulAssignment","src":"23249:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23263:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23271:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23259:3:14"},"nodeType":"YulFunctionCall","src":"23259:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23249:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23215:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23208:6:14"},"nodeType":"YulFunctionCall","src":"23208:26:14"},"nodeType":"YulIf","src":"23205:81:14"},{"body":{"nodeType":"YulBlock","src":"23338:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"23352:16:14"},"nodeType":"YulFunctionCall","src":"23352:18:14"},"nodeType":"YulExpressionStatement","src":"23352:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23302:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23325:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23333:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23322:2:14"},"nodeType":"YulFunctionCall","src":"23322:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23299:2:14"},"nodeType":"YulFunctionCall","src":"23299:38:14"},"nodeType":"YulIf","src":"23296:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"23101:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23110:6:14","type":""}],"src":"23066:320:14"},{"body":{"nodeType":"YulBlock","src":"23435:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"23445:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23467:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"23497:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"23475:21:14"},"nodeType":"YulFunctionCall","src":"23475:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23463:3:14"},"nodeType":"YulFunctionCall","src":"23463:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"23449:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"23614:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"23616:16:14"},"nodeType":"YulFunctionCall","src":"23616:18:14"},"nodeType":"YulExpressionStatement","src":"23616:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"23557:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"23569:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23554:2:14"},"nodeType":"YulFunctionCall","src":"23554:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"23593:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"23605:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23590:2:14"},"nodeType":"YulFunctionCall","src":"23590:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23551:2:14"},"nodeType":"YulFunctionCall","src":"23551:62:14"},"nodeType":"YulIf","src":"23548:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23652:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"23656:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23645:6:14"},"nodeType":"YulFunctionCall","src":"23645:22:14"},"nodeType":"YulExpressionStatement","src":"23645:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23421:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"23429:4:14","type":""}],"src":"23392:281:14"},{"body":{"nodeType":"YulBlock","src":"23707:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23724:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23727:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23717:6:14"},"nodeType":"YulFunctionCall","src":"23717:88:14"},"nodeType":"YulExpressionStatement","src":"23717:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23821:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23824:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23814:6:14"},"nodeType":"YulFunctionCall","src":"23814:15:14"},"nodeType":"YulExpressionStatement","src":"23814:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23845:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23848:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23838:6:14"},"nodeType":"YulFunctionCall","src":"23838:15:14"},"nodeType":"YulExpressionStatement","src":"23838:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"23679:180:14"},{"body":{"nodeType":"YulBlock","src":"23893:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23910:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23913:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23903:6:14"},"nodeType":"YulFunctionCall","src":"23903:88:14"},"nodeType":"YulExpressionStatement","src":"23903:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24007:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24010:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24000:6:14"},"nodeType":"YulFunctionCall","src":"24000:15:14"},"nodeType":"YulExpressionStatement","src":"24000:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24031:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24034:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24024:6:14"},"nodeType":"YulFunctionCall","src":"24024:15:14"},"nodeType":"YulExpressionStatement","src":"24024:15:14"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"23865:180:14"},{"body":{"nodeType":"YulBlock","src":"24079:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24096:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24099:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24089:6:14"},"nodeType":"YulFunctionCall","src":"24089:88:14"},"nodeType":"YulExpressionStatement","src":"24089:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24193:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24196:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24186:6:14"},"nodeType":"YulFunctionCall","src":"24186:15:14"},"nodeType":"YulExpressionStatement","src":"24186:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24217:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24220:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24210:6:14"},"nodeType":"YulFunctionCall","src":"24210:15:14"},"nodeType":"YulExpressionStatement","src":"24210:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"24051:180:14"},{"body":{"nodeType":"YulBlock","src":"24265:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24282:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24285:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24275:6:14"},"nodeType":"YulFunctionCall","src":"24275:88:14"},"nodeType":"YulExpressionStatement","src":"24275:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24379:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24382:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24372:6:14"},"nodeType":"YulFunctionCall","src":"24372:15:14"},"nodeType":"YulExpressionStatement","src":"24372:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24403:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24406:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24396:6:14"},"nodeType":"YulFunctionCall","src":"24396:15:14"},"nodeType":"YulExpressionStatement","src":"24396:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"24237:180:14"},{"body":{"nodeType":"YulBlock","src":"24512:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24529:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24532:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24522:6:14"},"nodeType":"YulFunctionCall","src":"24522:12:14"},"nodeType":"YulExpressionStatement","src":"24522:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"24423:117:14"},{"body":{"nodeType":"YulBlock","src":"24635:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24652:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24655:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24645:6:14"},"nodeType":"YulFunctionCall","src":"24645:12:14"},"nodeType":"YulExpressionStatement","src":"24645:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"24546:117:14"},{"body":{"nodeType":"YulBlock","src":"24758:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24775:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24778:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24768:6:14"},"nodeType":"YulFunctionCall","src":"24768:12:14"},"nodeType":"YulExpressionStatement","src":"24768:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"24669:117:14"},{"body":{"nodeType":"YulBlock","src":"24881:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24898:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24901:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24891:6:14"},"nodeType":"YulFunctionCall","src":"24891:12:14"},"nodeType":"YulExpressionStatement","src":"24891:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"24792:117:14"},{"body":{"nodeType":"YulBlock","src":"24963:54:14","statements":[{"nodeType":"YulAssignment","src":"24973:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24991:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"24998:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24987:3:14"},"nodeType":"YulFunctionCall","src":"24987:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25007:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25003:3:14"},"nodeType":"YulFunctionCall","src":"25003:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24983:3:14"},"nodeType":"YulFunctionCall","src":"24983:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"24973:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24946:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"24956:6:14","type":""}],"src":"24915:102:14"},{"body":{"nodeType":"YulBlock","src":"25129:126:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25151:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25159:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25147:3:14"},"nodeType":"YulFunctionCall","src":"25147:14:14"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"25163:34:14","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25140:6:14"},"nodeType":"YulFunctionCall","src":"25140:58:14"},"nodeType":"YulExpressionStatement","src":"25140:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25219:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25227:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25215:3:14"},"nodeType":"YulFunctionCall","src":"25215:15:14"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"25232:15:14","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25208:6:14"},"nodeType":"YulFunctionCall","src":"25208:40:14"},"nodeType":"YulExpressionStatement","src":"25208:40:14"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25121:6:14","type":""}],"src":"25023:232:14"},{"body":{"nodeType":"YulBlock","src":"25367:108:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25389:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25397:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25385:3:14"},"nodeType":"YulFunctionCall","src":"25385:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"25401:66:14","type":"","value":"0x7b226e616d65223a220000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25378:6:14"},"nodeType":"YulFunctionCall","src":"25378:90:14"},"nodeType":"YulExpressionStatement","src":"25378:90:14"}]},"name":"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25359:6:14","type":""}],"src":"25261:214:14"},{"body":{"nodeType":"YulBlock","src":"25587:131:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25609:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25617:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25605:3:14"},"nodeType":"YulFunctionCall","src":"25605:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"25621:34:14","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25598:6:14"},"nodeType":"YulFunctionCall","src":"25598:58:14"},"nodeType":"YulExpressionStatement","src":"25598:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25677:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25685:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25673:3:14"},"nodeType":"YulFunctionCall","src":"25673:15:14"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"25690:20:14","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25666:6:14"},"nodeType":"YulFunctionCall","src":"25666:45:14"},"nodeType":"YulExpressionStatement","src":"25666:45:14"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25579:6:14","type":""}],"src":"25481:237:14"},{"body":{"nodeType":"YulBlock","src":"25830:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25852:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25860:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25848:3:14"},"nodeType":"YulFunctionCall","src":"25848:14:14"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"25864:34:14","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25841:6:14"},"nodeType":"YulFunctionCall","src":"25841:58:14"},"nodeType":"YulExpressionStatement","src":"25841:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25920:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25928:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25916:3:14"},"nodeType":"YulFunctionCall","src":"25916:15:14"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"25933:7:14","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25909:6:14"},"nodeType":"YulFunctionCall","src":"25909:32:14"},"nodeType":"YulExpressionStatement","src":"25909:32:14"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25822:6:14","type":""}],"src":"25724:224:14"},{"body":{"nodeType":"YulBlock","src":"26060:278:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26082:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26090:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26078:3:14"},"nodeType":"YulFunctionCall","src":"26078:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"26094:66:14","type":"","value":"0x222c20226465736372697074696f6e223a22596f752063617074757265642074"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26071:6:14"},"nodeType":"YulFunctionCall","src":"26071:90:14"},"nodeType":"YulExpressionStatement","src":"26071:90:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26182:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26190:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26178:3:14"},"nodeType":"YulFunctionCall","src":"26178:15:14"},{"hexValue":"686973204e46542061732070617274206f662074686520656475636174696f6e","kind":"string","nodeType":"YulLiteral","src":"26195:34:14","type":"","value":"his NFT as part of the education"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26171:6:14"},"nodeType":"YulFunctionCall","src":"26171:59:14"},"nodeType":"YulExpressionStatement","src":"26171:59:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26251:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26259:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26247:3:14"},"nodeType":"YulFunctionCall","src":"26247:15:14"},{"kind":"number","nodeType":"YulLiteral","src":"26264:66:14","type":"","value":"0x616c2053747265616d21222c2000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26240:6:14"},"nodeType":"YulFunctionCall","src":"26240:91:14"},"nodeType":"YulExpressionStatement","src":"26240:91:14"}]},"name":"store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26052:6:14","type":""}],"src":"25954:384:14"},{"body":{"nodeType":"YulBlock","src":"26450:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26472:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26480:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26468:3:14"},"nodeType":"YulFunctionCall","src":"26468:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"26484:34:14","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26461:6:14"},"nodeType":"YulFunctionCall","src":"26461:58:14"},"nodeType":"YulExpressionStatement","src":"26461:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26540:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26548:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26536:3:14"},"nodeType":"YulFunctionCall","src":"26536:15:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"26553:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26529:6:14"},"nodeType":"YulFunctionCall","src":"26529:31:14"},"nodeType":"YulExpressionStatement","src":"26529:31:14"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26442:6:14","type":""}],"src":"26344:223:14"},{"body":{"nodeType":"YulBlock","src":"26679:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26701:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26709:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26697:3:14"},"nodeType":"YulFunctionCall","src":"26697:14:14"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"26713:27:14","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26690:6:14"},"nodeType":"YulFunctionCall","src":"26690:51:14"},"nodeType":"YulExpressionStatement","src":"26690:51:14"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26671:6:14","type":""}],"src":"26573:175:14"},{"body":{"nodeType":"YulBlock","src":"26860:310:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26882:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26890:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26878:3:14"},"nodeType":"YulFunctionCall","src":"26878:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"26894:66:14","type":"","value":"0x2261747472696275746573223a205b7b2274726169745f74797065223a202273"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26871:6:14"},"nodeType":"YulFunctionCall","src":"26871:90:14"},"nodeType":"YulExpressionStatement","src":"26871:90:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26982:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26990:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26978:3:14"},"nodeType":"YulFunctionCall","src":"26978:15:14"},{"kind":"number","nodeType":"YulLiteral","src":"26995:66:14","type":"","value":"0x6b696c6c73222c202276616c7565223a203130307d5d2c2022696d616765223a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26971:6:14"},"nodeType":"YulFunctionCall","src":"26971:91:14"},"nodeType":"YulExpressionStatement","src":"26971:91:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27083:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27091:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27079:3:14"},"nodeType":"YulFunctionCall","src":"27079:15:14"},{"kind":"number","nodeType":"YulLiteral","src":"27096:66:14","type":"","value":"0x2200000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27072:6:14"},"nodeType":"YulFunctionCall","src":"27072:91:14"},"nodeType":"YulExpressionStatement","src":"27072:91:14"}]},"name":"store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26852:6:14","type":""}],"src":"26754:416:14"},{"body":{"nodeType":"YulBlock","src":"27282:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27304:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27312:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27300:3:14"},"nodeType":"YulFunctionCall","src":"27300:14:14"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"27316:34:14","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27293:6:14"},"nodeType":"YulFunctionCall","src":"27293:58:14"},"nodeType":"YulExpressionStatement","src":"27293:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27372:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27380:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27368:3:14"},"nodeType":"YulFunctionCall","src":"27368:15:14"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"27385:11:14","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27361:6:14"},"nodeType":"YulFunctionCall","src":"27361:36:14"},"nodeType":"YulExpressionStatement","src":"27361:36:14"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27274:6:14","type":""}],"src":"27176:228:14"},{"body":{"nodeType":"YulBlock","src":"27516:108:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27538:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27546:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27534:3:14"},"nodeType":"YulFunctionCall","src":"27534:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"27550:66:14","type":"","value":"0x227d000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27527:6:14"},"nodeType":"YulFunctionCall","src":"27527:90:14"},"nodeType":"YulExpressionStatement","src":"27527:90:14"}]},"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27508:6:14","type":""}],"src":"27410:214:14"},{"body":{"nodeType":"YulBlock","src":"27736:68:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27758:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27766:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27754:3:14"},"nodeType":"YulFunctionCall","src":"27754:14:14"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"27770:26:14","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27747:6:14"},"nodeType":"YulFunctionCall","src":"27747:50:14"},"nodeType":"YulExpressionStatement","src":"27747:50:14"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27728:6:14","type":""}],"src":"27630:174:14"},{"body":{"nodeType":"YulBlock","src":"27916:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27938:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27946:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27934:3:14"},"nodeType":"YulFunctionCall","src":"27934:14:14"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"27950:34:14","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27927:6:14"},"nodeType":"YulFunctionCall","src":"27927:58:14"},"nodeType":"YulExpressionStatement","src":"27927:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28006:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28014:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28002:3:14"},"nodeType":"YulFunctionCall","src":"28002:15:14"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"28019:3:14","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27995:6:14"},"nodeType":"YulFunctionCall","src":"27995:28:14"},"nodeType":"YulExpressionStatement","src":"27995:28:14"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27908:6:14","type":""}],"src":"27810:220:14"},{"body":{"nodeType":"YulBlock","src":"28142:142:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28164:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28172:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28160:3:14"},"nodeType":"YulFunctionCall","src":"28160:14:14"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"28176:34:14","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28153:6:14"},"nodeType":"YulFunctionCall","src":"28153:58:14"},"nodeType":"YulExpressionStatement","src":"28153:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28232:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28240:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28228:3:14"},"nodeType":"YulFunctionCall","src":"28228:15:14"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"28245:31:14","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28221:6:14"},"nodeType":"YulFunctionCall","src":"28221:56:14"},"nodeType":"YulExpressionStatement","src":"28221:56:14"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28134:6:14","type":""}],"src":"28036:248:14"},{"body":{"nodeType":"YulBlock","src":"28333:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"28390:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28399:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28402:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28392:6:14"},"nodeType":"YulFunctionCall","src":"28392:12:14"},"nodeType":"YulExpressionStatement","src":"28392:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28356:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28381:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"28363:17:14"},"nodeType":"YulFunctionCall","src":"28363:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28353:2:14"},"nodeType":"YulFunctionCall","src":"28353:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28346:6:14"},"nodeType":"YulFunctionCall","src":"28346:43:14"},"nodeType":"YulIf","src":"28343:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28326:5:14","type":""}],"src":"28290:122:14"},{"body":{"nodeType":"YulBlock","src":"28458:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"28512:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28521:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28524:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28514:6:14"},"nodeType":"YulFunctionCall","src":"28514:12:14"},"nodeType":"YulExpressionStatement","src":"28514:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28481:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28503:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"28488:14:14"},"nodeType":"YulFunctionCall","src":"28488:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28478:2:14"},"nodeType":"YulFunctionCall","src":"28478:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28471:6:14"},"nodeType":"YulFunctionCall","src":"28471:40:14"},"nodeType":"YulIf","src":"28468:60:14"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28451:5:14","type":""}],"src":"28418:116:14"},{"body":{"nodeType":"YulBlock","src":"28582:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"28638:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28647:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28650:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28640:6:14"},"nodeType":"YulFunctionCall","src":"28640:12:14"},"nodeType":"YulExpressionStatement","src":"28640:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28605:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28629:5:14"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"28612:16:14"},"nodeType":"YulFunctionCall","src":"28612:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28602:2:14"},"nodeType":"YulFunctionCall","src":"28602:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28595:6:14"},"nodeType":"YulFunctionCall","src":"28595:42:14"},"nodeType":"YulIf","src":"28592:62:14"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28575:5:14","type":""}],"src":"28540:120:14"},{"body":{"nodeType":"YulBlock","src":"28709:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"28766:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28775:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28778:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28768:6:14"},"nodeType":"YulFunctionCall","src":"28768:12:14"},"nodeType":"YulExpressionStatement","src":"28768:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28732:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28757:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28739:17:14"},"nodeType":"YulFunctionCall","src":"28739:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28729:2:14"},"nodeType":"YulFunctionCall","src":"28729:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28722:6:14"},"nodeType":"YulFunctionCall","src":"28722:43:14"},"nodeType":"YulIf","src":"28719:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28702:5:14","type":""}],"src":"28666:122:14"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(pos)\n        end := add(pos, 9)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 77)\n        store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf(pos)\n        end := add(pos, 77)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 65)\n        store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719(pos)\n        end := add(pos, 65)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(memPtr) {\n\n        mstore(add(memPtr, 0), 0x7b226e616d65223a220000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf(memPtr) {\n\n        mstore(add(memPtr, 0), 0x222c20226465736372697074696f6e223a22596f752063617074757265642074)\n\n        mstore(add(memPtr, 32), \"his NFT as part of the education\")\n\n        mstore(add(memPtr, 64), 0x616c2053747265616d21222c2000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2261747472696275746573223a205b7b2274726169745f74797065223a202273)\n\n        mstore(add(memPtr, 32), 0x6b696c6c73222c202276616c7565223a203130307d5d2c2022696d616765223a)\n\n        mstore(add(memPtr, 64), 0x2200000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(memPtr) {\n\n        mstore(add(memPtr, 0), 0x227d000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb465146102cc578063b88d4fde146102e8578063c87b56dd14610304578063e985e9c514610334578063f5d18d35146103645761010b565b80636352211e146102305780636e02007d1461026057806370a082311461027e57806395d89b41146102ae5761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780634ed7ff63146101e25780635dbe700f146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611969565b610394565b6040516101379190611d62565b60405180910390f35b610148610476565b6040516101559190611d7d565b60405180910390f35b610178600480360381019061017391906119c3565b610508565b6040516101859190611cfb565b60405180910390f35b6101a860048036038101906101a39190611929565b61054e565b005b6101c460048036038101906101bf9190611813565b610666565b005b6101e060048036038101906101db9190611813565b6106c6565b005b6101fc60048036038101906101f791906117a6565b6106e6565b6040516102099190611d62565b60405180910390f35b61021a61073c565b6040516102279190611d7d565b60405180910390f35b61024a600480360381019061024591906119c3565b610758565b6040516102579190611cfb565b60405180910390f35b6102686107df565b6040516102759190611ebf565b60405180910390f35b610298600480360381019061029391906117a6565b6107e9565b6040516102a59190611ebf565b60405180910390f35b6102b66108a1565b6040516102c39190611d7d565b60405180910390f35b6102e660048036038101906102e191906118e9565b610933565b005b61030260048036038101906102fd9190611866565b610949565b005b61031e600480360381019061031991906119c3565b6109ab565b60405161032b9190611d7d565b60405180910390f35b61034e600480360381019061034991906117d3565b610a25565b60405161035b9190611d62565b60405180910390f35b61037e600480360381019061037991906117a6565b610ab9565b60405161038b9190611d62565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046f575061046e82610ad9565b5b9050919050565b6060600080546104859061213e565b80601f01602080910402602001604051908101604052809291908181526020018280546104b19061213e565b80156104fe5780601f106104d3576101008083540402835291602001916104fe565b820191906000526020600020905b8154815290600101906020018083116104e157829003601f168201915b5050505050905090565b600061051382610b43565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061055982610758565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c190611e7f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105e9610b8e565b73ffffffffffffffffffffffffffffffffffffffff161480610618575061061781610612610b8e565b610a25565b5b610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90611e9f565b60405180910390fd5b6106618383610b96565b505050565b610677610671610b8e565b82610c4f565b6106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ad90611d9f565b60405180910390fd5b6106c1838383610ce4565b505050565b6106e183838360405180602001604052806000815250610949565b505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6040518060800160405280604381526020016126966043913981565b60008061076483610fde565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cd90611e5f565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085190611e3f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546108b09061213e565b80601f01602080910402602001604051908101604052809291908181526020018280546108dc9061213e565b80156109295780601f106108fe57610100808354040283529160200191610929565b820191906000526020600020905b81548152906001019060200180831161090c57829003601f168201915b5050505050905090565b61094561093e610b8e565b838361101b565b5050565b61095a610954610b8e565b83610c4f565b610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099090611d9f565b60405180910390fd5b6109a584848484611188565b50505050565b60606109b56111e4565b6109fe6109c0610476565b604051806080016040528060438152602001612696604391396040516020016109ea929190611cab565b604051602081830303815290604052611221565b604051602001610a0f929190611c87565b6040516020818303038152906040529050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60076020528060005260406000206000915054906101000a900460ff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b4c816113a6565b610b8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8290611e5f565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610c0983610758565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610c5b83610758565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c9d5750610c9c8185610a25565b5b80610cdb57508373ffffffffffffffffffffffffffffffffffffffff16610cc384610508565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610d0482610758565b73ffffffffffffffffffffffffffffffffffffffff1614610d5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5190611ddf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc190611dff565b60405180910390fd5b610dd783838360016113e7565b8273ffffffffffffffffffffffffffffffffffffffff16610df782610758565b73ffffffffffffffffffffffffffffffffffffffff1614610e4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4490611ddf565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610fd9838383600161150d565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561108a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108190611e1f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161117b9190611d62565b60405180910390a3505050565b611193848484610ce4565b61119f84848484611513565b6111de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d590611dbf565b60405180910390fd5b50505050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b6060600082511415611244576040518060200160405280600081525090506113a1565b60006040518060600160405280604081526020016126d960409139905060006003600285516112739190611f73565b61127d9190611fc9565b60046112899190611ffa565b9050600060208261129a9190611f73565b67ffffffffffffffff8111156112b3576112b261222e565b5b6040519080825280601f01601f1916602001820160405280156112e55781602001600182028036833780820191505090505b509050818152600183018586518101602084015b81831015611360576003830192508251603f8160121c1685015160f81b8252600182019150603f81600c1c1685015160f81b8252600182019150603f8160061c1685015160f81b8252600182019150603f811685015160f81b8252600182019150506112f9565b60038951066001811461137a576002811461138a57611395565b613d3d60f01b6002830352611395565b603d60f81b60018303525b50505050508093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166113c883610fde565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600181111561150757600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461147b5780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114739190612054565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146115065780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114fe9190611f73565b925050819055505b5b50505050565b50505050565b60006115348473ffffffffffffffffffffffffffffffffffffffff166116aa565b1561169d578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261155d610b8e565b8786866040518563ffffffff1660e01b815260040161157f9493929190611d16565b602060405180830381600087803b15801561159957600080fd5b505af19250505080156115ca57506040513d601f19601f820116820180604052508101906115c79190611996565b60015b61164d573d80600081146115fa576040519150601f19603f3d011682016040523d82523d6000602084013e6115ff565b606091505b50600081511415611645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163c90611dbf565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506116a2565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006116e06116db84611eff565b611eda565b9050828152602081018484840111156116fc576116fb612262565b5b6117078482856120fc565b509392505050565b60008135905061171e81612639565b92915050565b60008135905061173381612650565b92915050565b60008135905061174881612667565b92915050565b60008151905061175d81612667565b92915050565b600082601f8301126117785761177761225d565b5b81356117888482602086016116cd565b91505092915050565b6000813590506117a08161267e565b92915050565b6000602082840312156117bc576117bb61226c565b5b60006117ca8482850161170f565b91505092915050565b600080604083850312156117ea576117e961226c565b5b60006117f88582860161170f565b92505060206118098582860161170f565b9150509250929050565b60008060006060848603121561182c5761182b61226c565b5b600061183a8682870161170f565b935050602061184b8682870161170f565b925050604061185c86828701611791565b9150509250925092565b600080600080608085870312156118805761187f61226c565b5b600061188e8782880161170f565b945050602061189f8782880161170f565b93505060406118b087828801611791565b925050606085013567ffffffffffffffff8111156118d1576118d0612267565b5b6118dd87828801611763565b91505092959194509250565b60008060408385031215611900576118ff61226c565b5b600061190e8582860161170f565b925050602061191f85828601611724565b9150509250929050565b600080604083850312156119405761193f61226c565b5b600061194e8582860161170f565b925050602061195f85828601611791565b9150509250929050565b60006020828403121561197f5761197e61226c565b5b600061198d84828501611739565b91505092915050565b6000602082840312156119ac576119ab61226c565b5b60006119ba8482850161174e565b91505092915050565b6000602082840312156119d9576119d861226c565b5b60006119e784828501611791565b91505092915050565b6119f981612088565b82525050565b611a088161209a565b82525050565b6000611a1982611f30565b611a238185611f46565b9350611a3381856020860161210b565b611a3c81612271565b840191505092915050565b6000611a5282611f3b565b611a5c8185611f57565b9350611a6c81856020860161210b565b611a7581612271565b840191505092915050565b6000611a8b82611f3b565b611a958185611f68565b9350611aa581856020860161210b565b80840191505092915050565b6000611abe602d83611f57565b9150611ac982612282565b604082019050919050565b6000611ae1600983611f68565b9150611aec826122d1565b600982019050919050565b6000611b04603283611f57565b9150611b0f826122fa565b604082019050919050565b6000611b27602583611f57565b9150611b3282612349565b604082019050919050565b6000611b4a604d83611f68565b9150611b5582612398565b604d82019050919050565b6000611b6d602483611f57565b9150611b788261240d565b604082019050919050565b6000611b90601983611f57565b9150611b9b8261245c565b602082019050919050565b6000611bb3604183611f68565b9150611bbe82612485565b604182019050919050565b6000611bd6602983611f57565b9150611be1826124fa565b604082019050919050565b6000611bf9600283611f68565b9150611c0482612549565b600282019050919050565b6000611c1c601883611f57565b9150611c2782612572565b602082019050919050565b6000611c3f602183611f57565b9150611c4a8261259b565b604082019050919050565b6000611c62603d83611f57565b9150611c6d826125ea565b604082019050919050565b611c81816120f2565b82525050565b6000611c938285611a80565b9150611c9f8284611a80565b91508190509392505050565b6000611cb682611ad4565b9150611cc28285611a80565b9150611ccd82611b3d565b9150611cd882611ba6565b9150611ce48284611a80565b9150611cef82611bec565b91508190509392505050565b6000602082019050611d1060008301846119f0565b92915050565b6000608082019050611d2b60008301876119f0565b611d3860208301866119f0565b611d456040830185611c78565b8181036060830152611d578184611a0e565b905095945050505050565b6000602082019050611d7760008301846119ff565b92915050565b60006020820190508181036000830152611d978184611a47565b905092915050565b60006020820190508181036000830152611db881611ab1565b9050919050565b60006020820190508181036000830152611dd881611af7565b9050919050565b60006020820190508181036000830152611df881611b1a565b9050919050565b60006020820190508181036000830152611e1881611b60565b9050919050565b60006020820190508181036000830152611e3881611b83565b9050919050565b60006020820190508181036000830152611e5881611bc9565b9050919050565b60006020820190508181036000830152611e7881611c0f565b9050919050565b60006020820190508181036000830152611e9881611c32565b9050919050565b60006020820190508181036000830152611eb881611c55565b9050919050565b6000602082019050611ed46000830184611c78565b92915050565b6000611ee4611ef5565b9050611ef08282612170565b919050565b6000604051905090565b600067ffffffffffffffff821115611f1a57611f1961222e565b5b611f2382612271565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611f7e826120f2565b9150611f89836120f2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fbe57611fbd6121a1565b5b828201905092915050565b6000611fd4826120f2565b9150611fdf836120f2565b925082611fef57611fee6121d0565b5b828204905092915050565b6000612005826120f2565b9150612010836120f2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612049576120486121a1565b5b828202905092915050565b600061205f826120f2565b915061206a836120f2565b92508282101561207d5761207c6121a1565b5b828203905092915050565b6000612093826120d2565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561212957808201518184015260208101905061210e565b83811115612138576000848401525b50505050565b6000600282049050600182168061215657607f821691505b6020821081141561216a576121696121ff565b5b50919050565b61217982612271565b810181811067ffffffffffffffff821117156121985761219761222e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f222c20226465736372697074696f6e223a22596f75206361707475726564207460008201527f686973204e46542061732070617274206f662074686520656475636174696f6e60208201527f616c2053747265616d21222c2000000000000000000000000000000000000000604082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f2261747472696275746573223a205b7b2274726169745f74797065223a20227360008201527f6b696c6c73222c202276616c7565223a203130307d5d2c2022696d616765223a60208201527f2200000000000000000000000000000000000000000000000000000000000000604082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61264281612088565b811461264d57600080fd5b50565b6126598161209a565b811461266457600080fd5b50565b612670816120a6565b811461267b57600080fd5b50565b612687816120f2565b811461269257600080fd5b5056fe68747470733a2f2f697066732e696f2f697066732f516d5565585636335676725958774436356774457a365746434a786f363250484a3570437569664336716d3675554142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122082fbcb45d18343bb3830f6e3e774e8b41587b729a06e8ed3d06895897964c1bb64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xF5D18D35 EQ PUSH2 0x364 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AE JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x4ED7FF63 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x5DBE700F EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46F JUMPI POP PUSH2 0x46E DUP3 PUSH2 0xAD9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x485 SWAP1 PUSH2 0x213E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B1 SWAP1 PUSH2 0x213E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x513 DUP3 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP3 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C1 SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E9 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x618 JUMPI POP PUSH2 0x617 DUP2 PUSH2 0x612 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST JUMPDEST PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64E SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x661 DUP4 DUP4 PUSH2 0xB96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x677 PUSH2 0x671 PUSH2 0xB8E JUMP JUMPDEST DUP3 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C1 DUP4 DUP4 DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6E1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x949 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2696 PUSH1 0x43 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x764 DUP4 PUSH2 0xFDE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CD SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x851 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x213E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x213E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x929 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x929 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x945 PUSH2 0x93E PUSH2 0xB8E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x101B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x95A PUSH2 0x954 PUSH2 0xB8E JUMP JUMPDEST DUP4 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x990 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9B5 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x9FE PUSH2 0x9C0 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2696 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9EA SWAP3 SWAP2 SWAP1 PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA0F SWAP3 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4C DUP2 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB82 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC09 DUP4 PUSH2 0x758 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC5B DUP4 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC9D JUMPI POP PUSH2 0xC9C DUP2 DUP6 PUSH2 0xA25 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xCDB JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC3 DUP5 PUSH2 0x508 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD04 DUP3 PUSH2 0x758 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC1 SWAP1 PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13E7 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF7 DUP3 PUSH2 0x758 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE44 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xFD9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x150D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1193 DUP5 DUP5 DUP5 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x119F DUP5 DUP5 DUP5 DUP5 PUSH2 0x1513 JUMP JUMPDEST PUSH2 0x11DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D5 SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26D9 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x1273 SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12B3 JUMPI PUSH2 0x12B2 PUSH2 0x222E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12E5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1360 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x137A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x138A JUMPI PUSH2 0x1395 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x1395 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13C8 DUP4 PUSH2 0xFDE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147B JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1473 SWAP2 SWAP1 PUSH2 0x2054 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1506 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14FE SWAP2 SWAP1 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1534 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16AA JUMP JUMPDEST ISZERO PUSH2 0x169D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x155D PUSH2 0xB8E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15CA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C7 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x164D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163C SWAP1 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E0 PUSH2 0x16DB DUP5 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0x1EDA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x2262 JUMP JUMPDEST JUMPDEST PUSH2 0x1707 DUP5 DUP3 DUP6 PUSH2 0x20FC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x171E DUP2 PUSH2 0x2639 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1733 DUP2 PUSH2 0x2650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1748 DUP2 PUSH2 0x2667 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x175D DUP2 PUSH2 0x2667 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1778 JUMPI PUSH2 0x1777 PUSH2 0x225D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1788 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17A0 DUP2 PUSH2 0x267E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17BC JUMPI PUSH2 0x17BB PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17CA DUP5 DUP3 DUP6 ADD PUSH2 0x170F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EA JUMPI PUSH2 0x17E9 PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F8 DUP6 DUP3 DUP7 ADD PUSH2 0x170F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1809 DUP6 DUP3 DUP7 ADD PUSH2 0x170F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x182C JUMPI PUSH2 0x182B PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x183A DUP7 DUP3 DUP8 ADD PUSH2 0x170F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x184B DUP7 DUP3 DUP8 ADD PUSH2 0x170F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x185C DUP7 DUP3 DUP8 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1880 JUMPI PUSH2 0x187F PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x188E DUP8 DUP3 DUP9 ADD PUSH2 0x170F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189F DUP8 DUP3 DUP9 ADD PUSH2 0x170F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18B0 DUP8 DUP3 DUP9 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x2267 JUMP JUMPDEST JUMPDEST PUSH2 0x18DD DUP8 DUP3 DUP9 ADD PUSH2 0x1763 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1900 JUMPI PUSH2 0x18FF PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190E DUP6 DUP3 DUP7 ADD PUSH2 0x170F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191F DUP6 DUP3 DUP7 ADD PUSH2 0x1724 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x194E DUP6 DUP3 DUP7 ADD PUSH2 0x170F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195F DUP6 DUP3 DUP7 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x198D DUP5 DUP3 DUP6 ADD PUSH2 0x1739 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP5 DUP3 DUP6 ADD PUSH2 0x174E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D9 JUMPI PUSH2 0x19D8 PUSH2 0x226C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19E7 DUP5 DUP3 DUP6 ADD PUSH2 0x1791 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F9 DUP2 PUSH2 0x2088 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A08 DUP2 PUSH2 0x209A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A19 DUP3 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x1A23 DUP2 DUP6 PUSH2 0x1F46 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A33 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x210B JUMP JUMPDEST PUSH2 0x1A3C DUP2 PUSH2 0x2271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A52 DUP3 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1A5C DUP2 DUP6 PUSH2 0x1F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x210B JUMP JUMPDEST PUSH2 0x1A75 DUP2 PUSH2 0x2271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8B DUP3 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1A95 DUP2 DUP6 PUSH2 0x1F68 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AA5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x210B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABE PUSH1 0x2D DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC9 DUP3 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE1 PUSH1 0x9 DUP4 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEC DUP3 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B04 PUSH1 0x32 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0F DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH1 0x25 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B32 DUP3 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4A PUSH1 0x4D DUP4 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B55 DUP3 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x4D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6D PUSH1 0x24 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B78 DUP3 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x19 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x245C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB3 PUSH1 0x41 DUP4 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBE DUP3 PUSH2 0x2485 JUMP JUMPDEST PUSH1 0x41 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD6 PUSH1 0x29 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE1 DUP3 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF9 PUSH1 0x2 DUP4 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C04 DUP3 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1C PUSH1 0x18 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C27 DUP3 PUSH2 0x2572 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3F PUSH1 0x21 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4A DUP3 PUSH2 0x259B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C62 PUSH1 0x3D DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6D DUP3 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C81 DUP2 PUSH2 0x20F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C93 DUP3 DUP6 PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9F DUP3 DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB6 DUP3 PUSH2 0x1AD4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC2 DUP3 DUP6 PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP3 PUSH2 0x1B3D JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD8 DUP3 PUSH2 0x1BA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 DUP5 PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEF DUP3 PUSH2 0x1BEC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D10 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D2B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x19F0 JUMP JUMPDEST PUSH2 0x1D38 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19F0 JUMP JUMPDEST PUSH2 0x1D45 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C78 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D57 DUP2 DUP5 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D97 DUP2 DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB8 DUP2 PUSH2 0x1AB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD8 DUP2 PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF8 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E18 DUP2 PUSH2 0x1B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E38 DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E58 DUP2 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E78 DUP2 PUSH2 0x1C0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E98 DUP2 PUSH2 0x1C32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB8 DUP2 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EF0 DUP3 DUP3 PUSH2 0x2170 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F19 PUSH2 0x222E JUMP JUMPDEST JUMPDEST PUSH2 0x1F23 DUP3 PUSH2 0x2271 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7E DUP3 PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F89 DUP4 PUSH2 0x20F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1FBE JUMPI PUSH2 0x1FBD PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD4 DUP3 PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDF DUP4 PUSH2 0x20F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FEF JUMPI PUSH2 0x1FEE PUSH2 0x21D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2005 DUP3 PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2010 DUP4 PUSH2 0x20F2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2049 JUMPI PUSH2 0x2048 PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205F DUP3 PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x206A DUP4 PUSH2 0x20F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x207D JUMPI PUSH2 0x207C PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2093 DUP3 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2129 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x210E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2138 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2156 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x216A JUMPI PUSH2 0x2169 PUSH2 0x21FF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2179 DUP3 PUSH2 0x2271 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2198 JUMPI PUSH2 0x2197 PUSH2 0x222E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22596F752063617074757265642074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x686973204E46542061732070617274206F662074686520656475636174696F6E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x616C2053747265616D21222C2000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B696C6C73222C202276616C7565223A203130307D5D2C2022696D616765223A PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2642 DUP2 PUSH2 0x2088 JUMP JUMPDEST DUP2 EQ PUSH2 0x264D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2659 DUP2 PUSH2 0x209A JUMP JUMPDEST DUP2 EQ PUSH2 0x2664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2670 DUP2 PUSH2 0x20A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x267B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2687 DUP2 PUSH2 0x20F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH9 0x747470733A2F2F6970 PUSH7 0x732E696F2F6970 PUSH7 0x732F516D556558 JUMP CALLDATASIZE CALLER JUMP PUSH23 0x725958774436356774457A365746434A786F363250484A CALLDATALOAD PUSH17 0x437569664336716D367555414243444546 SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 DUP3 0xFB 0xCB GASLIMIT 0xD1 DUP4 NUMBER 0xBB CODESIZE ADDRESS 0xF6 0xE3 0xE7 PUSH21 0xE8B41587B729A06E8ED3D06895897964C1BB64736F PUSH13 0x63430008070033000000000000 ","sourceMap":"148:1880:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1830:95:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;193:118;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:219:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1931:95:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1008:816:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;354:40:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300:0;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;1830:95:11:-;1881:4;1904:8;:14;1913:4;1904:14;;;;;;;;;;;;;;;;;;;;;;;;;1897:21;;1830:95;;;:::o;193:118::-;;;;;;;;;;;;;;;;;;;:::o;2190:219:0:-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1931:95:11:-;1979:7;2005:14;;1998:21;;1931:95;:::o;1929:204:0:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;1008:816:11:-;1093:13;1199:10;:8;:10::i;:::-;1231:554;1400:6;:4;:6::i;:::-;1654:15;;;;;;;;;;;;;;;;;1305:432;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1231:13;:554::i;:::-;1161:642;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1118:699;;1008:816;;;:::o;4388:162:0:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;354:40:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:0:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;12768:171:0:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;532:122:11:-;584:13;609:38;;;;;;;;;;;;;;;;;;;532:122;:::o;293:1985:10:-;351:13;395:1;380:4;:11;:16;376:31;;;398:9;;;;;;;;;;;;;;;;376:31;464:19;486:5;;;;;;;;;;;;;;;;;464:27;;540:18;586:1;581;567:4;:11;:15;;;;:::i;:::-;566:21;;;;:::i;:::-;561:1;:27;;;;:::i;:::-;540:48;;668:20;715:2;702:10;:15;;;;:::i;:::-;691:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:50;;811:10;803:6;796:26;915:1;908:5;904:13;983:4;1033;1027:11;1018:7;1014:25;1138:2;1130:6;1126:15;1220:794;1239:6;1230:7;1227:19;1220:794;;;1303:1;1294:7;1290:15;1279:26;;1387:7;1381:14;1531:4;1523:5;1519:2;1515:14;1511:25;1501:8;1497:40;1491:47;1486:3;1482:57;1471:9;1464:76;1584:1;1573:9;1569:17;1556:30;;1669:4;1661:5;1657:2;1653:14;1649:25;1639:8;1635:40;1629:47;1624:3;1620:57;1609:9;1602:76;1722:1;1711:9;1707:17;1694:30;;1807:4;1799:5;1796:1;1791:14;1787:25;1777:8;1773:40;1767:47;1762:3;1758:57;1747:9;1740:76;1860:1;1849:9;1845:17;1832:30;;1945:4;1937:5;1925:25;1915:8;1911:40;1905:47;1900:3;1896:57;1885:9;1878:76;1998:1;1987:9;1983:17;1970:30;;1262:752;1220:794;;;2096:1;2089:4;2083:11;2079:19;2116:1;2111:54;;;;2183:1;2178:52;;;;2072:158;;2111:54;2155:6;2150:3;2146:16;2142:1;2131:9;2127:17;2120:43;2111:54;;2178:52;2222:4;2217:3;2213:14;2209:1;2198:9;2194:17;2187:41;2072:158;;738:1502;;;;2265:6;2258:13;;;;;293:1985;;;;:::o;7256:126:0:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:410:14:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:366::-;7365:3;7386:67;7450:2;7445:3;7386:67;:::i;:::-;7379:74;;7462:93;7551:3;7462:93;:::i;:::-;7580:2;7575:3;7571:12;7564:19;;7223:366;;;:::o;7595:400::-;7755:3;7776:84;7858:1;7853:3;7776:84;:::i;:::-;7769:91;;7869:93;7958:3;7869:93;:::i;:::-;7987:1;7982:3;7978:11;7971:18;;7595:400;;;:::o;8001:366::-;8143:3;8164:67;8228:2;8223:3;8164:67;:::i;:::-;8157:74;;8240:93;8329:3;8240:93;:::i;:::-;8358:2;8353:3;8349:12;8342:19;;8001:366;;;:::o;8373:::-;8515:3;8536:67;8600:2;8595:3;8536:67;:::i;:::-;8529:74;;8612:93;8701:3;8612:93;:::i;:::-;8730:2;8725:3;8721:12;8714:19;;8373:366;;;:::o;8745:402::-;8905:3;8926:85;9008:2;9003:3;8926:85;:::i;:::-;8919:92;;9020:93;9109:3;9020:93;:::i;:::-;9138:2;9133:3;9129:12;9122:19;;8745:402;;;:::o;9153:366::-;9295:3;9316:67;9380:2;9375:3;9316:67;:::i;:::-;9309:74;;9392:93;9481:3;9392:93;:::i;:::-;9510:2;9505:3;9501:12;9494:19;;9153:366;;;:::o;9525:::-;9667:3;9688:67;9752:2;9747:3;9688:67;:::i;:::-;9681:74;;9764:93;9853:3;9764:93;:::i;:::-;9882:2;9877:3;9873:12;9866:19;;9525:366;;;:::o;9897:402::-;10057:3;10078:85;10160:2;10155:3;10078:85;:::i;:::-;10071:92;;10172:93;10261:3;10172:93;:::i;:::-;10290:2;10285:3;10281:12;10274:19;;9897:402;;;:::o;10305:366::-;10447:3;10468:67;10532:2;10527:3;10468:67;:::i;:::-;10461:74;;10544:93;10633:3;10544:93;:::i;:::-;10662:2;10657:3;10653:12;10646:19;;10305:366;;;:::o;10677:400::-;10837:3;10858:84;10940:1;10935:3;10858:84;:::i;:::-;10851:91;;10951:93;11040:3;10951:93;:::i;:::-;11069:1;11064:3;11060:11;11053:18;;10677:400;;;:::o;11083:366::-;11225:3;11246:67;11310:2;11305:3;11246:67;:::i;:::-;11239:74;;11322:93;11411:3;11322:93;:::i;:::-;11440:2;11435:3;11431:12;11424:19;;11083:366;;;:::o;11455:::-;11597:3;11618:67;11682:2;11677:3;11618:67;:::i;:::-;11611:74;;11694:93;11783:3;11694:93;:::i;:::-;11812:2;11807:3;11803:12;11796:19;;11455:366;;;:::o;11827:::-;11969:3;11990:67;12054:2;12049:3;11990:67;:::i;:::-;11983:74;;12066:93;12155:3;12066:93;:::i;:::-;12184:2;12179:3;12175:12;12168:19;;11827:366;;;:::o;12199:118::-;12286:24;12304:5;12286:24;:::i;:::-;12281:3;12274:37;12199:118;;:::o;12323:435::-;12503:3;12525:95;12616:3;12607:6;12525:95;:::i;:::-;12518:102;;12637:95;12728:3;12719:6;12637:95;:::i;:::-;12630:102;;12749:3;12742:10;;12323:435;;;;;:::o;12764:1499::-;13348:3;13370:148;13514:3;13370:148;:::i;:::-;13363:155;;13535:95;13626:3;13617:6;13535:95;:::i;:::-;13528:102;;13647:148;13791:3;13647:148;:::i;:::-;13640:155;;13812:148;13956:3;13812:148;:::i;:::-;13805:155;;13977:95;14068:3;14059:6;13977:95;:::i;:::-;13970:102;;14089:148;14233:3;14089:148;:::i;:::-;14082:155;;14254:3;14247:10;;12764:1499;;;;;:::o;14269:222::-;14362:4;14400:2;14389:9;14385:18;14377:26;;14413:71;14481:1;14470:9;14466:17;14457:6;14413:71;:::i;:::-;14269:222;;;;:::o;14497:640::-;14692:4;14730:3;14719:9;14715:19;14707:27;;14744:71;14812:1;14801:9;14797:17;14788:6;14744:71;:::i;:::-;14825:72;14893:2;14882:9;14878:18;14869:6;14825:72;:::i;:::-;14907;14975:2;14964:9;14960:18;14951:6;14907:72;:::i;:::-;15026:9;15020:4;15016:20;15011:2;15000:9;14996:18;14989:48;15054:76;15125:4;15116:6;15054:76;:::i;:::-;15046:84;;14497:640;;;;;;;:::o;15143:210::-;15230:4;15268:2;15257:9;15253:18;15245:26;;15281:65;15343:1;15332:9;15328:17;15319:6;15281:65;:::i;:::-;15143:210;;;;:::o;15359:313::-;15472:4;15510:2;15499:9;15495:18;15487:26;;15559:9;15553:4;15549:20;15545:1;15534:9;15530:17;15523:47;15587:78;15660:4;15651:6;15587:78;:::i;:::-;15579:86;;15359:313;;;;:::o;15678:419::-;15844:4;15882:2;15871:9;15867:18;15859:26;;15931:9;15925:4;15921:20;15917:1;15906:9;15902:17;15895:47;15959:131;16085:4;15959:131;:::i;:::-;15951:139;;15678:419;;;:::o;16103:::-;16269:4;16307:2;16296:9;16292:18;16284:26;;16356:9;16350:4;16346:20;16342:1;16331:9;16327:17;16320:47;16384:131;16510:4;16384:131;:::i;:::-;16376:139;;16103:419;;;:::o;16528:::-;16694:4;16732:2;16721:9;16717:18;16709:26;;16781:9;16775:4;16771:20;16767:1;16756:9;16752:17;16745:47;16809:131;16935:4;16809:131;:::i;:::-;16801:139;;16528:419;;;:::o;16953:::-;17119:4;17157:2;17146:9;17142:18;17134:26;;17206:9;17200:4;17196:20;17192:1;17181:9;17177:17;17170:47;17234:131;17360:4;17234:131;:::i;:::-;17226:139;;16953:419;;;:::o;17378:::-;17544:4;17582:2;17571:9;17567:18;17559:26;;17631:9;17625:4;17621:20;17617:1;17606:9;17602:17;17595:47;17659:131;17785:4;17659:131;:::i;:::-;17651:139;;17378:419;;;:::o;17803:::-;17969:4;18007:2;17996:9;17992:18;17984:26;;18056:9;18050:4;18046:20;18042:1;18031:9;18027:17;18020:47;18084:131;18210:4;18084:131;:::i;:::-;18076:139;;17803:419;;;:::o;18228:::-;18394:4;18432:2;18421:9;18417:18;18409:26;;18481:9;18475:4;18471:20;18467:1;18456:9;18452:17;18445:47;18509:131;18635:4;18509:131;:::i;:::-;18501:139;;18228:419;;;:::o;18653:::-;18819:4;18857:2;18846:9;18842:18;18834:26;;18906:9;18900:4;18896:20;18892:1;18881:9;18877:17;18870:47;18934:131;19060:4;18934:131;:::i;:::-;18926:139;;18653:419;;;:::o;19078:::-;19244:4;19282:2;19271:9;19267:18;19259:26;;19331:9;19325:4;19321:20;19317:1;19306:9;19302:17;19295:47;19359:131;19485:4;19359:131;:::i;:::-;19351:139;;19078:419;;;:::o;19503:222::-;19596:4;19634:2;19623:9;19619:18;19611:26;;19647:71;19715:1;19704:9;19700:17;19691:6;19647:71;:::i;:::-;19503:222;;;;:::o;19731:129::-;19765:6;19792:20;;:::i;:::-;19782:30;;19821:33;19849:4;19841:6;19821:33;:::i;:::-;19731:129;;;:::o;19866:75::-;19899:6;19932:2;19926:9;19916:19;;19866:75;:::o;19947:307::-;20008:4;20098:18;20090:6;20087:30;20084:56;;;20120:18;;:::i;:::-;20084:56;20158:29;20180:6;20158:29;:::i;:::-;20150:37;;20242:4;20236;20232:15;20224:23;;19947:307;;;:::o;20260:98::-;20311:6;20345:5;20339:12;20329:22;;20260:98;;;:::o;20364:99::-;20416:6;20450:5;20444:12;20434:22;;20364:99;;;:::o;20469:168::-;20552:11;20586:6;20581:3;20574:19;20626:4;20621:3;20617:14;20602:29;;20469:168;;;;:::o;20643:169::-;20727:11;20761:6;20756:3;20749:19;20801:4;20796:3;20792:14;20777:29;;20643:169;;;;:::o;20818:148::-;20920:11;20957:3;20942:18;;20818:148;;;;:::o;20972:305::-;21012:3;21031:20;21049:1;21031:20;:::i;:::-;21026:25;;21065:20;21083:1;21065:20;:::i;:::-;21060:25;;21219:1;21151:66;21147:74;21144:1;21141:81;21138:107;;;21225:18;;:::i;:::-;21138:107;21269:1;21266;21262:9;21255:16;;20972:305;;;;:::o;21283:185::-;21323:1;21340:20;21358:1;21340:20;:::i;:::-;21335:25;;21374:20;21392:1;21374:20;:::i;:::-;21369:25;;21413:1;21403:35;;21418:18;;:::i;:::-;21403:35;21460:1;21457;21453:9;21448:14;;21283:185;;;;:::o;21474:348::-;21514:7;21537:20;21555:1;21537:20;:::i;:::-;21532:25;;21571:20;21589:1;21571:20;:::i;:::-;21566:25;;21759:1;21691:66;21687:74;21684:1;21681:81;21676:1;21669:9;21662:17;21658:105;21655:131;;;21766:18;;:::i;:::-;21655:131;21814:1;21811;21807:9;21796:20;;21474:348;;;;:::o;21828:191::-;21868:4;21888:20;21906:1;21888:20;:::i;:::-;21883:25;;21922:20;21940:1;21922:20;:::i;:::-;21917:25;;21961:1;21958;21955:8;21952:34;;;21966:18;;:::i;:::-;21952:34;22011:1;22008;22004:9;21996:17;;21828:191;;;;:::o;22025:96::-;22062:7;22091:24;22109:5;22091:24;:::i;:::-;22080:35;;22025:96;;;:::o;22127:90::-;22161:7;22204:5;22197:13;22190:21;22179:32;;22127:90;;;:::o;22223:149::-;22259:7;22299:66;22292:5;22288:78;22277:89;;22223:149;;;:::o;22378:126::-;22415:7;22455:42;22448:5;22444:54;22433:65;;22378:126;;;:::o;22510:77::-;22547:7;22576:5;22565:16;;22510:77;;;:::o;22593:154::-;22677:6;22672:3;22667;22654:30;22739:1;22730:6;22725:3;22721:16;22714:27;22593:154;;;:::o;22753:307::-;22821:1;22831:113;22845:6;22842:1;22839:13;22831:113;;;22930:1;22925:3;22921:11;22915:18;22911:1;22906:3;22902:11;22895:39;22867:2;22864:1;22860:10;22855:15;;22831:113;;;22962:6;22959:1;22956:13;22953:101;;;23042:1;23033:6;23028:3;23024:16;23017:27;22953:101;22802:258;22753:307;;;:::o;23066:320::-;23110:6;23147:1;23141:4;23137:12;23127:22;;23194:1;23188:4;23184:12;23215:18;23205:81;;23271:4;23263:6;23259:17;23249:27;;23205:81;23333:2;23325:6;23322:14;23302:18;23299:38;23296:84;;;23352:18;;:::i;:::-;23296:84;23117:269;23066:320;;;:::o;23392:281::-;23475:27;23497:4;23475:27;:::i;:::-;23467:6;23463:40;23605:6;23593:10;23590:22;23569:18;23557:10;23554:34;23551:62;23548:88;;;23616:18;;:::i;:::-;23548:88;23656:10;23652:2;23645:22;23435:238;23392:281;;:::o;23679:180::-;23727:77;23724:1;23717:88;23824:4;23821:1;23814:15;23848:4;23845:1;23838:15;23865:180;23913:77;23910:1;23903:88;24010:4;24007:1;24000:15;24034:4;24031:1;24024:15;24051:180;24099:77;24096:1;24089:88;24196:4;24193:1;24186:15;24220:4;24217:1;24210:15;24237:180;24285:77;24282:1;24275:88;24382:4;24379:1;24372:15;24406:4;24403:1;24396:15;24423:117;24532:1;24529;24522:12;24546:117;24655:1;24652;24645:12;24669:117;24778:1;24775;24768:12;24792:117;24901:1;24898;24891:12;24915:102;24956:6;25007:2;25003:7;24998:2;24991:5;24987:14;24983:28;24973:38;;24915:102;;;:::o;25023:232::-;25163:34;25159:1;25151:6;25147:14;25140:58;25232:15;25227:2;25219:6;25215:15;25208:40;25023:232;:::o;25261:214::-;25401:66;25397:1;25389:6;25385:14;25378:90;25261:214;:::o;25481:237::-;25621:34;25617:1;25609:6;25605:14;25598:58;25690:20;25685:2;25677:6;25673:15;25666:45;25481:237;:::o;25724:224::-;25864:34;25860:1;25852:6;25848:14;25841:58;25933:7;25928:2;25920:6;25916:15;25909:32;25724:224;:::o;25954:384::-;26094:66;26090:1;26082:6;26078:14;26071:90;26195:34;26190:2;26182:6;26178:15;26171:59;26264:66;26259:2;26251:6;26247:15;26240:91;25954:384;:::o;26344:223::-;26484:34;26480:1;26472:6;26468:14;26461:58;26553:6;26548:2;26540:6;26536:15;26529:31;26344:223;:::o;26573:175::-;26713:27;26709:1;26701:6;26697:14;26690:51;26573:175;:::o;26754:416::-;26894:66;26890:1;26882:6;26878:14;26871:90;26995:66;26990:2;26982:6;26978:15;26971:91;27096:66;27091:2;27083:6;27079:15;27072:91;26754:416;:::o;27176:228::-;27316:34;27312:1;27304:6;27300:14;27293:58;27385:11;27380:2;27372:6;27368:15;27361:36;27176:228;:::o;27410:214::-;27550:66;27546:1;27538:6;27534:14;27527:90;27410:214;:::o;27630:174::-;27770:26;27766:1;27758:6;27754:14;27747:50;27630:174;:::o;27810:220::-;27950:34;27946:1;27938:6;27934:14;27927:58;28019:3;28014:2;28006:6;28002:15;27995:28;27810:220;:::o;28036:248::-;28176:34;28172:1;28164:6;28160:14;28153:58;28245:31;28240:2;28232:6;28228:15;28221:56;28036:248;:::o;28290:122::-;28363:24;28381:5;28363:24;:::i;:::-;28356:5;28353:35;28343:63;;28402:1;28399;28392:12;28343:63;28290:122;:::o;28418:116::-;28488:21;28503:5;28488:21;:::i;:::-;28481:5;28478:32;28468:60;;28524:1;28521;28514:12;28468:60;28418:116;:::o;28540:120::-;28612:23;28629:5;28612:23;:::i;:::-;28605:5;28602:34;28592:62;;28650:1;28647;28640:12;28592:62;28540:120;:::o;28666:122::-;28739:24;28757:5;28739:24;:::i;:::-;28732:5;28729:35;28719:63;;28778:1;28775;28768:12;28719:63;28666:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2012400","executionCost":"infinite","totalCost":"infinite"},"external":{"TOKEN_IMAGE_URI()":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2946","getApproved(uint256)":"5300","getTokenCounter()":"2482","hasNft(address)":"2950","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","s_hasNft(address)":"2955","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_baseURI()":"infinite","_mintByAddress(address)":"infinite","_mintNft()":"infinite"}},"methodIdentifiers":{"TOKEN_IMAGE_URI()":"5dbe700f","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getTokenCounter()":"6e02007d","hasNft(address)":"4ed7ff63","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","s_hasNft(address)":"f5d18d35","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_IMAGE_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"hasNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_hasNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftPilarofEd.sol\":\"NftPilarofEducation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides a function for encoding some bytes in base64\\nlibrary Base64 {\\n    string internal constant TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n        \\n        // load the table into memory\\n        string memory table = TABLE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n            \\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n            \\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n            \\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n            \\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               dataPtr := add(dataPtr, 3)\\n               \\n               // read 3 bytes\\n               let input := mload(dataPtr)\\n               \\n               // write 4 characters\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(18, input), 0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(12, input), 0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr( 6, input), 0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(        input,  0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n            }\\n            \\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n        \\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x0c8ad17afea99676d4dbab1857f52a7660b67602a79d03abd0a4c742074bbeb3\",\"license\":\"MIT\"},\"contracts/NftPilarofEd.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"base64-sol/base64.sol\\\";\\n\\ncontract NftPilarofEducation is ERC721 {\\n    string public constant TOKEN_IMAGE_URI =\\n        \\\"https://ipfs.io/ipfs/QmUeXV63VvrYXwD65gtEz6WFCJxo62PHJ5pCuifC6qm6uU\\\";\\n    uint256 internal s_tokenCounter;\\n    mapping(address => bool) public s_hasNft;\\n\\n    constructor()\\n        ERC721(\\\"StreamTrivia\\\",\\\"level 1\\\")\\n            \\n        \\n        \\n    {\\n        s_tokenCounter = 0;\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"data:application/json;base64,\\\";\\n    }\\n\\n    function _mintByAddress(address addr) internal {\\n        _safeMint(addr, s_tokenCounter);\\n        s_tokenCounter = s_tokenCounter + 1;\\n        s_hasNft[addr] = true;\\n    }\\n\\n    function _mintNft() internal {\\n        _safeMint(msg.sender, s_tokenCounter);\\n        s_tokenCounter = s_tokenCounter + 1;\\n        s_hasNft[msg.sender] = true;\\n    }\\n\\n    function tokenURI(\\n        uint256 /* tokenId */\\n    ) public view override returns (string memory) {\\n        return\\n            string(\\n                abi.encodePacked(\\n                    _baseURI(),\\n                    Base64.encode(\\n                        bytes(\\n                            abi.encodePacked(\\n                                '{\\\"name\\\":\\\"',\\n                                name(),\\n                                '\\\", \\\"description\\\":\\\"You captured this NFT as part of the educational Stream!\\\", ',\\n                                '\\\"attributes\\\": [{\\\"trait_type\\\": \\\"skills\\\", \\\"value\\\": 100}], \\\"image\\\":\\\"',\\n                                TOKEN_IMAGE_URI,\\n                                '\\\"}'\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n\\n    function hasNft(address addr) public view returns (bool) {\\n        return s_hasNft[addr];\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\",\"keccak256\":\"0xefd34f1ed3644ad58496aab2c04dc5ea822aa9c6794a2d0b4e05bd7f3f9a3717\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":25,"contract":"contracts/NftPilarofEd.sol:NftPilarofEducation","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":27,"contract":"contracts/NftPilarofEd.sol:NftPilarofEducation","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":31,"contract":"contracts/NftPilarofEd.sol:NftPilarofEducation","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":35,"contract":"contracts/NftPilarofEd.sol:NftPilarofEducation","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":39,"contract":"contracts/NftPilarofEd.sol:NftPilarofEducation","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":45,"contract":"contracts/NftPilarofEd.sol:NftPilarofEducation","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2594,"contract":"contracts/NftPilarofEd.sol:NftPilarofEducation","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"},{"astId":2598,"contract":"contracts/NftPilarofEd.sol:NftPilarofEducation","label":"s_hasNft","offset":0,"slot":"7","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/streamTriviaDao.sol":{"StreamDao":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/streamTriviaDao.sol\":\"StreamDao\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/streamTriviaDao.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\n\\ninterface StreamDao {\\n        function balanceOf(address, uint256) external view returns (uint256);\\n    }\\n\\ncontract StreamTriviaDao {\\n\\n    address public owner;\\n    uint256 nextProposal;\\n    uint256[] public validTokens;\\n    StreamDao daoContract;\\n\\n    constructor(){\\n        owner = msg.sender;\\n        nextProposal = 1;\\n        daoContract = StreamDao(0xa7C03faa9504E5C3453F550339b2660C8b835D70);\\n        validTokens = [0,1];\\n    }\\n\\n    struct proposal{\\n        uint256 id;\\n        bool exists;\\n        string description;\\n        uint deadline;\\n        uint256 votesUp;\\n        uint256 votesDown;\\n        address[] canVote;\\n        uint256 maxVotes;\\n        mapping(address => bool) voteStatus;\\n        bool countConducted;\\n        bool passed;\\n    }\\n\\n    mapping(uint256 => proposal) public Proposals;\\n\\n    event proposalCreated(\\n        uint256 id,\\n        string description,\\n        uint256 maxVotes,\\n        address proposer\\n    );\\n\\n    event newVote(\\n        uint256 votesUp,\\n        uint256 votesDown,\\n        address voter,\\n        uint256 proposal,\\n        bool votedFor\\n    );\\n\\n    event proposalCount(\\n        uint256 id,\\n        bool passed\\n    );\\n\\n\\n    function checkProposalEligibility(address _proposalist) private view returns (\\n        bool\\n    ){\\n        for(uint i = 0; i < validTokens.length; i++){\\n            if(daoContract.balanceOf(_proposalist, validTokens[i]) >= 1){\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function checkVoteEligibility(uint256 _id, address _voter) private view returns (\\n        bool\\n    ){\\n        for (uint256 i = 0; i < Proposals[_id].canVote.length; i++) {\\n            if (Proposals[_id].canVote[i] == _voter) {\\n            return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n\\n    function createProposal(string memory _description, address[] memory _canVote) public {\\n        require(checkProposalEligibility(msg.sender), \\\"Only NFT holders can put forth Proposals\\\");\\n\\n        proposal storage newProposal = Proposals[nextProposal];\\n        newProposal.id = nextProposal;\\n        newProposal.exists = true;\\n        newProposal.description = _description;\\n        newProposal.deadline = block.number + 100;\\n        newProposal.canVote = _canVote;\\n        newProposal.maxVotes = _canVote.length;\\n\\n        emit proposalCreated(nextProposal, _description, _canVote.length, msg.sender);\\n        nextProposal++;\\n    }\\n\\n\\n    function voteOnProposal(uint256 _id, bool _vote) public {\\n        require(Proposals[_id].exists, \\\"This Proposal does not exist\\\");\\n        require(checkVoteEligibility(_id, msg.sender), \\\"You can not vote on this Proposal\\\");\\n        require(!Proposals[_id].voteStatus[msg.sender], \\\"You have already voted on this Proposal\\\");\\n        require(block.number <= Proposals[_id].deadline, \\\"The deadline has passed for this Proposal\\\");\\n\\n        proposal storage p = Proposals[_id];\\n\\n        if(_vote) {\\n            p.votesUp++;\\n        }else{\\n            p.votesDown++;\\n        }\\n\\n        p.voteStatus[msg.sender] = true;\\n\\n        emit newVote(p.votesUp, p.votesDown, msg.sender, _id, _vote);\\n        \\n    }\\n\\n    function countVotes(uint256 _id) public {\\n        require(msg.sender == owner, \\\"Only Owner Can Count Votes\\\");\\n        require(Proposals[_id].exists, \\\"This Proposal does not exist\\\");\\n        require(block.number > Proposals[_id].deadline, \\\"Voting has not concluded\\\");\\n        require(!Proposals[_id].countConducted, \\\"Count already conducted\\\");\\n\\n        proposal storage p = Proposals[_id];\\n        \\n        if(Proposals[_id].votesDown < Proposals[_id].votesUp){\\n            p.passed = true;            \\n        }\\n\\n        p.countConducted = true;\\n\\n        emit proposalCount(_id, p.passed);\\n    }\\n\\n\\n    function addTokenId(uint256 _tokenId) public {\\n        require(msg.sender == owner, \\\"Only Owner Can Add Tokens\\\");\\n\\n        validTokens.push(_tokenId);\\n    }\\n    \\n}\",\"keccak256\":\"0x10f3a9135f69bac39485bb7686a5491e7fd8be63fdec36e42dd949eb81a460c2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"StreamTriviaDao":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"votesUp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"votesDown","type":"uint256"},{"indexed":false,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposal","type":"uint256"},{"indexed":false,"internalType":"bool","name":"votedFor","type":"bool"}],"name":"newVote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"bool","name":"passed","type":"bool"}],"name":"proposalCount","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"uint256","name":"maxVotes","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"}],"name":"proposalCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"Proposals","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"votesUp","type":"uint256"},{"internalType":"uint256","name":"votesDown","type":"uint256"},{"internalType":"uint256","name":"maxVotes","type":"uint256"},{"internalType":"bool","name":"countConducted","type":"bool"},{"internalType":"bool","name":"passed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"addTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"countVotes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_description","type":"string"},{"internalType":"address[]","name":"_canVote","type":"address[]"}],"name":"createProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"validTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"bool","name":"_vote","type":"bool"}],"name":"voteOnProposal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2767":{"entryPoint":null,"id":2767,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001808190555073a7c03faa9504e5c3453f550339b2660c8b835d70600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600060ff168152602001600160ff168152506002906002620000dd929190620000e4565b506200015a565b82805482825590600052602060002090810192821562000128579160200282015b8281111562000127578251829060ff1690559160200191906001019062000105565b5b5090506200013791906200013b565b5090565b5b80821115620001565760008160009055506001016200013c565b5090565b611969806200016a6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063be8bb7ba1161005b578063be8bb7ba146100d8578063d1dbe7d8146100f4578063e9d3d16a1461012c578063fd0d101f1461015c5761007d565b80631614665c146100825780631840f0ca1461009e5780638da5cb5b146100ba575b600080fd5b61009c60048036038101906100979190610f19565b610178565b005b6100b860048036038101906100b39190610ebf565b61041b565b005b6100c261069c565b6040516100cf91906110fa565b60405180910390f35b6100f260048036038101906100ed9190610e47565b6106c0565b005b61010e60048036038101906101099190610ebf565b6107f7565b604051610123999897969594939291906112a2565b60405180910390f35b61014660048036038101906101419190610ebf565b6108f4565b604051610153919061125e565b60405180910390f35b61017660048036038101906101719190610ebf565b610918565b005b6004600083815260200190815260200160002060010160009054906101000a900460ff166101db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d29061117e565b60405180910390fd5b6101e582336109d2565b610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b9061121e565b60405180910390fd5b6004600083815260200190815260200160002060080160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc9061113e565b60405180910390fd5b600460008381526020019081526020016000206003015443111561031e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103159061119e565b60405180910390fd5b6000600460008481526020019081526020016000209050811561035a57806004016000815480929190610350906115b6565b9190505550610375565b80600501600081548092919061036f906115b6565b91905055505b60018160080160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f97a3ed91f0b116dc155f238ac92aa5b825720a7bb096f53156e05d9c8ab6a30a8160040154826005015433868660405161040e959493929190611382565b60405180910390a1505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a0906111fe565b60405180910390fd5b6004600082815260200190815260200160002060010160009054906101000a900460ff1661050c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105039061117e565b60405180910390fd5b60046000828152602001908152602001600020600301544311610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055b906111de565b60405180910390fd5b6004600082815260200190815260200160002060090160009054906101000a900460ff16156105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf906111be565b60405180910390fd5b60006004600083815260200190815260200160002090506004600083815260200190815260200160002060040154600460008481526020019081526020016000206005015410156106315760018160090160016101000a81548160ff0219169083151502179055505b60018160090160006101000a81548160ff0219169083151502179055507f4556fcf667ee704924eea359363d28f06708b744ad113340982b07ef9919fb91828260090160019054906101000a900460ff16604051610690929190611279565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106c933610aaa565b610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff9061123e565b60405180910390fd5b60006004600060015481526020019081526020016000209050600154816000018190555060018160010160006101000a81548160ff02191690831515021790555082816002019080519060200190610761929190610bb8565b5060644361076f9190611473565b81600301819055508181600601908051906020019061078f929190610c3e565b50815181600701819055507f3ec21697eb8018b62928e5f290d2bccf3af51e8b6cdf71fceab712977647bba9600154848451336040516107d29493929190611336565b60405180910390a1600160008154809291906107ed906115b6565b9190505550505050565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900460ff169080600201805461083390611553565b80601f016020809104026020016040519081016040528092919081815260200182805461085f90611553565b80156108ac5780601f10610881576101008083540402835291602001916108ac565b820191906000526020600020905b81548152906001019060200180831161088f57829003601f168201915b5050505050908060030154908060040154908060050154908060070154908060090160009054906101000a900460ff16908060090160019054906101000a900460ff16905089565b6002818154811061090457600080fd5b906000526020600020016000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d9061115e565b60405180910390fd5b600281908060018154018082558091505060019003906000526020600020016000909190919091505550565b600080600090505b6004600085815260200190815260200160002060060180549050811015610a9e578273ffffffffffffffffffffffffffffffffffffffff16600460008681526020019081526020016000206006018281548110610a3a57610a3961165d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a8b576001915050610aa4565b8080610a96906115b6565b9150506109da565b50600090505b92915050565b600080600090505b600280549050811015610bad576001600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e8560028581548110610b1357610b1261165d565b5b90600052602060002001546040518363ffffffff1660e01b8152600401610b3b929190611115565b60206040518083038186803b158015610b5357600080fd5b505afa158015610b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8b9190610eec565b10610b9a576001915050610bb3565b8080610ba5906115b6565b915050610ab2565b50600090505b919050565b828054610bc490611553565b90600052602060002090601f016020900481019282610be65760008555610c2d565b82601f10610bff57805160ff1916838001178555610c2d565b82800160010185558215610c2d579182015b82811115610c2c578251825591602001919060010190610c11565b5b509050610c3a9190610cc8565b5090565b828054828255906000526020600020908101928215610cb7579160200282015b82811115610cb65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c5e565b5b509050610cc49190610cc8565b5090565b5b80821115610ce1576000816000905550600101610cc9565b5090565b6000610cf8610cf3846113fa565b6113d5565b90508083825260208201905082856020860282011115610d1b57610d1a6116c0565b5b60005b85811015610d4b5781610d318882610d97565b845260208401935060208301925050600181019050610d1e565b5050509392505050565b6000610d68610d6384611426565b6113d5565b905082815260208101848484011115610d8457610d836116c5565b5b610d8f848285611511565b509392505050565b600081359050610da6816118ee565b92915050565b600082601f830112610dc157610dc06116bb565b5b8135610dd1848260208601610ce5565b91505092915050565b600081359050610de981611905565b92915050565b600082601f830112610e0457610e036116bb565b5b8135610e14848260208601610d55565b91505092915050565b600081359050610e2c8161191c565b92915050565b600081519050610e418161191c565b92915050565b60008060408385031215610e5e57610e5d6116cf565b5b600083013567ffffffffffffffff811115610e7c57610e7b6116ca565b5b610e8885828601610def565b925050602083013567ffffffffffffffff811115610ea957610ea86116ca565b5b610eb585828601610dac565b9150509250929050565b600060208284031215610ed557610ed46116cf565b5b6000610ee384828501610e1d565b91505092915050565b600060208284031215610f0257610f016116cf565b5b6000610f1084828501610e32565b91505092915050565b60008060408385031215610f3057610f2f6116cf565b5b6000610f3e85828601610e1d565b9250506020610f4f85828601610dda565b9150509250929050565b610f62816114c9565b82525050565b610f71816114db565b82525050565b6000610f8282611457565b610f8c8185611462565b9350610f9c818560208601611520565b610fa5816116d4565b840191505092915050565b6000610fbd602783611462565b9150610fc8826116e5565b604082019050919050565b6000610fe0601983611462565b9150610feb82611734565b602082019050919050565b6000611003601c83611462565b915061100e8261175d565b602082019050919050565b6000611026602983611462565b915061103182611786565b604082019050919050565b6000611049601783611462565b9150611054826117d5565b602082019050919050565b600061106c601883611462565b9150611077826117fe565b602082019050919050565b600061108f601a83611462565b915061109a82611827565b602082019050919050565b60006110b2602183611462565b91506110bd82611850565b604082019050919050565b60006110d5602883611462565b91506110e08261189f565b604082019050919050565b6110f481611507565b82525050565b600060208201905061110f6000830184610f59565b92915050565b600060408201905061112a6000830185610f59565b61113760208301846110eb565b9392505050565b6000602082019050818103600083015261115781610fb0565b9050919050565b6000602082019050818103600083015261117781610fd3565b9050919050565b6000602082019050818103600083015261119781610ff6565b9050919050565b600060208201905081810360008301526111b781611019565b9050919050565b600060208201905081810360008301526111d78161103c565b9050919050565b600060208201905081810360008301526111f78161105f565b9050919050565b6000602082019050818103600083015261121781611082565b9050919050565b60006020820190508181036000830152611237816110a5565b9050919050565b60006020820190508181036000830152611257816110c8565b9050919050565b600060208201905061127360008301846110eb565b92915050565b600060408201905061128e60008301856110eb565b61129b6020830184610f68565b9392505050565b6000610120820190506112b8600083018c6110eb565b6112c5602083018b610f68565b81810360408301526112d7818a610f77565b90506112e660608301896110eb565b6112f360808301886110eb565b61130060a08301876110eb565b61130d60c08301866110eb565b61131a60e0830185610f68565b611328610100830184610f68565b9a9950505050505050505050565b600060808201905061134b60008301876110eb565b818103602083015261135d8186610f77565b905061136c60408301856110eb565b6113796060830184610f59565b95945050505050565b600060a08201905061139760008301886110eb565b6113a460208301876110eb565b6113b16040830186610f59565b6113be60608301856110eb565b6113cb6080830184610f68565b9695505050505050565b60006113df6113f0565b90506113eb8282611585565b919050565b6000604051905090565b600067ffffffffffffffff8211156114155761141461168c565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156114415761144061168c565b5b61144a826116d4565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061147e82611507565b915061148983611507565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114be576114bd6115ff565b5b828201905092915050565b60006114d4826114e7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561153e578082015181840152602081019050611523565b8381111561154d576000848401525b50505050565b6000600282049050600182168061156b57607f821691505b6020821081141561157f5761157e61162e565b5b50919050565b61158e826116d4565b810181811067ffffffffffffffff821117156115ad576115ac61168c565b5b80604052505050565b60006115c182611507565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115f4576115f36115ff565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f596f75206861766520616c726561647920766f746564206f6e2074686973205060008201527f726f706f73616c00000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79204f776e65722043616e2041646420546f6b656e7300000000000000600082015250565b7f546869732050726f706f73616c20646f6573206e6f7420657869737400000000600082015250565b7f54686520646561646c696e65206861732070617373656420666f72207468697360008201527f2050726f706f73616c0000000000000000000000000000000000000000000000602082015250565b7f436f756e7420616c726561647920636f6e647563746564000000000000000000600082015250565b7f566f74696e6720686173206e6f7420636f6e636c756465640000000000000000600082015250565b7f4f6e6c79204f776e65722043616e20436f756e7420566f746573000000000000600082015250565b7f596f752063616e206e6f7420766f7465206f6e20746869732050726f706f736160008201527f6c00000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79204e465420686f6c646572732063616e2070757420666f727468205060008201527f726f706f73616c73000000000000000000000000000000000000000000000000602082015250565b6118f7816114c9565b811461190257600080fd5b50565b61190e816114db565b811461191957600080fd5b50565b61192581611507565b811461193057600080fd5b5056fea264697066735822122034c4aaf72a811028d7d4614169f45cdb99a3ea3a32bb07da003630d9b6356b0d64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH20 0xA7C03FAA9504E5C3453F550339B2660C8B835D70 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x2 SWAP1 PUSH1 0x2 PUSH3 0xDD SWAP3 SWAP2 SWAP1 PUSH3 0xE4 JUMP JUMPDEST POP PUSH3 0x15A JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x128 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x127 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x105 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x137 SWAP2 SWAP1 PUSH3 0x13B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x156 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x13C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1969 DUP1 PUSH3 0x16A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBE8BB7BA GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBE8BB7BA EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xD1DBE7D8 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xE9D3D16A EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xFD0D101F EQ PUSH2 0x15C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x1614665C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x1840F0CA EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x178 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2 SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E5 DUP3 CALLER PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0x224 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD NUMBER GT ISZERO PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 ISZERO PUSH2 0x35A JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x350 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x375 JUMP JUMPDEST DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x36F SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x8 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x97A3ED91F0B116DC155F238AC92AA5B825720A7BB096F53156E05D9C8AB6A30A DUP2 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x40E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x503 SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD NUMBER GT PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55B SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x1 DUP2 PUSH1 0x9 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x4556FCF667EE704924EEA359363D28F06708B744AD113340982B07EF9919FB91 DUP3 DUP3 PUSH1 0x9 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x690 SWAP3 SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6C9 CALLER PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 SLOAD DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x761 SWAP3 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST POP PUSH1 0x64 NUMBER PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x78F SWAP3 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST POP DUP2 MLOAD DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x3EC21697EB8018B62928E5F290D2BCCF3AF51E8B6CDF71FCEAB712977647BBA9 PUSH1 0x1 SLOAD DUP5 DUP5 MLOAD CALLER PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x833 SWAP1 PUSH2 0x1553 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x85F SWAP1 PUSH2 0x1553 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x881 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA9E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA3A JUMPI PUSH2 0xA39 PUSH2 0x165D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA8B JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xAA4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xA96 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9DA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBAD JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E DUP6 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xB13 JUMPI PUSH2 0xB12 PUSH2 0x165D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3B SWAP3 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST LT PUSH2 0xB9A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xBB3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xBA5 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB2 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xBC4 SWAP1 PUSH2 0x1553 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xBE6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xC2D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xBFF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xC2D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xC2D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC2C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xCB7 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xCB6 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC5E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xCC4 SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xCE1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xCC9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF8 PUSH2 0xCF3 DUP5 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1A PUSH2 0x16C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD4B JUMPI DUP2 PUSH2 0xD31 DUP9 DUP3 PUSH2 0xD97 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD1E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 PUSH2 0xD63 DUP5 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0x16C5 JUMP JUMPDEST JUMPDEST PUSH2 0xD8F DUP5 DUP3 DUP6 PUSH2 0x1511 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA6 DUP2 PUSH2 0x18EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0x16BB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDD1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE9 DUP2 PUSH2 0x1905 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE04 JUMPI PUSH2 0xE03 PUSH2 0x16BB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE14 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2C DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE41 DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7B PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH2 0xE88 DUP6 DUP3 DUP7 ADD PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0xEA8 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH2 0xEB5 DUP6 DUP3 DUP7 ADD PUSH2 0xDAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED5 JUMPI PUSH2 0xED4 PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE3 DUP5 DUP3 DUP6 ADD PUSH2 0xE1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF02 JUMPI PUSH2 0xF01 PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF10 DUP5 DUP3 DUP6 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF30 JUMPI PUSH2 0xF2F PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3E DUP6 DUP3 DUP7 ADD PUSH2 0xE1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF4F DUP6 DUP3 DUP7 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF62 DUP2 PUSH2 0x14C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF71 DUP2 PUSH2 0x14DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF82 DUP3 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0xF8C DUP2 DUP6 PUSH2 0x1462 JUMP JUMPDEST SWAP4 POP PUSH2 0xF9C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1520 JUMP JUMPDEST PUSH2 0xFA5 DUP2 PUSH2 0x16D4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBD PUSH1 0x27 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC8 DUP3 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE0 PUSH1 0x19 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0xFEB DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1003 PUSH1 0x1C DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x100E DUP3 PUSH2 0x175D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1026 PUSH1 0x29 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x1031 DUP3 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1049 PUSH1 0x17 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x1054 DUP3 PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106C PUSH1 0x18 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x1077 DUP3 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108F PUSH1 0x1A DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x109A DUP3 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B2 PUSH1 0x21 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x10BD DUP3 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D5 PUSH1 0x28 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E0 DUP3 PUSH2 0x189F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F4 DUP2 PUSH2 0x1507 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x112A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x1137 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1157 DUP2 PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1177 DUP2 PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1197 DUP2 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B7 DUP2 PUSH2 0x1019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D7 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F7 DUP2 PUSH2 0x105F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1217 DUP2 PUSH2 0x1082 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1237 DUP2 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1257 DUP2 PUSH2 0x10C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1273 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x128E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x129B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF68 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x12B8 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x12C5 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0xF68 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x12D7 DUP2 DUP11 PUSH2 0xF77 JUMP JUMPDEST SWAP1 POP PUSH2 0x12E6 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x12F3 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x1300 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x130D PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x131A PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0xF68 JUMP JUMPDEST PUSH2 0x1328 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0xF68 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x134B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x10EB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x135D DUP2 DUP7 PUSH2 0xF77 JUMP JUMPDEST SWAP1 POP PUSH2 0x136C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x1379 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xF59 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1397 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x13A4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x13B1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x13BE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x13CB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF68 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DF PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x13EB DUP3 DUP3 PUSH2 0x1585 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1415 JUMPI PUSH2 0x1414 PUSH2 0x168C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1441 JUMPI PUSH2 0x1440 PUSH2 0x168C JUMP JUMPDEST JUMPDEST PUSH2 0x144A DUP3 PUSH2 0x16D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147E DUP3 PUSH2 0x1507 JUMP JUMPDEST SWAP2 POP PUSH2 0x1489 DUP4 PUSH2 0x1507 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x14BE JUMPI PUSH2 0x14BD PUSH2 0x15FF JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D4 DUP3 PUSH2 0x14E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1523 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x154D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x156B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x157F JUMPI PUSH2 0x157E PUSH2 0x162E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158E DUP3 PUSH2 0x16D4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15AD JUMPI PUSH2 0x15AC PUSH2 0x168C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C1 DUP3 PUSH2 0x1507 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x15F3 PUSH2 0x15FF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C726561647920766F746564206F6E20746869732050 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F706F73616C00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79204F776E65722043616E2041646420546F6B656E7300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546869732050726F706F73616C20646F6573206E6F7420657869737400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54686520646561646C696E65206861732070617373656420666F722074686973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2050726F706F73616C0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F756E7420616C726561647920636F6E647563746564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x566F74696E6720686173206E6F7420636F6E636C756465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79204F776E65722043616E20436F756E7420566F746573000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E206E6F7420766F7465206F6E20746869732050726F706F7361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79204E465420686F6C646572732063616E2070757420666F7274682050 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F706F73616C73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x18F7 DUP2 PUSH2 0x14C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x190E DUP2 PUSH2 0x14DB JUMP JUMPDEST DUP2 EQ PUSH2 0x1919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1925 DUP2 PUSH2 0x1507 JUMP JUMPDEST DUP2 EQ PUSH2 0x1930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xC4 0xAA 0xF7 0x2A DUP2 LT 0x28 0xD7 0xD4 PUSH2 0x4169 DELEGATECALL 0x5C 0xDB SWAP10 LOG3 0xEA GASPRICE ORIGIN 0xBB SMOD 0xDA STOP CALLDATASIZE ADDRESS 0xD9 0xB6 CALLDATALOAD PUSH12 0xD64736F6C63430008070033 ","sourceMap":"166:3790:12:-:0;;;312:180;;;;;;;;;;343:10;335:5;;:18;;;;;;;;;;;;;;;;;;378:1;363:12;:16;;;;413:42;389:11;;:67;;;;;;;;;;;;;;;;;;466:19;;;;;;;;481:1;466:19;;;;;;483:1;466:19;;;;;:11;:19;;;;;;;:::i;:::-;;166:3790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Proposals_2798":{"entryPoint":2039,"id":2798,"parameterSlots":0,"returnSlots":0},"@addTokenId_3165":{"entryPoint":2328,"id":3165,"parameterSlots":1,"returnSlots":0},"@checkProposalEligibility_2862":{"entryPoint":2730,"id":2862,"parameterSlots":1,"returnSlots":1},"@checkVoteEligibility_2902":{"entryPoint":2514,"id":2902,"parameterSlots":2,"returnSlots":1},"@countVotes_3145":{"entryPoint":1051,"id":3145,"parameterSlots":1,"returnSlots":0},"@createProposal_2978":{"entryPoint":1728,"id":2978,"parameterSlots":2,"returnSlots":0},"@owner_2734":{"entryPoint":1692,"id":2734,"parameterSlots":0,"returnSlots":0},"@validTokens_2739":{"entryPoint":2292,"id":2739,"parameterSlots":0,"returnSlots":0},"@voteOnProposal_3067":{"entryPoint":376,"id":3067,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":3301,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":3413,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3479,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":3500,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":3546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3634,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_array$_t_address_$dyn_memory_ptr":{"entryPoint":3655,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":3775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3820,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bool":{"entryPoint":3865,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3929,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3944,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3959,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2_to_t_string_memory_ptr_fromStack":{"entryPoint":4016,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc_to_t_string_memory_ptr_fromStack":{"entryPoint":4051,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c_to_t_string_memory_ptr_fromStack":{"entryPoint":4086,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669_to_t_string_memory_ptr_fromStack":{"entryPoint":4121,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae_to_t_string_memory_ptr_fromStack":{"entryPoint":4156,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2_to_t_string_memory_ptr_fromStack":{"entryPoint":4191,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7_to_t_string_memory_ptr_fromStack":{"entryPoint":4226,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da_to_t_string_memory_ptr_fromStack":{"entryPoint":4261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383_to_t_string_memory_ptr_fromStack":{"entryPoint":4296,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4331,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4346,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":4373,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4414,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4446,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4510,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4542,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4574,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4606,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4638,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4670,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed":{"entryPoint":4729,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":4770,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_address__to_t_uint256_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed":{"entryPoint":4918,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":4994,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":5077,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5104,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5114,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":5158,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5207,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5218,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5235,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5321,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5339,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5351,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5383,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":5393,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5408,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5459,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5509,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":5558,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5631,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5678,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5725,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5772,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5819,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5824,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5829,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5834,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5839,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5844,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2":{"entryPoint":5861,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc":{"entryPoint":5940,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c":{"entryPoint":5981,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669":{"entryPoint":6022,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae":{"entryPoint":6101,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2":{"entryPoint":6142,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7":{"entryPoint":6183,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da":{"entryPoint":6224,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383":{"entryPoint":6303,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6382,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6405,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6428,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22889:14","statements":[{"body":{"nodeType":"YulBlock","src":"126:620:14","statements":[{"nodeType":"YulAssignment","src":"136:90:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:14"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:14"},"nodeType":"YulFunctionCall","src":"161:64:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:14"},"nodeType":"YulFunctionCall","src":"145:81:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:14"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:14","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:14","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:14"},"nodeType":"YulFunctionCall","src":"261:21:14"},"nodeType":"YulExpressionStatement","src":"261:21:14"},{"nodeType":"YulAssignment","src":"291:23:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:14"},"nodeType":"YulFunctionCall","src":"298:16:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:14","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:103:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"404:77:14"},"nodeType":"YulFunctionCall","src":"404:79:14"},"nodeType":"YulExpressionStatement","src":"404:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:14"},"nodeType":"YulFunctionCall","src":"365:17:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:14"},"nodeType":"YulFunctionCall","src":"356:27:14"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:14"},"nodeType":"YulFunctionCall","src":"353:36:14"},"nodeType":"YulIf","src":"350:143:14"},{"body":{"nodeType":"YulBlock","src":"562:178:14","statements":[{"nodeType":"YulVariableDeclaration","src":"577:21:14","value":{"name":"src","nodeType":"YulIdentifier","src":"595:3:14"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"581:10:14","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:14"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"645:10:14"},{"name":"end","nodeType":"YulIdentifier","src":"657:3:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"624:20:14"},"nodeType":"YulFunctionCall","src":"624:37:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"612:6:14"},"nodeType":"YulFunctionCall","src":"612:50:14"},"nodeType":"YulExpressionStatement","src":"612:50:14"},{"nodeType":"YulAssignment","src":"675:21:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"686:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"691:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:14"},"nodeType":"YulFunctionCall","src":"682:14:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"675:3:14"}]},{"nodeType":"YulAssignment","src":"709:21:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"720:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"725:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:14"},"nodeType":"YulFunctionCall","src":"716:14:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"709:3:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"524:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"527:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"521:2:14"},"nodeType":"YulFunctionCall","src":"521:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"535:18:14","statements":[{"nodeType":"YulAssignment","src":"537:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"546:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"549:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"542:3:14"},"nodeType":"YulFunctionCall","src":"542:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"537:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"506:14:14","statements":[{"nodeType":"YulVariableDeclaration","src":"508:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"517:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"512:1:14","type":""}]}]},"src":"502:238:14"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:14","type":""}],"src":"24:722:14"},{"body":{"nodeType":"YulBlock","src":"836:328:14","statements":[{"nodeType":"YulAssignment","src":"846:75:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"913:6:14"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"871:41:14"},"nodeType":"YulFunctionCall","src":"871:49:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"855:15:14"},"nodeType":"YulFunctionCall","src":"855:66:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"846:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"937:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"930:6:14"},"nodeType":"YulFunctionCall","src":"930:21:14"},"nodeType":"YulExpressionStatement","src":"930:21:14"},{"nodeType":"YulVariableDeclaration","src":"960:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"975:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"982:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"971:3:14"},"nodeType":"YulFunctionCall","src":"971:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"964:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1025:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"1027:77:14"},"nodeType":"YulFunctionCall","src":"1027:79:14"},"nodeType":"YulExpressionStatement","src":"1027:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1006:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1011:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1002:3:14"},"nodeType":"YulFunctionCall","src":"1002:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"1020:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"999:2:14"},"nodeType":"YulFunctionCall","src":"999:25:14"},"nodeType":"YulIf","src":"996:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1141:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"1146:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1151:6:14"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"1117:23:14"},"nodeType":"YulFunctionCall","src":"1117:41:14"},"nodeType":"YulExpressionStatement","src":"1117:41:14"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"809:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"814:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"822:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"830:5:14","type":""}],"src":"752:412:14"},{"body":{"nodeType":"YulBlock","src":"1222:87:14","statements":[{"nodeType":"YulAssignment","src":"1232:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1254:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1241:12:14"},"nodeType":"YulFunctionCall","src":"1241:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1232:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1297:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1270:26:14"},"nodeType":"YulFunctionCall","src":"1270:33:14"},"nodeType":"YulExpressionStatement","src":"1270:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1200:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1208:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1216:5:14","type":""}],"src":"1170:139:14"},{"body":{"nodeType":"YulBlock","src":"1409:293:14","statements":[{"body":{"nodeType":"YulBlock","src":"1458:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1460:77:14"},"nodeType":"YulFunctionCall","src":"1460:79:14"},"nodeType":"YulExpressionStatement","src":"1460:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1437:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1445:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1433:3:14"},"nodeType":"YulFunctionCall","src":"1433:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"1452:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1429:3:14"},"nodeType":"YulFunctionCall","src":"1429:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1422:6:14"},"nodeType":"YulFunctionCall","src":"1422:35:14"},"nodeType":"YulIf","src":"1419:122:14"},{"nodeType":"YulVariableDeclaration","src":"1550:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1577:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1564:12:14"},"nodeType":"YulFunctionCall","src":"1564:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1554:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1593:103:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1669:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1677:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1665:3:14"},"nodeType":"YulFunctionCall","src":"1665:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"1684:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"1692:3:14"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1602:62:14"},"nodeType":"YulFunctionCall","src":"1602:94:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1593:5:14"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1387:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1395:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1403:5:14","type":""}],"src":"1332:370:14"},{"body":{"nodeType":"YulBlock","src":"1757:84:14","statements":[{"nodeType":"YulAssignment","src":"1767:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1789:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1776:12:14"},"nodeType":"YulFunctionCall","src":"1776:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1767:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1829:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"1805:23:14"},"nodeType":"YulFunctionCall","src":"1805:30:14"},"nodeType":"YulExpressionStatement","src":"1805:30:14"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1735:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1743:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:14","type":""}],"src":"1708:133:14"},{"body":{"nodeType":"YulBlock","src":"1923:278:14","statements":[{"body":{"nodeType":"YulBlock","src":"1972:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1974:77:14"},"nodeType":"YulFunctionCall","src":"1974:79:14"},"nodeType":"YulExpressionStatement","src":"1974:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1951:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1959:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:14"},"nodeType":"YulFunctionCall","src":"1947:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"1966:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1943:3:14"},"nodeType":"YulFunctionCall","src":"1943:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1936:6:14"},"nodeType":"YulFunctionCall","src":"1936:35:14"},"nodeType":"YulIf","src":"1933:122:14"},{"nodeType":"YulVariableDeclaration","src":"2064:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2091:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2078:12:14"},"nodeType":"YulFunctionCall","src":"2078:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2068:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2107:88:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2168:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2176:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:14"},"nodeType":"YulFunctionCall","src":"2164:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"2183:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"2191:3:14"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2116:47:14"},"nodeType":"YulFunctionCall","src":"2116:79:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2107:5:14"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1901:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1909:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1917:5:14","type":""}],"src":"1861:340:14"},{"body":{"nodeType":"YulBlock","src":"2259:87:14","statements":[{"nodeType":"YulAssignment","src":"2269:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2291:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2278:12:14"},"nodeType":"YulFunctionCall","src":"2278:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2269:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2334:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2307:26:14"},"nodeType":"YulFunctionCall","src":"2307:33:14"},"nodeType":"YulExpressionStatement","src":"2307:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2237:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2245:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2253:5:14","type":""}],"src":"2207:139:14"},{"body":{"nodeType":"YulBlock","src":"2415:80:14","statements":[{"nodeType":"YulAssignment","src":"2425:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2440:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2434:5:14"},"nodeType":"YulFunctionCall","src":"2434:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2425:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2483:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2456:26:14"},"nodeType":"YulFunctionCall","src":"2456:33:14"},"nodeType":"YulExpressionStatement","src":"2456:33:14"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2393:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2401:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2409:5:14","type":""}],"src":"2352:143:14"},{"body":{"nodeType":"YulBlock","src":"2619:746:14","statements":[{"body":{"nodeType":"YulBlock","src":"2665:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2667:77:14"},"nodeType":"YulFunctionCall","src":"2667:79:14"},"nodeType":"YulExpressionStatement","src":"2667:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2640:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2649:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2636:3:14"},"nodeType":"YulFunctionCall","src":"2636:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2661:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2632:3:14"},"nodeType":"YulFunctionCall","src":"2632:32:14"},"nodeType":"YulIf","src":"2629:119:14"},{"nodeType":"YulBlock","src":"2758:287:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2773:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2804:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2815:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2800:3:14"},"nodeType":"YulFunctionCall","src":"2800:17:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2787:12:14"},"nodeType":"YulFunctionCall","src":"2787:31:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2777:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2865:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2867:77:14"},"nodeType":"YulFunctionCall","src":"2867:79:14"},"nodeType":"YulExpressionStatement","src":"2867:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2837:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2845:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2834:2:14"},"nodeType":"YulFunctionCall","src":"2834:30:14"},"nodeType":"YulIf","src":"2831:117:14"},{"nodeType":"YulAssignment","src":"2962:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3007:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3018:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:14"},"nodeType":"YulFunctionCall","src":"3003:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3027:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2972:30:14"},"nodeType":"YulFunctionCall","src":"2972:63:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2962:6:14"}]}]},{"nodeType":"YulBlock","src":"3055:303:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3070:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3101:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3112:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3097:3:14"},"nodeType":"YulFunctionCall","src":"3097:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3084:12:14"},"nodeType":"YulFunctionCall","src":"3084:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3074:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3163:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3165:77:14"},"nodeType":"YulFunctionCall","src":"3165:79:14"},"nodeType":"YulExpressionStatement","src":"3165:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3135:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3143:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3132:2:14"},"nodeType":"YulFunctionCall","src":"3132:30:14"},"nodeType":"YulIf","src":"3129:117:14"},{"nodeType":"YulAssignment","src":"3260:88:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3331:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3316:3:14"},"nodeType":"YulFunctionCall","src":"3316:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3340:7:14"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3270:45:14"},"nodeType":"YulFunctionCall","src":"3270:78:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3260:6:14"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2581:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2592:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2604:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2612:6:14","type":""}],"src":"2501:864:14"},{"body":{"nodeType":"YulBlock","src":"3437:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"3483:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3485:77:14"},"nodeType":"YulFunctionCall","src":"3485:79:14"},"nodeType":"YulExpressionStatement","src":"3485:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3458:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3454:3:14"},"nodeType":"YulFunctionCall","src":"3454:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3479:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3450:3:14"},"nodeType":"YulFunctionCall","src":"3450:32:14"},"nodeType":"YulIf","src":"3447:119:14"},{"nodeType":"YulBlock","src":"3576:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3591:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3605:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3595:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3620:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3655:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3666:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3651:3:14"},"nodeType":"YulFunctionCall","src":"3651:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3675:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3630:20:14"},"nodeType":"YulFunctionCall","src":"3630:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3620:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3407:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3418:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3430:6:14","type":""}],"src":"3371:329:14"},{"body":{"nodeType":"YulBlock","src":"3783:274:14","statements":[{"body":{"nodeType":"YulBlock","src":"3829:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3831:77:14"},"nodeType":"YulFunctionCall","src":"3831:79:14"},"nodeType":"YulExpressionStatement","src":"3831:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3804:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3813:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3800:3:14"},"nodeType":"YulFunctionCall","src":"3800:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3825:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3796:3:14"},"nodeType":"YulFunctionCall","src":"3796:32:14"},"nodeType":"YulIf","src":"3793:119:14"},{"nodeType":"YulBlock","src":"3922:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3937:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3951:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3941:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3966:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4012:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4023:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4008:3:14"},"nodeType":"YulFunctionCall","src":"4008:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4032:7:14"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3976:31:14"},"nodeType":"YulFunctionCall","src":"3976:64:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3966:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3753:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3764:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3776:6:14","type":""}],"src":"3706:351:14"},{"body":{"nodeType":"YulBlock","src":"4143:388:14","statements":[{"body":{"nodeType":"YulBlock","src":"4189:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4191:77:14"},"nodeType":"YulFunctionCall","src":"4191:79:14"},"nodeType":"YulExpressionStatement","src":"4191:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4164:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4173:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4160:3:14"},"nodeType":"YulFunctionCall","src":"4160:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4185:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4156:3:14"},"nodeType":"YulFunctionCall","src":"4156:32:14"},"nodeType":"YulIf","src":"4153:119:14"},{"nodeType":"YulBlock","src":"4282:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4297:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4311:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4301:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4326:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4361:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4372:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4357:3:14"},"nodeType":"YulFunctionCall","src":"4357:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4381:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4336:20:14"},"nodeType":"YulFunctionCall","src":"4336:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4326:6:14"}]}]},{"nodeType":"YulBlock","src":"4409:115:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4424:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4438:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4428:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4454:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4486:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4497:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4482:3:14"},"nodeType":"YulFunctionCall","src":"4482:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4506:7:14"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4464:17:14"},"nodeType":"YulFunctionCall","src":"4464:50:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4454:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4105:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4116:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4128:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4136:6:14","type":""}],"src":"4063:468:14"},{"body":{"nodeType":"YulBlock","src":"4602:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4619:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4642:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4624:17:14"},"nodeType":"YulFunctionCall","src":"4624:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4612:6:14"},"nodeType":"YulFunctionCall","src":"4612:37:14"},"nodeType":"YulExpressionStatement","src":"4612:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4590:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4597:3:14","type":""}],"src":"4537:118:14"},{"body":{"nodeType":"YulBlock","src":"4720:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4737:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4757:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4742:14:14"},"nodeType":"YulFunctionCall","src":"4742:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4730:6:14"},"nodeType":"YulFunctionCall","src":"4730:34:14"},"nodeType":"YulExpressionStatement","src":"4730:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4708:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4715:3:14","type":""}],"src":"4661:109:14"},{"body":{"nodeType":"YulBlock","src":"4868:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4878:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4925:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4892:32:14"},"nodeType":"YulFunctionCall","src":"4892:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4882:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4940:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5006:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"5011:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4947:58:14"},"nodeType":"YulFunctionCall","src":"4947:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4940:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5053:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"5060:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5049:3:14"},"nodeType":"YulFunctionCall","src":"5049:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"5067:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"5072:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5027:21:14"},"nodeType":"YulFunctionCall","src":"5027:52:14"},"nodeType":"YulExpressionStatement","src":"5027:52:14"},{"nodeType":"YulAssignment","src":"5088:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5099:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5126:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5104:21:14"},"nodeType":"YulFunctionCall","src":"5104:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5095:3:14"},"nodeType":"YulFunctionCall","src":"5095:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5088:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4849:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4856:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4864:3:14","type":""}],"src":"4776:364:14"},{"body":{"nodeType":"YulBlock","src":"5292:220:14","statements":[{"nodeType":"YulAssignment","src":"5302:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5368:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5373:2:14","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5309:58:14"},"nodeType":"YulFunctionCall","src":"5309:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5302:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5474:3:14"}],"functionName":{"name":"store_literal_in_memory_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2","nodeType":"YulIdentifier","src":"5385:88:14"},"nodeType":"YulFunctionCall","src":"5385:93:14"},"nodeType":"YulExpressionStatement","src":"5385:93:14"},{"nodeType":"YulAssignment","src":"5487:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5498:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5503:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5494:3:14"},"nodeType":"YulFunctionCall","src":"5494:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5487:3:14"}]}]},"name":"abi_encode_t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5280:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5288:3:14","type":""}],"src":"5146:366:14"},{"body":{"nodeType":"YulBlock","src":"5664:220:14","statements":[{"nodeType":"YulAssignment","src":"5674:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5740:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5745:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5681:58:14"},"nodeType":"YulFunctionCall","src":"5681:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5674:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5846:3:14"}],"functionName":{"name":"store_literal_in_memory_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc","nodeType":"YulIdentifier","src":"5757:88:14"},"nodeType":"YulFunctionCall","src":"5757:93:14"},"nodeType":"YulExpressionStatement","src":"5757:93:14"},{"nodeType":"YulAssignment","src":"5859:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5870:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5875:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5866:3:14"},"nodeType":"YulFunctionCall","src":"5866:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5859:3:14"}]}]},"name":"abi_encode_t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5652:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5660:3:14","type":""}],"src":"5518:366:14"},{"body":{"nodeType":"YulBlock","src":"6036:220:14","statements":[{"nodeType":"YulAssignment","src":"6046:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6112:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6117:2:14","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6053:58:14"},"nodeType":"YulFunctionCall","src":"6053:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6046:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6218:3:14"}],"functionName":{"name":"store_literal_in_memory_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c","nodeType":"YulIdentifier","src":"6129:88:14"},"nodeType":"YulFunctionCall","src":"6129:93:14"},"nodeType":"YulExpressionStatement","src":"6129:93:14"},{"nodeType":"YulAssignment","src":"6231:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6242:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6247:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6238:3:14"},"nodeType":"YulFunctionCall","src":"6238:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6231:3:14"}]}]},"name":"abi_encode_t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6024:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6032:3:14","type":""}],"src":"5890:366:14"},{"body":{"nodeType":"YulBlock","src":"6408:220:14","statements":[{"nodeType":"YulAssignment","src":"6418:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6484:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6489:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6425:58:14"},"nodeType":"YulFunctionCall","src":"6425:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6418:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6590:3:14"}],"functionName":{"name":"store_literal_in_memory_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669","nodeType":"YulIdentifier","src":"6501:88:14"},"nodeType":"YulFunctionCall","src":"6501:93:14"},"nodeType":"YulExpressionStatement","src":"6501:93:14"},{"nodeType":"YulAssignment","src":"6603:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6614:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6619:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6610:3:14"},"nodeType":"YulFunctionCall","src":"6610:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6603:3:14"}]}]},"name":"abi_encode_t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6396:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6404:3:14","type":""}],"src":"6262:366:14"},{"body":{"nodeType":"YulBlock","src":"6780:220:14","statements":[{"nodeType":"YulAssignment","src":"6790:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6856:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6861:2:14","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6797:58:14"},"nodeType":"YulFunctionCall","src":"6797:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6790:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6962:3:14"}],"functionName":{"name":"store_literal_in_memory_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae","nodeType":"YulIdentifier","src":"6873:88:14"},"nodeType":"YulFunctionCall","src":"6873:93:14"},"nodeType":"YulExpressionStatement","src":"6873:93:14"},{"nodeType":"YulAssignment","src":"6975:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6986:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6991:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6982:3:14"},"nodeType":"YulFunctionCall","src":"6982:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6975:3:14"}]}]},"name":"abi_encode_t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6768:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6776:3:14","type":""}],"src":"6634:366:14"},{"body":{"nodeType":"YulBlock","src":"7152:220:14","statements":[{"nodeType":"YulAssignment","src":"7162:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7228:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7233:2:14","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7169:58:14"},"nodeType":"YulFunctionCall","src":"7169:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7162:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7334:3:14"}],"functionName":{"name":"store_literal_in_memory_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2","nodeType":"YulIdentifier","src":"7245:88:14"},"nodeType":"YulFunctionCall","src":"7245:93:14"},"nodeType":"YulExpressionStatement","src":"7245:93:14"},{"nodeType":"YulAssignment","src":"7347:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7358:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7363:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:14"},"nodeType":"YulFunctionCall","src":"7354:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7347:3:14"}]}]},"name":"abi_encode_t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7140:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7148:3:14","type":""}],"src":"7006:366:14"},{"body":{"nodeType":"YulBlock","src":"7524:220:14","statements":[{"nodeType":"YulAssignment","src":"7534:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7600:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7605:2:14","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7541:58:14"},"nodeType":"YulFunctionCall","src":"7541:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7534:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7706:3:14"}],"functionName":{"name":"store_literal_in_memory_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7","nodeType":"YulIdentifier","src":"7617:88:14"},"nodeType":"YulFunctionCall","src":"7617:93:14"},"nodeType":"YulExpressionStatement","src":"7617:93:14"},{"nodeType":"YulAssignment","src":"7719:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7730:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7735:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7726:3:14"},"nodeType":"YulFunctionCall","src":"7726:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7719:3:14"}]}]},"name":"abi_encode_t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7512:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7520:3:14","type":""}],"src":"7378:366:14"},{"body":{"nodeType":"YulBlock","src":"7896:220:14","statements":[{"nodeType":"YulAssignment","src":"7906:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7972:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7977:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7913:58:14"},"nodeType":"YulFunctionCall","src":"7913:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7906:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8078:3:14"}],"functionName":{"name":"store_literal_in_memory_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da","nodeType":"YulIdentifier","src":"7989:88:14"},"nodeType":"YulFunctionCall","src":"7989:93:14"},"nodeType":"YulExpressionStatement","src":"7989:93:14"},{"nodeType":"YulAssignment","src":"8091:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8102:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8107:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:14"},"nodeType":"YulFunctionCall","src":"8098:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8091:3:14"}]}]},"name":"abi_encode_t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7884:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7892:3:14","type":""}],"src":"7750:366:14"},{"body":{"nodeType":"YulBlock","src":"8268:220:14","statements":[{"nodeType":"YulAssignment","src":"8278:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8344:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8349:2:14","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8285:58:14"},"nodeType":"YulFunctionCall","src":"8285:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8278:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8450:3:14"}],"functionName":{"name":"store_literal_in_memory_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383","nodeType":"YulIdentifier","src":"8361:88:14"},"nodeType":"YulFunctionCall","src":"8361:93:14"},"nodeType":"YulExpressionStatement","src":"8361:93:14"},{"nodeType":"YulAssignment","src":"8463:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8474:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8479:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8470:3:14"},"nodeType":"YulFunctionCall","src":"8470:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8463:3:14"}]}]},"name":"abi_encode_t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8256:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8264:3:14","type":""}],"src":"8122:366:14"},{"body":{"nodeType":"YulBlock","src":"8559:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8576:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8599:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8581:17:14"},"nodeType":"YulFunctionCall","src":"8581:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8569:6:14"},"nodeType":"YulFunctionCall","src":"8569:37:14"},"nodeType":"YulExpressionStatement","src":"8569:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8547:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8554:3:14","type":""}],"src":"8494:118:14"},{"body":{"nodeType":"YulBlock","src":"8716:124:14","statements":[{"nodeType":"YulAssignment","src":"8726:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8738:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8749:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8734:3:14"},"nodeType":"YulFunctionCall","src":"8734:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8726:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8806:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8819:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8830:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8815:3:14"},"nodeType":"YulFunctionCall","src":"8815:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8762:43:14"},"nodeType":"YulFunctionCall","src":"8762:71:14"},"nodeType":"YulExpressionStatement","src":"8762:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8688:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8700:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8711:4:14","type":""}],"src":"8618:222:14"},{"body":{"nodeType":"YulBlock","src":"8972:206:14","statements":[{"nodeType":"YulAssignment","src":"8982:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8994:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9005:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8990:3:14"},"nodeType":"YulFunctionCall","src":"8990:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8982:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9062:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9075:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9086:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:14"},"nodeType":"YulFunctionCall","src":"9071:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9018:43:14"},"nodeType":"YulFunctionCall","src":"9018:71:14"},"nodeType":"YulExpressionStatement","src":"9018:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9143:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9156:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9167:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9152:3:14"},"nodeType":"YulFunctionCall","src":"9152:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9099:43:14"},"nodeType":"YulFunctionCall","src":"9099:72:14"},"nodeType":"YulExpressionStatement","src":"9099:72:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8936:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8948:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8956:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8967:4:14","type":""}],"src":"8846:332:14"},{"body":{"nodeType":"YulBlock","src":"9355:248:14","statements":[{"nodeType":"YulAssignment","src":"9365:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9377:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9388:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9373:3:14"},"nodeType":"YulFunctionCall","src":"9373:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9365:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9412:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9423:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9408:3:14"},"nodeType":"YulFunctionCall","src":"9408:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9431:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9437:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9427:3:14"},"nodeType":"YulFunctionCall","src":"9427:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9401:6:14"},"nodeType":"YulFunctionCall","src":"9401:47:14"},"nodeType":"YulExpressionStatement","src":"9401:47:14"},{"nodeType":"YulAssignment","src":"9457:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9591:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9465:124:14"},"nodeType":"YulFunctionCall","src":"9465:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9457:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9335:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9350:4:14","type":""}],"src":"9184:419:14"},{"body":{"nodeType":"YulBlock","src":"9780:248:14","statements":[{"nodeType":"YulAssignment","src":"9790:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9802:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9813:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9798:3:14"},"nodeType":"YulFunctionCall","src":"9798:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9790:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9837:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9848:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9833:3:14"},"nodeType":"YulFunctionCall","src":"9833:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9856:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9862:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9852:3:14"},"nodeType":"YulFunctionCall","src":"9852:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9826:6:14"},"nodeType":"YulFunctionCall","src":"9826:47:14"},"nodeType":"YulExpressionStatement","src":"9826:47:14"},{"nodeType":"YulAssignment","src":"9882:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10016:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9890:124:14"},"nodeType":"YulFunctionCall","src":"9890:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9882:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9760:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9775:4:14","type":""}],"src":"9609:419:14"},{"body":{"nodeType":"YulBlock","src":"10205:248:14","statements":[{"nodeType":"YulAssignment","src":"10215:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10227:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10238:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10223:3:14"},"nodeType":"YulFunctionCall","src":"10223:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10215:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10262:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10273:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10258:3:14"},"nodeType":"YulFunctionCall","src":"10258:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10281:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10287:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10277:3:14"},"nodeType":"YulFunctionCall","src":"10277:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10251:6:14"},"nodeType":"YulFunctionCall","src":"10251:47:14"},"nodeType":"YulExpressionStatement","src":"10251:47:14"},{"nodeType":"YulAssignment","src":"10307:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10441:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10315:124:14"},"nodeType":"YulFunctionCall","src":"10315:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10307:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10185:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10200:4:14","type":""}],"src":"10034:419:14"},{"body":{"nodeType":"YulBlock","src":"10630:248:14","statements":[{"nodeType":"YulAssignment","src":"10640:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10652:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10663:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10648:3:14"},"nodeType":"YulFunctionCall","src":"10648:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10640:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10687:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10698:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10683:3:14"},"nodeType":"YulFunctionCall","src":"10683:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10706:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10712:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10702:3:14"},"nodeType":"YulFunctionCall","src":"10702:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10676:6:14"},"nodeType":"YulFunctionCall","src":"10676:47:14"},"nodeType":"YulExpressionStatement","src":"10676:47:14"},{"nodeType":"YulAssignment","src":"10732:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10866:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10740:124:14"},"nodeType":"YulFunctionCall","src":"10740:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10732:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10610:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10625:4:14","type":""}],"src":"10459:419:14"},{"body":{"nodeType":"YulBlock","src":"11055:248:14","statements":[{"nodeType":"YulAssignment","src":"11065:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11077:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11088:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11073:3:14"},"nodeType":"YulFunctionCall","src":"11073:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11065:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11112:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11123:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11108:3:14"},"nodeType":"YulFunctionCall","src":"11108:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11131:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11137:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11127:3:14"},"nodeType":"YulFunctionCall","src":"11127:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11101:6:14"},"nodeType":"YulFunctionCall","src":"11101:47:14"},"nodeType":"YulExpressionStatement","src":"11101:47:14"},{"nodeType":"YulAssignment","src":"11157:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11291:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11165:124:14"},"nodeType":"YulFunctionCall","src":"11165:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11157:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11035:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11050:4:14","type":""}],"src":"10884:419:14"},{"body":{"nodeType":"YulBlock","src":"11480:248:14","statements":[{"nodeType":"YulAssignment","src":"11490:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11502:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11513:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11498:3:14"},"nodeType":"YulFunctionCall","src":"11498:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11490:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11537:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11548:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11533:3:14"},"nodeType":"YulFunctionCall","src":"11533:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11556:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11562:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11552:3:14"},"nodeType":"YulFunctionCall","src":"11552:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11526:6:14"},"nodeType":"YulFunctionCall","src":"11526:47:14"},"nodeType":"YulExpressionStatement","src":"11526:47:14"},{"nodeType":"YulAssignment","src":"11582:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11716:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11590:124:14"},"nodeType":"YulFunctionCall","src":"11590:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11582:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11460:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11475:4:14","type":""}],"src":"11309:419:14"},{"body":{"nodeType":"YulBlock","src":"11905:248:14","statements":[{"nodeType":"YulAssignment","src":"11915:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11927:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11938:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11923:3:14"},"nodeType":"YulFunctionCall","src":"11923:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11915:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11962:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11973:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11958:3:14"},"nodeType":"YulFunctionCall","src":"11958:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11981:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11987:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11977:3:14"},"nodeType":"YulFunctionCall","src":"11977:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11951:6:14"},"nodeType":"YulFunctionCall","src":"11951:47:14"},"nodeType":"YulExpressionStatement","src":"11951:47:14"},{"nodeType":"YulAssignment","src":"12007:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12141:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12015:124:14"},"nodeType":"YulFunctionCall","src":"12015:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12007:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11885:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11900:4:14","type":""}],"src":"11734:419:14"},{"body":{"nodeType":"YulBlock","src":"12330:248:14","statements":[{"nodeType":"YulAssignment","src":"12340:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12352:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12363:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12348:3:14"},"nodeType":"YulFunctionCall","src":"12348:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12340:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12387:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12398:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12383:3:14"},"nodeType":"YulFunctionCall","src":"12383:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12406:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12412:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12402:3:14"},"nodeType":"YulFunctionCall","src":"12402:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12376:6:14"},"nodeType":"YulFunctionCall","src":"12376:47:14"},"nodeType":"YulExpressionStatement","src":"12376:47:14"},{"nodeType":"YulAssignment","src":"12432:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12566:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12440:124:14"},"nodeType":"YulFunctionCall","src":"12440:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12432:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12310:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12325:4:14","type":""}],"src":"12159:419:14"},{"body":{"nodeType":"YulBlock","src":"12755:248:14","statements":[{"nodeType":"YulAssignment","src":"12765:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12777:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12788:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12773:3:14"},"nodeType":"YulFunctionCall","src":"12773:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12765:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12812:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12823:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12808:3:14"},"nodeType":"YulFunctionCall","src":"12808:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12831:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12837:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12827:3:14"},"nodeType":"YulFunctionCall","src":"12827:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12801:6:14"},"nodeType":"YulFunctionCall","src":"12801:47:14"},"nodeType":"YulExpressionStatement","src":"12801:47:14"},{"nodeType":"YulAssignment","src":"12857:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12991:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12865:124:14"},"nodeType":"YulFunctionCall","src":"12865:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12857:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12735:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12750:4:14","type":""}],"src":"12584:419:14"},{"body":{"nodeType":"YulBlock","src":"13107:124:14","statements":[{"nodeType":"YulAssignment","src":"13117:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13129:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13140:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13125:3:14"},"nodeType":"YulFunctionCall","src":"13125:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13117:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13197:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13210:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13221:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13206:3:14"},"nodeType":"YulFunctionCall","src":"13206:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13153:43:14"},"nodeType":"YulFunctionCall","src":"13153:71:14"},"nodeType":"YulExpressionStatement","src":"13153:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13079:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13091:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13102:4:14","type":""}],"src":"13009:222:14"},{"body":{"nodeType":"YulBlock","src":"13357:200:14","statements":[{"nodeType":"YulAssignment","src":"13367:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13379:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13390:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13375:3:14"},"nodeType":"YulFunctionCall","src":"13375:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13367:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13447:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13460:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13471:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13456:3:14"},"nodeType":"YulFunctionCall","src":"13456:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13403:43:14"},"nodeType":"YulFunctionCall","src":"13403:71:14"},"nodeType":"YulExpressionStatement","src":"13403:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13522:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13535:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13546:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13531:3:14"},"nodeType":"YulFunctionCall","src":"13531:18:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13484:37:14"},"nodeType":"YulFunctionCall","src":"13484:66:14"},"nodeType":"YulExpressionStatement","src":"13484:66:14"}]},"name":"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13321:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13333:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13341:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13352:4:14","type":""}],"src":"13237:320:14"},{"body":{"nodeType":"YulBlock","src":"13887:839:14","statements":[{"nodeType":"YulAssignment","src":"13897:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13909:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13920:3:14","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13905:3:14"},"nodeType":"YulFunctionCall","src":"13905:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13897:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13978:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13991:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14002:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13987:3:14"},"nodeType":"YulFunctionCall","src":"13987:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13934:43:14"},"nodeType":"YulFunctionCall","src":"13934:71:14"},"nodeType":"YulExpressionStatement","src":"13934:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14053:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14066:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14077:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14062:3:14"},"nodeType":"YulFunctionCall","src":"14062:18:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"14015:37:14"},"nodeType":"YulFunctionCall","src":"14015:66:14"},"nodeType":"YulExpressionStatement","src":"14015:66:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14102:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14113:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14098:3:14"},"nodeType":"YulFunctionCall","src":"14098:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14122:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14128:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14118:3:14"},"nodeType":"YulFunctionCall","src":"14118:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14091:6:14"},"nodeType":"YulFunctionCall","src":"14091:48:14"},"nodeType":"YulExpressionStatement","src":"14091:48:14"},{"nodeType":"YulAssignment","src":"14148:86:14","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14220:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"14229:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14156:63:14"},"nodeType":"YulFunctionCall","src":"14156:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14148:4:14"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14288:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14301:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14312:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14297:3:14"},"nodeType":"YulFunctionCall","src":"14297:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14244:43:14"},"nodeType":"YulFunctionCall","src":"14244:72:14"},"nodeType":"YulExpressionStatement","src":"14244:72:14"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14370:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14383:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14394:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14379:3:14"},"nodeType":"YulFunctionCall","src":"14379:19:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14326:43:14"},"nodeType":"YulFunctionCall","src":"14326:73:14"},"nodeType":"YulExpressionStatement","src":"14326:73:14"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"14453:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14466:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14477:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14462:3:14"},"nodeType":"YulFunctionCall","src":"14462:19:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14409:43:14"},"nodeType":"YulFunctionCall","src":"14409:73:14"},"nodeType":"YulExpressionStatement","src":"14409:73:14"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"14536:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14549:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14560:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14545:3:14"},"nodeType":"YulFunctionCall","src":"14545:19:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14492:43:14"},"nodeType":"YulFunctionCall","src":"14492:73:14"},"nodeType":"YulExpressionStatement","src":"14492:73:14"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"14613:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14626:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14637:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14622:3:14"},"nodeType":"YulFunctionCall","src":"14622:19:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"14575:37:14"},"nodeType":"YulFunctionCall","src":"14575:67:14"},"nodeType":"YulExpressionStatement","src":"14575:67:14"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"14690:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14703:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14714:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14699:3:14"},"nodeType":"YulFunctionCall","src":"14699:19:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"14652:37:14"},"nodeType":"YulFunctionCall","src":"14652:67:14"},"nodeType":"YulExpressionStatement","src":"14652:67:14"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13795:9:14","type":""},{"name":"value8","nodeType":"YulTypedName","src":"13807:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"13815:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"13823:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13831:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13839:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13847:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13855:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13863:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13871:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13882:4:14","type":""}],"src":"13563:1163:14"},{"body":{"nodeType":"YulBlock","src":"14934:442:14","statements":[{"nodeType":"YulAssignment","src":"14944:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14956:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14967:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14952:3:14"},"nodeType":"YulFunctionCall","src":"14952:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14944:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15025:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15038:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15049:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15034:3:14"},"nodeType":"YulFunctionCall","src":"15034:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14981:43:14"},"nodeType":"YulFunctionCall","src":"14981:71:14"},"nodeType":"YulExpressionStatement","src":"14981:71:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15073:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15084:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15069:3:14"},"nodeType":"YulFunctionCall","src":"15069:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15093:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15099:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15089:3:14"},"nodeType":"YulFunctionCall","src":"15089:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15062:6:14"},"nodeType":"YulFunctionCall","src":"15062:48:14"},"nodeType":"YulExpressionStatement","src":"15062:48:14"},{"nodeType":"YulAssignment","src":"15119:86:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15191:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"15200:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15127:63:14"},"nodeType":"YulFunctionCall","src":"15127:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15119:4:14"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15259:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15272:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15283:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15268:3:14"},"nodeType":"YulFunctionCall","src":"15268:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15215:43:14"},"nodeType":"YulFunctionCall","src":"15215:72:14"},"nodeType":"YulExpressionStatement","src":"15215:72:14"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15341:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15354:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15365:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15350:3:14"},"nodeType":"YulFunctionCall","src":"15350:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15297:43:14"},"nodeType":"YulFunctionCall","src":"15297:72:14"},"nodeType":"YulExpressionStatement","src":"15297:72:14"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_address__to_t_uint256_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14882:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14894:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14902:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14910:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14918:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14929:4:14","type":""}],"src":"14732:644:14"},{"body":{"nodeType":"YulBlock","src":"15586:448:14","statements":[{"nodeType":"YulAssignment","src":"15596:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15608:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15619:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15604:3:14"},"nodeType":"YulFunctionCall","src":"15604:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15596:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15677:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15690:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15701:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15686:3:14"},"nodeType":"YulFunctionCall","src":"15686:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15633:43:14"},"nodeType":"YulFunctionCall","src":"15633:71:14"},"nodeType":"YulExpressionStatement","src":"15633:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15758:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15771:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15782:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15767:3:14"},"nodeType":"YulFunctionCall","src":"15767:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15714:43:14"},"nodeType":"YulFunctionCall","src":"15714:72:14"},"nodeType":"YulExpressionStatement","src":"15714:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15840:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15853:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15864:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15849:3:14"},"nodeType":"YulFunctionCall","src":"15849:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15796:43:14"},"nodeType":"YulFunctionCall","src":"15796:72:14"},"nodeType":"YulExpressionStatement","src":"15796:72:14"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15922:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15935:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15946:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15931:3:14"},"nodeType":"YulFunctionCall","src":"15931:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15878:43:14"},"nodeType":"YulFunctionCall","src":"15878:72:14"},"nodeType":"YulExpressionStatement","src":"15878:72:14"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15998:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16011:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16022:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16007:3:14"},"nodeType":"YulFunctionCall","src":"16007:19:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"15960:37:14"},"nodeType":"YulFunctionCall","src":"15960:67:14"},"nodeType":"YulExpressionStatement","src":"15960:67:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15526:9:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15538:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15546:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15554:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15562:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15570:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15581:4:14","type":""}],"src":"15382:652:14"},{"body":{"nodeType":"YulBlock","src":"16081:88:14","statements":[{"nodeType":"YulAssignment","src":"16091:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"16101:18:14"},"nodeType":"YulFunctionCall","src":"16101:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16091:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16150:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"16158:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"16130:19:14"},"nodeType":"YulFunctionCall","src":"16130:33:14"},"nodeType":"YulExpressionStatement","src":"16130:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"16065:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16074:6:14","type":""}],"src":"16040:129:14"},{"body":{"nodeType":"YulBlock","src":"16215:35:14","statements":[{"nodeType":"YulAssignment","src":"16225:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16241:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16235:5:14"},"nodeType":"YulFunctionCall","src":"16235:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16225:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16208:6:14","type":""}],"src":"16175:75:14"},{"body":{"nodeType":"YulBlock","src":"16338:229:14","statements":[{"body":{"nodeType":"YulBlock","src":"16443:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16445:16:14"},"nodeType":"YulFunctionCall","src":"16445:18:14"},"nodeType":"YulExpressionStatement","src":"16445:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16415:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16423:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16412:2:14"},"nodeType":"YulFunctionCall","src":"16412:30:14"},"nodeType":"YulIf","src":"16409:56:14"},{"nodeType":"YulAssignment","src":"16475:25:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16487:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16495:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16483:3:14"},"nodeType":"YulFunctionCall","src":"16483:17:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16475:4:14"}]},{"nodeType":"YulAssignment","src":"16537:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16549:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"16555:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16545:3:14"},"nodeType":"YulFunctionCall","src":"16545:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16537:4:14"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16322:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16333:4:14","type":""}],"src":"16256:311:14"},{"body":{"nodeType":"YulBlock","src":"16640:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"16745:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16747:16:14"},"nodeType":"YulFunctionCall","src":"16747:18:14"},"nodeType":"YulExpressionStatement","src":"16747:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16717:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16725:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16714:2:14"},"nodeType":"YulFunctionCall","src":"16714:30:14"},"nodeType":"YulIf","src":"16711:56:14"},{"nodeType":"YulAssignment","src":"16777:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16807:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16785:21:14"},"nodeType":"YulFunctionCall","src":"16785:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16777:4:14"}]},{"nodeType":"YulAssignment","src":"16851:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16863:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"16869:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16859:3:14"},"nodeType":"YulFunctionCall","src":"16859:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16851:4:14"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16624:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16635:4:14","type":""}],"src":"16573:308:14"},{"body":{"nodeType":"YulBlock","src":"16946:40:14","statements":[{"nodeType":"YulAssignment","src":"16957:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16973:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16967:5:14"},"nodeType":"YulFunctionCall","src":"16967:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16957:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16929:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16939:6:14","type":""}],"src":"16887:99:14"},{"body":{"nodeType":"YulBlock","src":"17088:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17105:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"17110:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17098:6:14"},"nodeType":"YulFunctionCall","src":"17098:19:14"},"nodeType":"YulExpressionStatement","src":"17098:19:14"},{"nodeType":"YulAssignment","src":"17126:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17145:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17150:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17141:3:14"},"nodeType":"YulFunctionCall","src":"17141:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17126:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17060:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"17065:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17076:11:14","type":""}],"src":"16992:169:14"},{"body":{"nodeType":"YulBlock","src":"17211:261:14","statements":[{"nodeType":"YulAssignment","src":"17221:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17244:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17226:17:14"},"nodeType":"YulFunctionCall","src":"17226:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17221:1:14"}]},{"nodeType":"YulAssignment","src":"17255:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17278:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17260:17:14"},"nodeType":"YulFunctionCall","src":"17260:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17255:1:14"}]},{"body":{"nodeType":"YulBlock","src":"17418:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17420:16:14"},"nodeType":"YulFunctionCall","src":"17420:18:14"},"nodeType":"YulExpressionStatement","src":"17420:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17339:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17346:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17414:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17342:3:14"},"nodeType":"YulFunctionCall","src":"17342:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17336:2:14"},"nodeType":"YulFunctionCall","src":"17336:81:14"},"nodeType":"YulIf","src":"17333:107:14"},{"nodeType":"YulAssignment","src":"17450:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17461:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"17464:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17457:3:14"},"nodeType":"YulFunctionCall","src":"17457:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17450:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17198:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"17201:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17207:3:14","type":""}],"src":"17167:305:14"},{"body":{"nodeType":"YulBlock","src":"17523:51:14","statements":[{"nodeType":"YulAssignment","src":"17533:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17562:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17544:17:14"},"nodeType":"YulFunctionCall","src":"17544:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17533:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17505:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17515:7:14","type":""}],"src":"17478:96:14"},{"body":{"nodeType":"YulBlock","src":"17622:48:14","statements":[{"nodeType":"YulAssignment","src":"17632:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17657:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17650:6:14"},"nodeType":"YulFunctionCall","src":"17650:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17643:6:14"},"nodeType":"YulFunctionCall","src":"17643:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17632:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17604:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17614:7:14","type":""}],"src":"17580:90:14"},{"body":{"nodeType":"YulBlock","src":"17721:81:14","statements":[{"nodeType":"YulAssignment","src":"17731:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17746:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"17753:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17742:3:14"},"nodeType":"YulFunctionCall","src":"17742:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17731:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17703:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17713:7:14","type":""}],"src":"17676:126:14"},{"body":{"nodeType":"YulBlock","src":"17853:32:14","statements":[{"nodeType":"YulAssignment","src":"17863:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"17874:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17863:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17835:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17845:7:14","type":""}],"src":"17808:77:14"},{"body":{"nodeType":"YulBlock","src":"17942:103:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17965:3:14"},{"name":"src","nodeType":"YulIdentifier","src":"17970:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"17975:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17952:12:14"},"nodeType":"YulFunctionCall","src":"17952:30:14"},"nodeType":"YulExpressionStatement","src":"17952:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18023:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"18028:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18019:3:14"},"nodeType":"YulFunctionCall","src":"18019:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"18037:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18012:6:14"},"nodeType":"YulFunctionCall","src":"18012:27:14"},"nodeType":"YulExpressionStatement","src":"18012:27:14"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17924:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17929:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"17934:6:14","type":""}],"src":"17891:154:14"},{"body":{"nodeType":"YulBlock","src":"18100:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"18110:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"18119:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18114:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"18179:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18204:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"18209:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18200:3:14"},"nodeType":"YulFunctionCall","src":"18200:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18223:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"18228:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18219:3:14"},"nodeType":"YulFunctionCall","src":"18219:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18213:5:14"},"nodeType":"YulFunctionCall","src":"18213:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18193:6:14"},"nodeType":"YulFunctionCall","src":"18193:39:14"},"nodeType":"YulExpressionStatement","src":"18193:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18140:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"18143:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18137:2:14"},"nodeType":"YulFunctionCall","src":"18137:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18151:19:14","statements":[{"nodeType":"YulAssignment","src":"18153:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18162:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"18165:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18158:3:14"},"nodeType":"YulFunctionCall","src":"18158:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18153:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"18133:3:14","statements":[]},"src":"18129:113:14"},{"body":{"nodeType":"YulBlock","src":"18276:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18326:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"18331:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18322:3:14"},"nodeType":"YulFunctionCall","src":"18322:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"18340:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18315:6:14"},"nodeType":"YulFunctionCall","src":"18315:27:14"},"nodeType":"YulExpressionStatement","src":"18315:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18257:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"18260:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18254:2:14"},"nodeType":"YulFunctionCall","src":"18254:13:14"},"nodeType":"YulIf","src":"18251:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18082:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18087:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"18092:6:14","type":""}],"src":"18051:307:14"},{"body":{"nodeType":"YulBlock","src":"18415:269:14","statements":[{"nodeType":"YulAssignment","src":"18425:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18439:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"18445:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18435:3:14"},"nodeType":"YulFunctionCall","src":"18435:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18425:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"18456:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18486:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"18492:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18482:3:14"},"nodeType":"YulFunctionCall","src":"18482:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18460:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"18533:51:14","statements":[{"nodeType":"YulAssignment","src":"18547:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18561:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18569:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18557:3:14"},"nodeType":"YulFunctionCall","src":"18557:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18547:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18513:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18506:6:14"},"nodeType":"YulFunctionCall","src":"18506:26:14"},"nodeType":"YulIf","src":"18503:81:14"},{"body":{"nodeType":"YulBlock","src":"18636:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"18650:16:14"},"nodeType":"YulFunctionCall","src":"18650:18:14"},"nodeType":"YulExpressionStatement","src":"18650:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18600:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18623:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18631:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18620:2:14"},"nodeType":"YulFunctionCall","src":"18620:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18597:2:14"},"nodeType":"YulFunctionCall","src":"18597:38:14"},"nodeType":"YulIf","src":"18594:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18399:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18408:6:14","type":""}],"src":"18364:320:14"},{"body":{"nodeType":"YulBlock","src":"18733:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"18743:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18765:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18795:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18773:21:14"},"nodeType":"YulFunctionCall","src":"18773:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18761:3:14"},"nodeType":"YulFunctionCall","src":"18761:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"18747:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"18912:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18914:16:14"},"nodeType":"YulFunctionCall","src":"18914:18:14"},"nodeType":"YulExpressionStatement","src":"18914:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18855:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"18867:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18852:2:14"},"nodeType":"YulFunctionCall","src":"18852:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18891:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"18903:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18888:2:14"},"nodeType":"YulFunctionCall","src":"18888:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18849:2:14"},"nodeType":"YulFunctionCall","src":"18849:62:14"},"nodeType":"YulIf","src":"18846:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18950:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18954:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18943:6:14"},"nodeType":"YulFunctionCall","src":"18943:22:14"},"nodeType":"YulExpressionStatement","src":"18943:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18719:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"18727:4:14","type":""}],"src":"18690:281:14"},{"body":{"nodeType":"YulBlock","src":"19020:190:14","statements":[{"nodeType":"YulAssignment","src":"19030:33:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19057:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19039:17:14"},"nodeType":"YulFunctionCall","src":"19039:24:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19030:5:14"}]},{"body":{"nodeType":"YulBlock","src":"19153:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19155:16:14"},"nodeType":"YulFunctionCall","src":"19155:18:14"},"nodeType":"YulExpressionStatement","src":"19155:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19078:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"19085:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19075:2:14"},"nodeType":"YulFunctionCall","src":"19075:77:14"},"nodeType":"YulIf","src":"19072:103:14"},{"nodeType":"YulAssignment","src":"19184:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19195:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"19202:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19191:3:14"},"nodeType":"YulFunctionCall","src":"19191:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19184:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19006:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19016:3:14","type":""}],"src":"18977:233:14"},{"body":{"nodeType":"YulBlock","src":"19244:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19261:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19264:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19254:6:14"},"nodeType":"YulFunctionCall","src":"19254:88:14"},"nodeType":"YulExpressionStatement","src":"19254:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19358:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19361:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19351:6:14"},"nodeType":"YulFunctionCall","src":"19351:15:14"},"nodeType":"YulExpressionStatement","src":"19351:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19382:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19385:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19375:6:14"},"nodeType":"YulFunctionCall","src":"19375:15:14"},"nodeType":"YulExpressionStatement","src":"19375:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19216:180:14"},{"body":{"nodeType":"YulBlock","src":"19430:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19447:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19450:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19440:6:14"},"nodeType":"YulFunctionCall","src":"19440:88:14"},"nodeType":"YulExpressionStatement","src":"19440:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19544:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19547:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19537:6:14"},"nodeType":"YulFunctionCall","src":"19537:15:14"},"nodeType":"YulExpressionStatement","src":"19537:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19568:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19571:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19561:6:14"},"nodeType":"YulFunctionCall","src":"19561:15:14"},"nodeType":"YulExpressionStatement","src":"19561:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"19402:180:14"},{"body":{"nodeType":"YulBlock","src":"19616:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19633:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19636:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19626:6:14"},"nodeType":"YulFunctionCall","src":"19626:88:14"},"nodeType":"YulExpressionStatement","src":"19626:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19730:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19733:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19723:6:14"},"nodeType":"YulFunctionCall","src":"19723:15:14"},"nodeType":"YulExpressionStatement","src":"19723:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19754:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19757:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19747:6:14"},"nodeType":"YulFunctionCall","src":"19747:15:14"},"nodeType":"YulExpressionStatement","src":"19747:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19588:180:14"},{"body":{"nodeType":"YulBlock","src":"19802:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19819:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19822:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19812:6:14"},"nodeType":"YulFunctionCall","src":"19812:88:14"},"nodeType":"YulExpressionStatement","src":"19812:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19916:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19919:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19909:6:14"},"nodeType":"YulFunctionCall","src":"19909:15:14"},"nodeType":"YulExpressionStatement","src":"19909:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19940:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19943:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19933:6:14"},"nodeType":"YulFunctionCall","src":"19933:15:14"},"nodeType":"YulExpressionStatement","src":"19933:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"19774:180:14"},{"body":{"nodeType":"YulBlock","src":"20049:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20066:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20069:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20059:6:14"},"nodeType":"YulFunctionCall","src":"20059:12:14"},"nodeType":"YulExpressionStatement","src":"20059:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"19960:117:14"},{"body":{"nodeType":"YulBlock","src":"20172:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20189:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20192:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20182:6:14"},"nodeType":"YulFunctionCall","src":"20182:12:14"},"nodeType":"YulExpressionStatement","src":"20182:12:14"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"20083:117:14"},{"body":{"nodeType":"YulBlock","src":"20295:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20312:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20315:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20305:6:14"},"nodeType":"YulFunctionCall","src":"20305:12:14"},"nodeType":"YulExpressionStatement","src":"20305:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"20206:117:14"},{"body":{"nodeType":"YulBlock","src":"20418:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20435:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20438:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20428:6:14"},"nodeType":"YulFunctionCall","src":"20428:12:14"},"nodeType":"YulExpressionStatement","src":"20428:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20329:117:14"},{"body":{"nodeType":"YulBlock","src":"20541:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20558:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20561:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20551:6:14"},"nodeType":"YulFunctionCall","src":"20551:12:14"},"nodeType":"YulExpressionStatement","src":"20551:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"20452:117:14"},{"body":{"nodeType":"YulBlock","src":"20623:54:14","statements":[{"nodeType":"YulAssignment","src":"20633:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20651:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"20658:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20647:3:14"},"nodeType":"YulFunctionCall","src":"20647:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20667:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20663:3:14"},"nodeType":"YulFunctionCall","src":"20663:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20643:3:14"},"nodeType":"YulFunctionCall","src":"20643:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20633:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20606:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20616:6:14","type":""}],"src":"20575:102:14"},{"body":{"nodeType":"YulBlock","src":"20789:120:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20811:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20819:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20807:3:14"},"nodeType":"YulFunctionCall","src":"20807:14:14"},{"hexValue":"596f75206861766520616c726561647920766f746564206f6e20746869732050","kind":"string","nodeType":"YulLiteral","src":"20823:34:14","type":"","value":"You have already voted on this P"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20800:6:14"},"nodeType":"YulFunctionCall","src":"20800:58:14"},"nodeType":"YulExpressionStatement","src":"20800:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20879:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20887:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20875:3:14"},"nodeType":"YulFunctionCall","src":"20875:15:14"},{"hexValue":"726f706f73616c","kind":"string","nodeType":"YulLiteral","src":"20892:9:14","type":"","value":"roposal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20868:6:14"},"nodeType":"YulFunctionCall","src":"20868:34:14"},"nodeType":"YulExpressionStatement","src":"20868:34:14"}]},"name":"store_literal_in_memory_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20781:6:14","type":""}],"src":"20683:226:14"},{"body":{"nodeType":"YulBlock","src":"21021:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21043:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21051:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21039:3:14"},"nodeType":"YulFunctionCall","src":"21039:14:14"},{"hexValue":"4f6e6c79204f776e65722043616e2041646420546f6b656e73","kind":"string","nodeType":"YulLiteral","src":"21055:27:14","type":"","value":"Only Owner Can Add Tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21032:6:14"},"nodeType":"YulFunctionCall","src":"21032:51:14"},"nodeType":"YulExpressionStatement","src":"21032:51:14"}]},"name":"store_literal_in_memory_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21013:6:14","type":""}],"src":"20915:175:14"},{"body":{"nodeType":"YulBlock","src":"21202:72:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21224:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21232:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21220:3:14"},"nodeType":"YulFunctionCall","src":"21220:14:14"},{"hexValue":"546869732050726f706f73616c20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"21236:30:14","type":"","value":"This Proposal does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21213:6:14"},"nodeType":"YulFunctionCall","src":"21213:54:14"},"nodeType":"YulExpressionStatement","src":"21213:54:14"}]},"name":"store_literal_in_memory_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21194:6:14","type":""}],"src":"21096:178:14"},{"body":{"nodeType":"YulBlock","src":"21386:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21408:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21416:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21404:3:14"},"nodeType":"YulFunctionCall","src":"21404:14:14"},{"hexValue":"54686520646561646c696e65206861732070617373656420666f722074686973","kind":"string","nodeType":"YulLiteral","src":"21420:34:14","type":"","value":"The deadline has passed for this"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21397:6:14"},"nodeType":"YulFunctionCall","src":"21397:58:14"},"nodeType":"YulExpressionStatement","src":"21397:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21476:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21484:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21472:3:14"},"nodeType":"YulFunctionCall","src":"21472:15:14"},{"hexValue":"2050726f706f73616c","kind":"string","nodeType":"YulLiteral","src":"21489:11:14","type":"","value":" Proposal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21465:6:14"},"nodeType":"YulFunctionCall","src":"21465:36:14"},"nodeType":"YulExpressionStatement","src":"21465:36:14"}]},"name":"store_literal_in_memory_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21378:6:14","type":""}],"src":"21280:228:14"},{"body":{"nodeType":"YulBlock","src":"21620:67:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21642:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21650:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21638:3:14"},"nodeType":"YulFunctionCall","src":"21638:14:14"},{"hexValue":"436f756e7420616c726561647920636f6e647563746564","kind":"string","nodeType":"YulLiteral","src":"21654:25:14","type":"","value":"Count already conducted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21631:6:14"},"nodeType":"YulFunctionCall","src":"21631:49:14"},"nodeType":"YulExpressionStatement","src":"21631:49:14"}]},"name":"store_literal_in_memory_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21612:6:14","type":""}],"src":"21514:173:14"},{"body":{"nodeType":"YulBlock","src":"21799:68:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21821:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21829:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21817:3:14"},"nodeType":"YulFunctionCall","src":"21817:14:14"},{"hexValue":"566f74696e6720686173206e6f7420636f6e636c75646564","kind":"string","nodeType":"YulLiteral","src":"21833:26:14","type":"","value":"Voting has not concluded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21810:6:14"},"nodeType":"YulFunctionCall","src":"21810:50:14"},"nodeType":"YulExpressionStatement","src":"21810:50:14"}]},"name":"store_literal_in_memory_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21791:6:14","type":""}],"src":"21693:174:14"},{"body":{"nodeType":"YulBlock","src":"21979:70:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22001:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22009:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21997:3:14"},"nodeType":"YulFunctionCall","src":"21997:14:14"},{"hexValue":"4f6e6c79204f776e65722043616e20436f756e7420566f746573","kind":"string","nodeType":"YulLiteral","src":"22013:28:14","type":"","value":"Only Owner Can Count Votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21990:6:14"},"nodeType":"YulFunctionCall","src":"21990:52:14"},"nodeType":"YulExpressionStatement","src":"21990:52:14"}]},"name":"store_literal_in_memory_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21971:6:14","type":""}],"src":"21873:176:14"},{"body":{"nodeType":"YulBlock","src":"22161:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22183:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22191:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22179:3:14"},"nodeType":"YulFunctionCall","src":"22179:14:14"},{"hexValue":"596f752063616e206e6f7420766f7465206f6e20746869732050726f706f7361","kind":"string","nodeType":"YulLiteral","src":"22195:34:14","type":"","value":"You can not vote on this Proposa"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22172:6:14"},"nodeType":"YulFunctionCall","src":"22172:58:14"},"nodeType":"YulExpressionStatement","src":"22172:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22251:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22259:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22247:3:14"},"nodeType":"YulFunctionCall","src":"22247:15:14"},{"hexValue":"6c","kind":"string","nodeType":"YulLiteral","src":"22264:3:14","type":"","value":"l"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22240:6:14"},"nodeType":"YulFunctionCall","src":"22240:28:14"},"nodeType":"YulExpressionStatement","src":"22240:28:14"}]},"name":"store_literal_in_memory_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22153:6:14","type":""}],"src":"22055:220:14"},{"body":{"nodeType":"YulBlock","src":"22387:121:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22409:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22417:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22405:3:14"},"nodeType":"YulFunctionCall","src":"22405:14:14"},{"hexValue":"4f6e6c79204e465420686f6c646572732063616e2070757420666f7274682050","kind":"string","nodeType":"YulLiteral","src":"22421:34:14","type":"","value":"Only NFT holders can put forth P"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22398:6:14"},"nodeType":"YulFunctionCall","src":"22398:58:14"},"nodeType":"YulExpressionStatement","src":"22398:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22477:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22485:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22473:3:14"},"nodeType":"YulFunctionCall","src":"22473:15:14"},{"hexValue":"726f706f73616c73","kind":"string","nodeType":"YulLiteral","src":"22490:10:14","type":"","value":"roposals"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22466:6:14"},"nodeType":"YulFunctionCall","src":"22466:35:14"},"nodeType":"YulExpressionStatement","src":"22466:35:14"}]},"name":"store_literal_in_memory_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22379:6:14","type":""}],"src":"22281:227:14"},{"body":{"nodeType":"YulBlock","src":"22557:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"22614:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22623:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22626:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22616:6:14"},"nodeType":"YulFunctionCall","src":"22616:12:14"},"nodeType":"YulExpressionStatement","src":"22616:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22580:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22605:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"22587:17:14"},"nodeType":"YulFunctionCall","src":"22587:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22577:2:14"},"nodeType":"YulFunctionCall","src":"22577:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22570:6:14"},"nodeType":"YulFunctionCall","src":"22570:43:14"},"nodeType":"YulIf","src":"22567:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22550:5:14","type":""}],"src":"22514:122:14"},{"body":{"nodeType":"YulBlock","src":"22682:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"22736:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22745:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22748:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22738:6:14"},"nodeType":"YulFunctionCall","src":"22738:12:14"},"nodeType":"YulExpressionStatement","src":"22738:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22705:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22727:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22712:14:14"},"nodeType":"YulFunctionCall","src":"22712:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22702:2:14"},"nodeType":"YulFunctionCall","src":"22702:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22695:6:14"},"nodeType":"YulFunctionCall","src":"22695:40:14"},"nodeType":"YulIf","src":"22692:60:14"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22675:5:14","type":""}],"src":"22642:116:14"},{"body":{"nodeType":"YulBlock","src":"22807:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"22864:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22873:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22876:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22866:6:14"},"nodeType":"YulFunctionCall","src":"22866:12:14"},"nodeType":"YulExpressionStatement","src":"22866:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22830:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22855:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22837:17:14"},"nodeType":"YulFunctionCall","src":"22837:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22827:2:14"},"nodeType":"YulFunctionCall","src":"22827:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22820:6:14"},"nodeType":"YulFunctionCall","src":"22820:43:14"},"nodeType":"YulIf","src":"22817:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22800:5:14","type":""}],"src":"22764:122:14"}]},"contents":"{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_address__to_t_uint256_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_31c5bbcd25ec02a1aca05f42d95e18fd69b624915419fe0ed4a4f25ffef3a6b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have already voted on this P\")\n\n        mstore(add(memPtr, 32), \"roposal\")\n\n    }\n\n    function store_literal_in_memory_79123a9a8d7ca57e3c3018bd7e0ba577955a96b16c162695f0f3f0d5930ec0bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only Owner Can Add Tokens\")\n\n    }\n\n    function store_literal_in_memory_804837b9a7ec87c741b612e10c5d548886e2e626e43fcec234958c7fc7371a3c(memPtr) {\n\n        mstore(add(memPtr, 0), \"This Proposal does not exist\")\n\n    }\n\n    function store_literal_in_memory_a2d08b472260abf0acca494b0c66a77fc34385a917d793daaa57eda04fd50669(memPtr) {\n\n        mstore(add(memPtr, 0), \"The deadline has passed for this\")\n\n        mstore(add(memPtr, 32), \" Proposal\")\n\n    }\n\n    function store_literal_in_memory_bc2274443a965e42109fd9c9f49a16a7b13e89544ceeac66c6a23cf9393025ae(memPtr) {\n\n        mstore(add(memPtr, 0), \"Count already conducted\")\n\n    }\n\n    function store_literal_in_memory_c0383d40560e9a9427b8dff2a6a8171d3b483d93ca5d460ddcd9109b99b9a0f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Voting has not concluded\")\n\n    }\n\n    function store_literal_in_memory_def6a89e2bd632150d03d7c4e9b4801da727a81531163f7c0fd924febc2418e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only Owner Can Count Votes\")\n\n    }\n\n    function store_literal_in_memory_e598ab01948030997cba32f5dc0016ecd8a01e68d1683803312dc7e57f6764da(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can not vote on this Proposa\")\n\n        mstore(add(memPtr, 32), \"l\")\n\n    }\n\n    function store_literal_in_memory_f8c049eebf7adcb7da081e0bf12f991c18e0738203402d219f735b707780b383(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only NFT holders can put forth P\")\n\n        mstore(add(memPtr, 32), \"roposals\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063be8bb7ba1161005b578063be8bb7ba146100d8578063d1dbe7d8146100f4578063e9d3d16a1461012c578063fd0d101f1461015c5761007d565b80631614665c146100825780631840f0ca1461009e5780638da5cb5b146100ba575b600080fd5b61009c60048036038101906100979190610f19565b610178565b005b6100b860048036038101906100b39190610ebf565b61041b565b005b6100c261069c565b6040516100cf91906110fa565b60405180910390f35b6100f260048036038101906100ed9190610e47565b6106c0565b005b61010e60048036038101906101099190610ebf565b6107f7565b604051610123999897969594939291906112a2565b60405180910390f35b61014660048036038101906101419190610ebf565b6108f4565b604051610153919061125e565b60405180910390f35b61017660048036038101906101719190610ebf565b610918565b005b6004600083815260200190815260200160002060010160009054906101000a900460ff166101db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d29061117e565b60405180910390fd5b6101e582336109d2565b610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b9061121e565b60405180910390fd5b6004600083815260200190815260200160002060080160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc9061113e565b60405180910390fd5b600460008381526020019081526020016000206003015443111561031e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103159061119e565b60405180910390fd5b6000600460008481526020019081526020016000209050811561035a57806004016000815480929190610350906115b6565b9190505550610375565b80600501600081548092919061036f906115b6565b91905055505b60018160080160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f97a3ed91f0b116dc155f238ac92aa5b825720a7bb096f53156e05d9c8ab6a30a8160040154826005015433868660405161040e959493929190611382565b60405180910390a1505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a0906111fe565b60405180910390fd5b6004600082815260200190815260200160002060010160009054906101000a900460ff1661050c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105039061117e565b60405180910390fd5b60046000828152602001908152602001600020600301544311610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055b906111de565b60405180910390fd5b6004600082815260200190815260200160002060090160009054906101000a900460ff16156105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf906111be565b60405180910390fd5b60006004600083815260200190815260200160002090506004600083815260200190815260200160002060040154600460008481526020019081526020016000206005015410156106315760018160090160016101000a81548160ff0219169083151502179055505b60018160090160006101000a81548160ff0219169083151502179055507f4556fcf667ee704924eea359363d28f06708b744ad113340982b07ef9919fb91828260090160019054906101000a900460ff16604051610690929190611279565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106c933610aaa565b610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff9061123e565b60405180910390fd5b60006004600060015481526020019081526020016000209050600154816000018190555060018160010160006101000a81548160ff02191690831515021790555082816002019080519060200190610761929190610bb8565b5060644361076f9190611473565b81600301819055508181600601908051906020019061078f929190610c3e565b50815181600701819055507f3ec21697eb8018b62928e5f290d2bccf3af51e8b6cdf71fceab712977647bba9600154848451336040516107d29493929190611336565b60405180910390a1600160008154809291906107ed906115b6565b9190505550505050565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900460ff169080600201805461083390611553565b80601f016020809104026020016040519081016040528092919081815260200182805461085f90611553565b80156108ac5780601f10610881576101008083540402835291602001916108ac565b820191906000526020600020905b81548152906001019060200180831161088f57829003601f168201915b5050505050908060030154908060040154908060050154908060070154908060090160009054906101000a900460ff16908060090160019054906101000a900460ff16905089565b6002818154811061090457600080fd5b906000526020600020016000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d9061115e565b60405180910390fd5b600281908060018154018082558091505060019003906000526020600020016000909190919091505550565b600080600090505b6004600085815260200190815260200160002060060180549050811015610a9e578273ffffffffffffffffffffffffffffffffffffffff16600460008681526020019081526020016000206006018281548110610a3a57610a3961165d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a8b576001915050610aa4565b8080610a96906115b6565b9150506109da565b50600090505b92915050565b600080600090505b600280549050811015610bad576001600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e8560028581548110610b1357610b1261165d565b5b90600052602060002001546040518363ffffffff1660e01b8152600401610b3b929190611115565b60206040518083038186803b158015610b5357600080fd5b505afa158015610b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8b9190610eec565b10610b9a576001915050610bb3565b8080610ba5906115b6565b915050610ab2565b50600090505b919050565b828054610bc490611553565b90600052602060002090601f016020900481019282610be65760008555610c2d565b82601f10610bff57805160ff1916838001178555610c2d565b82800160010185558215610c2d579182015b82811115610c2c578251825591602001919060010190610c11565b5b509050610c3a9190610cc8565b5090565b828054828255906000526020600020908101928215610cb7579160200282015b82811115610cb65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c5e565b5b509050610cc49190610cc8565b5090565b5b80821115610ce1576000816000905550600101610cc9565b5090565b6000610cf8610cf3846113fa565b6113d5565b90508083825260208201905082856020860282011115610d1b57610d1a6116c0565b5b60005b85811015610d4b5781610d318882610d97565b845260208401935060208301925050600181019050610d1e565b5050509392505050565b6000610d68610d6384611426565b6113d5565b905082815260208101848484011115610d8457610d836116c5565b5b610d8f848285611511565b509392505050565b600081359050610da6816118ee565b92915050565b600082601f830112610dc157610dc06116bb565b5b8135610dd1848260208601610ce5565b91505092915050565b600081359050610de981611905565b92915050565b600082601f830112610e0457610e036116bb565b5b8135610e14848260208601610d55565b91505092915050565b600081359050610e2c8161191c565b92915050565b600081519050610e418161191c565b92915050565b60008060408385031215610e5e57610e5d6116cf565b5b600083013567ffffffffffffffff811115610e7c57610e7b6116ca565b5b610e8885828601610def565b925050602083013567ffffffffffffffff811115610ea957610ea86116ca565b5b610eb585828601610dac565b9150509250929050565b600060208284031215610ed557610ed46116cf565b5b6000610ee384828501610e1d565b91505092915050565b600060208284031215610f0257610f016116cf565b5b6000610f1084828501610e32565b91505092915050565b60008060408385031215610f3057610f2f6116cf565b5b6000610f3e85828601610e1d565b9250506020610f4f85828601610dda565b9150509250929050565b610f62816114c9565b82525050565b610f71816114db565b82525050565b6000610f8282611457565b610f8c8185611462565b9350610f9c818560208601611520565b610fa5816116d4565b840191505092915050565b6000610fbd602783611462565b9150610fc8826116e5565b604082019050919050565b6000610fe0601983611462565b9150610feb82611734565b602082019050919050565b6000611003601c83611462565b915061100e8261175d565b602082019050919050565b6000611026602983611462565b915061103182611786565b604082019050919050565b6000611049601783611462565b9150611054826117d5565b602082019050919050565b600061106c601883611462565b9150611077826117fe565b602082019050919050565b600061108f601a83611462565b915061109a82611827565b602082019050919050565b60006110b2602183611462565b91506110bd82611850565b604082019050919050565b60006110d5602883611462565b91506110e08261189f565b604082019050919050565b6110f481611507565b82525050565b600060208201905061110f6000830184610f59565b92915050565b600060408201905061112a6000830185610f59565b61113760208301846110eb565b9392505050565b6000602082019050818103600083015261115781610fb0565b9050919050565b6000602082019050818103600083015261117781610fd3565b9050919050565b6000602082019050818103600083015261119781610ff6565b9050919050565b600060208201905081810360008301526111b781611019565b9050919050565b600060208201905081810360008301526111d78161103c565b9050919050565b600060208201905081810360008301526111f78161105f565b9050919050565b6000602082019050818103600083015261121781611082565b9050919050565b60006020820190508181036000830152611237816110a5565b9050919050565b60006020820190508181036000830152611257816110c8565b9050919050565b600060208201905061127360008301846110eb565b92915050565b600060408201905061128e60008301856110eb565b61129b6020830184610f68565b9392505050565b6000610120820190506112b8600083018c6110eb565b6112c5602083018b610f68565b81810360408301526112d7818a610f77565b90506112e660608301896110eb565b6112f360808301886110eb565b61130060a08301876110eb565b61130d60c08301866110eb565b61131a60e0830185610f68565b611328610100830184610f68565b9a9950505050505050505050565b600060808201905061134b60008301876110eb565b818103602083015261135d8186610f77565b905061136c60408301856110eb565b6113796060830184610f59565b95945050505050565b600060a08201905061139760008301886110eb565b6113a460208301876110eb565b6113b16040830186610f59565b6113be60608301856110eb565b6113cb6080830184610f68565b9695505050505050565b60006113df6113f0565b90506113eb8282611585565b919050565b6000604051905090565b600067ffffffffffffffff8211156114155761141461168c565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156114415761144061168c565b5b61144a826116d4565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061147e82611507565b915061148983611507565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114be576114bd6115ff565b5b828201905092915050565b60006114d4826114e7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561153e578082015181840152602081019050611523565b8381111561154d576000848401525b50505050565b6000600282049050600182168061156b57607f821691505b6020821081141561157f5761157e61162e565b5b50919050565b61158e826116d4565b810181811067ffffffffffffffff821117156115ad576115ac61168c565b5b80604052505050565b60006115c182611507565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115f4576115f36115ff565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f596f75206861766520616c726561647920766f746564206f6e2074686973205060008201527f726f706f73616c00000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79204f776e65722043616e2041646420546f6b656e7300000000000000600082015250565b7f546869732050726f706f73616c20646f6573206e6f7420657869737400000000600082015250565b7f54686520646561646c696e65206861732070617373656420666f72207468697360008201527f2050726f706f73616c0000000000000000000000000000000000000000000000602082015250565b7f436f756e7420616c726561647920636f6e647563746564000000000000000000600082015250565b7f566f74696e6720686173206e6f7420636f6e636c756465640000000000000000600082015250565b7f4f6e6c79204f776e65722043616e20436f756e7420566f746573000000000000600082015250565b7f596f752063616e206e6f7420766f7465206f6e20746869732050726f706f736160008201527f6c00000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79204e465420686f6c646572732063616e2070757420666f727468205060008201527f726f706f73616c73000000000000000000000000000000000000000000000000602082015250565b6118f7816114c9565b811461190257600080fd5b50565b61190e816114db565b811461191957600080fd5b50565b61192581611507565b811461193057600080fd5b5056fea264697066735822122034c4aaf72a811028d7d4614169f45cdb99a3ea3a32bb07da003630d9b6356b0d64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBE8BB7BA GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBE8BB7BA EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xD1DBE7D8 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xE9D3D16A EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xFD0D101F EQ PUSH2 0x15C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x1614665C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x1840F0CA EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x178 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2 SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E5 DUP3 CALLER PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0x224 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD NUMBER GT ISZERO PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 ISZERO PUSH2 0x35A JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x350 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x375 JUMP JUMPDEST DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x36F SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x8 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x97A3ED91F0B116DC155F238AC92AA5B825720A7BB096F53156E05D9C8AB6A30A DUP2 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x5 ADD SLOAD CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x40E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x503 SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD NUMBER GT PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55B SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x1 DUP2 PUSH1 0x9 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x4556FCF667EE704924EEA359363D28F06708B744AD113340982B07EF9919FB91 DUP3 DUP3 PUSH1 0x9 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x690 SWAP3 SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6C9 CALLER PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 SLOAD DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x761 SWAP3 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST POP PUSH1 0x64 NUMBER PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x78F SWAP3 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST POP DUP2 MLOAD DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x3EC21697EB8018B62928E5F290D2BCCF3AF51E8B6CDF71FCEAB712977647BBA9 PUSH1 0x1 SLOAD DUP5 DUP5 MLOAD CALLER PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x833 SWAP1 PUSH2 0x1553 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x85F SWAP1 PUSH2 0x1553 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x881 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA9E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA3A JUMPI PUSH2 0xA39 PUSH2 0x165D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA8B JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xAA4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xA96 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9DA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBAD JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E DUP6 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xB13 JUMPI PUSH2 0xB12 PUSH2 0x165D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3B SWAP3 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST LT PUSH2 0xB9A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xBB3 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xBA5 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB2 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xBC4 SWAP1 PUSH2 0x1553 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xBE6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xC2D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xBFF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xC2D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xC2D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC2C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xCB7 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xCB6 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC5E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xCC4 SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xCE1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xCC9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF8 PUSH2 0xCF3 DUP5 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1A PUSH2 0x16C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD4B JUMPI DUP2 PUSH2 0xD31 DUP9 DUP3 PUSH2 0xD97 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD1E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 PUSH2 0xD63 DUP5 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0x16C5 JUMP JUMPDEST JUMPDEST PUSH2 0xD8F DUP5 DUP3 DUP6 PUSH2 0x1511 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA6 DUP2 PUSH2 0x18EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0x16BB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDD1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE9 DUP2 PUSH2 0x1905 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE04 JUMPI PUSH2 0xE03 PUSH2 0x16BB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE14 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2C DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE41 DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7B PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH2 0xE88 DUP6 DUP3 DUP7 ADD PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0xEA8 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH2 0xEB5 DUP6 DUP3 DUP7 ADD PUSH2 0xDAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED5 JUMPI PUSH2 0xED4 PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE3 DUP5 DUP3 DUP6 ADD PUSH2 0xE1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF02 JUMPI PUSH2 0xF01 PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF10 DUP5 DUP3 DUP6 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF30 JUMPI PUSH2 0xF2F PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3E DUP6 DUP3 DUP7 ADD PUSH2 0xE1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF4F DUP6 DUP3 DUP7 ADD PUSH2 0xDDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF62 DUP2 PUSH2 0x14C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF71 DUP2 PUSH2 0x14DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF82 DUP3 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0xF8C DUP2 DUP6 PUSH2 0x1462 JUMP JUMPDEST SWAP4 POP PUSH2 0xF9C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1520 JUMP JUMPDEST PUSH2 0xFA5 DUP2 PUSH2 0x16D4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBD PUSH1 0x27 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC8 DUP3 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE0 PUSH1 0x19 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0xFEB DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1003 PUSH1 0x1C DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x100E DUP3 PUSH2 0x175D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1026 PUSH1 0x29 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x1031 DUP3 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1049 PUSH1 0x17 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x1054 DUP3 PUSH2 0x17D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106C PUSH1 0x18 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x1077 DUP3 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108F PUSH1 0x1A DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x109A DUP3 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B2 PUSH1 0x21 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x10BD DUP3 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D5 PUSH1 0x28 DUP4 PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E0 DUP3 PUSH2 0x189F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F4 DUP2 PUSH2 0x1507 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x112A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x1137 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1157 DUP2 PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1177 DUP2 PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1197 DUP2 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B7 DUP2 PUSH2 0x1019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D7 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F7 DUP2 PUSH2 0x105F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1217 DUP2 PUSH2 0x1082 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1237 DUP2 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1257 DUP2 PUSH2 0x10C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1273 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x128E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x129B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF68 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x12B8 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x12C5 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0xF68 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x12D7 DUP2 DUP11 PUSH2 0xF77 JUMP JUMPDEST SWAP1 POP PUSH2 0x12E6 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x12F3 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x1300 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x130D PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x131A PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0xF68 JUMP JUMPDEST PUSH2 0x1328 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0xF68 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x134B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x10EB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x135D DUP2 DUP7 PUSH2 0xF77 JUMP JUMPDEST SWAP1 POP PUSH2 0x136C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x1379 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xF59 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1397 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x13A4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x13B1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x13BE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x13CB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF68 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DF PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x13EB DUP3 DUP3 PUSH2 0x1585 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1415 JUMPI PUSH2 0x1414 PUSH2 0x168C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1441 JUMPI PUSH2 0x1440 PUSH2 0x168C JUMP JUMPDEST JUMPDEST PUSH2 0x144A DUP3 PUSH2 0x16D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147E DUP3 PUSH2 0x1507 JUMP JUMPDEST SWAP2 POP PUSH2 0x1489 DUP4 PUSH2 0x1507 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x14BE JUMPI PUSH2 0x14BD PUSH2 0x15FF JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D4 DUP3 PUSH2 0x14E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1523 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x154D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x156B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x157F JUMPI PUSH2 0x157E PUSH2 0x162E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158E DUP3 PUSH2 0x16D4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15AD JUMPI PUSH2 0x15AC PUSH2 0x168C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C1 DUP3 PUSH2 0x1507 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x15F3 PUSH2 0x15FF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C726561647920766F746564206F6E20746869732050 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F706F73616C00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79204F776E65722043616E2041646420546F6B656E7300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546869732050726F706F73616C20646F6573206E6F7420657869737400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54686520646561646C696E65206861732070617373656420666F722074686973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2050726F706F73616C0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F756E7420616C726561647920636F6E647563746564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x566F74696E6720686173206E6F7420636F6E636C756465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79204F776E65722043616E20436F756E7420566F746573000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E206E6F7420766F7465206F6E20746869732050726F706F7361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79204E465420686F6C646572732063616E2070757420666F7274682050 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F706F73616C73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x18F7 DUP2 PUSH2 0x14C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x190E DUP2 PUSH2 0x14DB JUMP JUMPDEST DUP2 EQ PUSH2 0x1919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1925 DUP2 PUSH2 0x1507 JUMP JUMPDEST DUP2 EQ PUSH2 0x1930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xC4 0xAA 0xF7 0x2A DUP2 LT 0x28 0xD7 0xD4 PUSH2 0x4169 DELEGATECALL 0x5C 0xDB SWAP10 LOG3 0xEA GASPRICE ORIGIN 0xBB SMOD 0xDA STOP CALLDATASIZE ADDRESS 0xD9 0xB6 CALLDATALOAD PUSH12 0xD64736F6C63430008070033 ","sourceMap":"166:3790:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:697;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3191:595;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;198:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1851:630;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;818:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;250:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3793:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2488:697;2562:9;:14;2572:3;2562:14;;;;;;;;;;;:21;;;;;;;;;;;;2554:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2634:37;2655:3;2660:10;2634:20;:37::i;:::-;2626:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2728:9;:14;2738:3;2728:14;;;;;;;;;;;:25;;:37;2754:10;2728:37;;;;;;;;;;;;;;;;;;;;;;;;;2727:38;2719:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;2843:9;:14;2853:3;2843:14;;;;;;;;;;;:23;;;2827:12;:39;;2819:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;2923:18;2944:9;:14;2954:3;2944:14;;;;;;;;;;;2923:35;;2972:5;2969:88;;;2993:1;:9;;;:11;;;;;;;;;:::i;:::-;;;;;;2969:88;;;3033:1;:11;;;:13;;;;;;;;;:::i;:::-;;;;;;2969:88;3094:4;3067:1;:12;;:24;3080:10;3067:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3114:55;3122:1;:9;;;3133:1;:11;;;3146:10;3158:3;3163:5;3114:55;;;;;;;;;;:::i;:::-;;;;;;;;2544:641;2488:697;;:::o;3191:595::-;3263:5;;;;;;;;;;3249:19;;:10;:19;;;3241:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3317:9;:14;3327:3;3317:14;;;;;;;;;;;:21;;;;;;;;;;;;3309:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3404:9;:14;3414:3;3404:14;;;;;;;;;;;:23;;;3389:12;:38;3381:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3475:9;:14;3485:3;3475:14;;;;;;;;;;;:29;;;;;;;;;;;;3474:30;3466:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3543:18;3564:9;:14;3574:3;3564:14;;;;;;;;;;;3543:35;;3627:9;:14;3637:3;3627:14;;;;;;;;;;;:22;;;3600:9;:14;3610:3;3600:14;;;;;;;;;;;:24;;;:49;3597:105;;;3675:4;3664:1;:8;;;:15;;;;;;;;;;;;;;;;;;3597:105;3731:4;3712:1;:16;;;:23;;;;;;;;;;;;;;;;;;3751:28;3765:3;3770:1;:8;;;;;;;;;;;;3751:28;;;;;;;:::i;:::-;;;;;;;;3231:555;3191:595;:::o;198:20::-;;;;;;;;;;;;:::o;1851:630::-;1955:36;1980:10;1955:24;:36::i;:::-;1947:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;2047:28;2078:9;:23;2088:12;;2078:23;;;;;;;;;;;2047:54;;2128:12;;2111:11;:14;;:29;;;;2171:4;2150:11;:18;;;:25;;;;;;;;;;;;;;;;;;2211:12;2185:11;:23;;:38;;;;;;;;;;;;:::i;:::-;;2271:3;2256:12;:18;;;;:::i;:::-;2233:11;:20;;:41;;;;2306:8;2284:11;:19;;:30;;;;;;;;;;;;:::i;:::-;;2347:8;:15;2324:11;:20;;:38;;;;2378:72;2394:12;;2408;2422:8;:15;2439:10;2378:72;;;;;;;;;:::i;:::-;;;;;;;;2460:12;;:14;;;;;;;;;:::i;:::-;;;;;;1937:544;1851:630;;:::o;818:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;250:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3793:156::-;3870:5;;;;;;;;;;3856:19;;:10;:19;;;3848:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3916:11;3933:8;3916:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3793:156;:::o;1541:303::-;1631:4;1656:9;1668:1;1656:13;;1651:165;1675:9;:14;1685:3;1675:14;;;;;;;;;;;:22;;:29;;;;1671:1;:33;1651:165;;;1758:6;1729:35;;:9;:14;1739:3;1729:14;;;;;;;;;;;:22;;1752:1;1729:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:35;;;1725:81;;;1787:4;1780:11;;;;;1725:81;1706:3;;;;;:::i;:::-;;;;1651:165;;;;1832:5;1825:12;;1541:303;;;;;:::o;1228:307::-;1315:4;1339:6;1348:1;1339:10;;1335:172;1355:11;:18;;;;1351:1;:22;1335:172;;;1451:1;1396:11;;;;;;;;;;;:21;;;1418:12;1432:11;1444:1;1432:14;;;;;;;;:::i;:::-;;;;;;;;;;1396:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;1393:104;;1478:4;1471:11;;;;;1393:104;1375:3;;;;;:::i;:::-;;;;1335:172;;;;1523:5;1516:12;;1228:307;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:14:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:412::-;830:5;855:66;871:49;913:6;871:49;:::i;:::-;855:66;:::i;:::-;846:75;;944:6;937:5;930:21;982:4;975:5;971:16;1020:3;1011:6;1006:3;1002:16;999:25;996:112;;;1027:79;;:::i;:::-;996:112;1117:41;1151:6;1146:3;1141;1117:41;:::i;:::-;836:328;752:412;;;;;:::o;1170:139::-;1216:5;1254:6;1241:20;1232:29;;1270:33;1297:5;1270:33;:::i;:::-;1170:139;;;;:::o;1332:370::-;1403:5;1452:3;1445:4;1437:6;1433:17;1429:27;1419:122;;1460:79;;:::i;:::-;1419:122;1577:6;1564:20;1602:94;1692:3;1684:6;1677:4;1669:6;1665:17;1602:94;:::i;:::-;1593:103;;1409:293;1332:370;;;;:::o;1708:133::-;1751:5;1789:6;1776:20;1767:29;;1805:30;1829:5;1805:30;:::i;:::-;1708:133;;;;:::o;1861:340::-;1917:5;1966:3;1959:4;1951:6;1947:17;1943:27;1933:122;;1974:79;;:::i;:::-;1933:122;2091:6;2078:20;2116:79;2191:3;2183:6;2176:4;2168:6;2164:17;2116:79;:::i;:::-;2107:88;;1923:278;1861:340;;;;:::o;2207:139::-;2253:5;2291:6;2278:20;2269:29;;2307:33;2334:5;2307:33;:::i;:::-;2207:139;;;;:::o;2352:143::-;2409:5;2440:6;2434:13;2425:22;;2456:33;2483:5;2456:33;:::i;:::-;2352:143;;;;:::o;2501:864::-;2604:6;2612;2661:2;2649:9;2640:7;2636:23;2632:32;2629:119;;;2667:79;;:::i;:::-;2629:119;2815:1;2804:9;2800:17;2787:31;2845:18;2837:6;2834:30;2831:117;;;2867:79;;:::i;:::-;2831:117;2972:63;3027:7;3018:6;3007:9;3003:22;2972:63;:::i;:::-;2962:73;;2758:287;3112:2;3101:9;3097:18;3084:32;3143:18;3135:6;3132:30;3129:117;;;3165:79;;:::i;:::-;3129:117;3270:78;3340:7;3331:6;3320:9;3316:22;3270:78;:::i;:::-;3260:88;;3055:303;2501:864;;;;;:::o;3371:329::-;3430:6;3479:2;3467:9;3458:7;3454:23;3450:32;3447:119;;;3485:79;;:::i;:::-;3447:119;3605:1;3630:53;3675:7;3666:6;3655:9;3651:22;3630:53;:::i;:::-;3620:63;;3576:117;3371:329;;;;:::o;3706:351::-;3776:6;3825:2;3813:9;3804:7;3800:23;3796:32;3793:119;;;3831:79;;:::i;:::-;3793:119;3951:1;3976:64;4032:7;4023:6;4012:9;4008:22;3976:64;:::i;:::-;3966:74;;3922:128;3706:351;;;;:::o;4063:468::-;4128:6;4136;4185:2;4173:9;4164:7;4160:23;4156:32;4153:119;;;4191:79;;:::i;:::-;4153:119;4311:1;4336:53;4381:7;4372:6;4361:9;4357:22;4336:53;:::i;:::-;4326:63;;4282:117;4438:2;4464:50;4506:7;4497:6;4486:9;4482:22;4464:50;:::i;:::-;4454:60;;4409:115;4063:468;;;;;:::o;4537:118::-;4624:24;4642:5;4624:24;:::i;:::-;4619:3;4612:37;4537:118;;:::o;4661:109::-;4742:21;4757:5;4742:21;:::i;:::-;4737:3;4730:34;4661:109;;:::o;4776:364::-;4864:3;4892:39;4925:5;4892:39;:::i;:::-;4947:71;5011:6;5006:3;4947:71;:::i;:::-;4940:78;;5027:52;5072:6;5067:3;5060:4;5053:5;5049:16;5027:52;:::i;:::-;5104:29;5126:6;5104:29;:::i;:::-;5099:3;5095:39;5088:46;;4868:272;4776:364;;;;:::o;5146:366::-;5288:3;5309:67;5373:2;5368:3;5309:67;:::i;:::-;5302:74;;5385:93;5474:3;5385:93;:::i;:::-;5503:2;5498:3;5494:12;5487:19;;5146:366;;;:::o;5518:::-;5660:3;5681:67;5745:2;5740:3;5681:67;:::i;:::-;5674:74;;5757:93;5846:3;5757:93;:::i;:::-;5875:2;5870:3;5866:12;5859:19;;5518:366;;;:::o;5890:::-;6032:3;6053:67;6117:2;6112:3;6053:67;:::i;:::-;6046:74;;6129:93;6218:3;6129:93;:::i;:::-;6247:2;6242:3;6238:12;6231:19;;5890:366;;;:::o;6262:::-;6404:3;6425:67;6489:2;6484:3;6425:67;:::i;:::-;6418:74;;6501:93;6590:3;6501:93;:::i;:::-;6619:2;6614:3;6610:12;6603:19;;6262:366;;;:::o;6634:::-;6776:3;6797:67;6861:2;6856:3;6797:67;:::i;:::-;6790:74;;6873:93;6962:3;6873:93;:::i;:::-;6991:2;6986:3;6982:12;6975:19;;6634:366;;;:::o;7006:::-;7148:3;7169:67;7233:2;7228:3;7169:67;:::i;:::-;7162:74;;7245:93;7334:3;7245:93;:::i;:::-;7363:2;7358:3;7354:12;7347:19;;7006:366;;;:::o;7378:::-;7520:3;7541:67;7605:2;7600:3;7541:67;:::i;:::-;7534:74;;7617:93;7706:3;7617:93;:::i;:::-;7735:2;7730:3;7726:12;7719:19;;7378:366;;;:::o;7750:::-;7892:3;7913:67;7977:2;7972:3;7913:67;:::i;:::-;7906:74;;7989:93;8078:3;7989:93;:::i;:::-;8107:2;8102:3;8098:12;8091:19;;7750:366;;;:::o;8122:::-;8264:3;8285:67;8349:2;8344:3;8285:67;:::i;:::-;8278:74;;8361:93;8450:3;8361:93;:::i;:::-;8479:2;8474:3;8470:12;8463:19;;8122:366;;;:::o;8494:118::-;8581:24;8599:5;8581:24;:::i;:::-;8576:3;8569:37;8494:118;;:::o;8618:222::-;8711:4;8749:2;8738:9;8734:18;8726:26;;8762:71;8830:1;8819:9;8815:17;8806:6;8762:71;:::i;:::-;8618:222;;;;:::o;8846:332::-;8967:4;9005:2;8994:9;8990:18;8982:26;;9018:71;9086:1;9075:9;9071:17;9062:6;9018:71;:::i;:::-;9099:72;9167:2;9156:9;9152:18;9143:6;9099:72;:::i;:::-;8846:332;;;;;:::o;9184:419::-;9350:4;9388:2;9377:9;9373:18;9365:26;;9437:9;9431:4;9427:20;9423:1;9412:9;9408:17;9401:47;9465:131;9591:4;9465:131;:::i;:::-;9457:139;;9184:419;;;:::o;9609:::-;9775:4;9813:2;9802:9;9798:18;9790:26;;9862:9;9856:4;9852:20;9848:1;9837:9;9833:17;9826:47;9890:131;10016:4;9890:131;:::i;:::-;9882:139;;9609:419;;;:::o;10034:::-;10200:4;10238:2;10227:9;10223:18;10215:26;;10287:9;10281:4;10277:20;10273:1;10262:9;10258:17;10251:47;10315:131;10441:4;10315:131;:::i;:::-;10307:139;;10034:419;;;:::o;10459:::-;10625:4;10663:2;10652:9;10648:18;10640:26;;10712:9;10706:4;10702:20;10698:1;10687:9;10683:17;10676:47;10740:131;10866:4;10740:131;:::i;:::-;10732:139;;10459:419;;;:::o;10884:::-;11050:4;11088:2;11077:9;11073:18;11065:26;;11137:9;11131:4;11127:20;11123:1;11112:9;11108:17;11101:47;11165:131;11291:4;11165:131;:::i;:::-;11157:139;;10884:419;;;:::o;11309:::-;11475:4;11513:2;11502:9;11498:18;11490:26;;11562:9;11556:4;11552:20;11548:1;11537:9;11533:17;11526:47;11590:131;11716:4;11590:131;:::i;:::-;11582:139;;11309:419;;;:::o;11734:::-;11900:4;11938:2;11927:9;11923:18;11915:26;;11987:9;11981:4;11977:20;11973:1;11962:9;11958:17;11951:47;12015:131;12141:4;12015:131;:::i;:::-;12007:139;;11734:419;;;:::o;12159:::-;12325:4;12363:2;12352:9;12348:18;12340:26;;12412:9;12406:4;12402:20;12398:1;12387:9;12383:17;12376:47;12440:131;12566:4;12440:131;:::i;:::-;12432:139;;12159:419;;;:::o;12584:::-;12750:4;12788:2;12777:9;12773:18;12765:26;;12837:9;12831:4;12827:20;12823:1;12812:9;12808:17;12801:47;12865:131;12991:4;12865:131;:::i;:::-;12857:139;;12584:419;;;:::o;13009:222::-;13102:4;13140:2;13129:9;13125:18;13117:26;;13153:71;13221:1;13210:9;13206:17;13197:6;13153:71;:::i;:::-;13009:222;;;;:::o;13237:320::-;13352:4;13390:2;13379:9;13375:18;13367:26;;13403:71;13471:1;13460:9;13456:17;13447:6;13403:71;:::i;:::-;13484:66;13546:2;13535:9;13531:18;13522:6;13484:66;:::i;:::-;13237:320;;;;;:::o;13563:1163::-;13882:4;13920:3;13909:9;13905:19;13897:27;;13934:71;14002:1;13991:9;13987:17;13978:6;13934:71;:::i;:::-;14015:66;14077:2;14066:9;14062:18;14053:6;14015:66;:::i;:::-;14128:9;14122:4;14118:20;14113:2;14102:9;14098:18;14091:48;14156:78;14229:4;14220:6;14156:78;:::i;:::-;14148:86;;14244:72;14312:2;14301:9;14297:18;14288:6;14244:72;:::i;:::-;14326:73;14394:3;14383:9;14379:19;14370:6;14326:73;:::i;:::-;14409;14477:3;14466:9;14462:19;14453:6;14409:73;:::i;:::-;14492;14560:3;14549:9;14545:19;14536:6;14492:73;:::i;:::-;14575:67;14637:3;14626:9;14622:19;14613:6;14575:67;:::i;:::-;14652;14714:3;14703:9;14699:19;14690:6;14652:67;:::i;:::-;13563:1163;;;;;;;;;;;;:::o;14732:644::-;14929:4;14967:3;14956:9;14952:19;14944:27;;14981:71;15049:1;15038:9;15034:17;15025:6;14981:71;:::i;:::-;15099:9;15093:4;15089:20;15084:2;15073:9;15069:18;15062:48;15127:78;15200:4;15191:6;15127:78;:::i;:::-;15119:86;;15215:72;15283:2;15272:9;15268:18;15259:6;15215:72;:::i;:::-;15297;15365:2;15354:9;15350:18;15341:6;15297:72;:::i;:::-;14732:644;;;;;;;:::o;15382:652::-;15581:4;15619:3;15608:9;15604:19;15596:27;;15633:71;15701:1;15690:9;15686:17;15677:6;15633:71;:::i;:::-;15714:72;15782:2;15771:9;15767:18;15758:6;15714:72;:::i;:::-;15796;15864:2;15853:9;15849:18;15840:6;15796:72;:::i;:::-;15878;15946:2;15935:9;15931:18;15922:6;15878:72;:::i;:::-;15960:67;16022:3;16011:9;16007:19;15998:6;15960:67;:::i;:::-;15382:652;;;;;;;;:::o;16040:129::-;16074:6;16101:20;;:::i;:::-;16091:30;;16130:33;16158:4;16150:6;16130:33;:::i;:::-;16040:129;;;:::o;16175:75::-;16208:6;16241:2;16235:9;16225:19;;16175:75;:::o;16256:311::-;16333:4;16423:18;16415:6;16412:30;16409:56;;;16445:18;;:::i;:::-;16409:56;16495:4;16487:6;16483:17;16475:25;;16555:4;16549;16545:15;16537:23;;16256:311;;;:::o;16573:308::-;16635:4;16725:18;16717:6;16714:30;16711:56;;;16747:18;;:::i;:::-;16711:56;16785:29;16807:6;16785:29;:::i;:::-;16777:37;;16869:4;16863;16859:15;16851:23;;16573:308;;;:::o;16887:99::-;16939:6;16973:5;16967:12;16957:22;;16887:99;;;:::o;16992:169::-;17076:11;17110:6;17105:3;17098:19;17150:4;17145:3;17141:14;17126:29;;16992:169;;;;:::o;17167:305::-;17207:3;17226:20;17244:1;17226:20;:::i;:::-;17221:25;;17260:20;17278:1;17260:20;:::i;:::-;17255:25;;17414:1;17346:66;17342:74;17339:1;17336:81;17333:107;;;17420:18;;:::i;:::-;17333:107;17464:1;17461;17457:9;17450:16;;17167:305;;;;:::o;17478:96::-;17515:7;17544:24;17562:5;17544:24;:::i;:::-;17533:35;;17478:96;;;:::o;17580:90::-;17614:7;17657:5;17650:13;17643:21;17632:32;;17580:90;;;:::o;17676:126::-;17713:7;17753:42;17746:5;17742:54;17731:65;;17676:126;;;:::o;17808:77::-;17845:7;17874:5;17863:16;;17808:77;;;:::o;17891:154::-;17975:6;17970:3;17965;17952:30;18037:1;18028:6;18023:3;18019:16;18012:27;17891:154;;;:::o;18051:307::-;18119:1;18129:113;18143:6;18140:1;18137:13;18129:113;;;18228:1;18223:3;18219:11;18213:18;18209:1;18204:3;18200:11;18193:39;18165:2;18162:1;18158:10;18153:15;;18129:113;;;18260:6;18257:1;18254:13;18251:101;;;18340:1;18331:6;18326:3;18322:16;18315:27;18251:101;18100:258;18051:307;;;:::o;18364:320::-;18408:6;18445:1;18439:4;18435:12;18425:22;;18492:1;18486:4;18482:12;18513:18;18503:81;;18569:4;18561:6;18557:17;18547:27;;18503:81;18631:2;18623:6;18620:14;18600:18;18597:38;18594:84;;;18650:18;;:::i;:::-;18594:84;18415:269;18364:320;;;:::o;18690:281::-;18773:27;18795:4;18773:27;:::i;:::-;18765:6;18761:40;18903:6;18891:10;18888:22;18867:18;18855:10;18852:34;18849:62;18846:88;;;18914:18;;:::i;:::-;18846:88;18954:10;18950:2;18943:22;18733:238;18690:281;;:::o;18977:233::-;19016:3;19039:24;19057:5;19039:24;:::i;:::-;19030:33;;19085:66;19078:5;19075:77;19072:103;;;19155:18;;:::i;:::-;19072:103;19202:1;19195:5;19191:13;19184:20;;18977:233;;;:::o;19216:180::-;19264:77;19261:1;19254:88;19361:4;19358:1;19351:15;19385:4;19382:1;19375:15;19402:180;19450:77;19447:1;19440:88;19547:4;19544:1;19537:15;19571:4;19568:1;19561:15;19588:180;19636:77;19633:1;19626:88;19733:4;19730:1;19723:15;19757:4;19754:1;19747:15;19774:180;19822:77;19819:1;19812:88;19919:4;19916:1;19909:15;19943:4;19940:1;19933:15;19960:117;20069:1;20066;20059:12;20083:117;20192:1;20189;20182:12;20206:117;20315:1;20312;20305:12;20329:117;20438:1;20435;20428:12;20452:117;20561:1;20558;20551:12;20575:102;20616:6;20667:2;20663:7;20658:2;20651:5;20647:14;20643:28;20633:38;;20575:102;;;:::o;20683:226::-;20823:34;20819:1;20811:6;20807:14;20800:58;20892:9;20887:2;20879:6;20875:15;20868:34;20683:226;:::o;20915:175::-;21055:27;21051:1;21043:6;21039:14;21032:51;20915:175;:::o;21096:178::-;21236:30;21232:1;21224:6;21220:14;21213:54;21096:178;:::o;21280:228::-;21420:34;21416:1;21408:6;21404:14;21397:58;21489:11;21484:2;21476:6;21472:15;21465:36;21280:228;:::o;21514:173::-;21654:25;21650:1;21642:6;21638:14;21631:49;21514:173;:::o;21693:174::-;21833:26;21829:1;21821:6;21817:14;21810:50;21693:174;:::o;21873:176::-;22013:28;22009:1;22001:6;21997:14;21990:52;21873:176;:::o;22055:220::-;22195:34;22191:1;22183:6;22179:14;22172:58;22264:3;22259:2;22251:6;22247:15;22240:28;22055:220;:::o;22281:227::-;22421:34;22417:1;22409:6;22405:14;22398:58;22490:10;22485:2;22477:6;22473:15;22466:35;22281:227;:::o;22514:122::-;22587:24;22605:5;22587:24;:::i;:::-;22580:5;22577:35;22567:63;;22626:1;22623;22616:12;22567:63;22514:122;:::o;22642:116::-;22712:21;22727:5;22712:21;:::i;:::-;22705:5;22702:32;22692:60;;22748:1;22745;22738:12;22692:60;22642:116;:::o;22764:122::-;22837:24;22855:5;22837:24;:::i;:::-;22830:5;22827:35;22817:63;;22876:1;22873;22866:12;22817:63;22764:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1301000","executionCost":"infinite","totalCost":"infinite"},"external":{"Proposals(uint256)":"infinite","addTokenId(uint256)":"49062","countVotes(uint256)":"infinite","createProposal(string,address[])":"infinite","owner()":"2556","validTokens(uint256)":"infinite","voteOnProposal(uint256,bool)":"infinite"},"internal":{"checkProposalEligibility(address)":"infinite","checkVoteEligibility(uint256,address)":"infinite"}},"methodIdentifiers":{"Proposals(uint256)":"d1dbe7d8","addTokenId(uint256)":"fd0d101f","countVotes(uint256)":"1840f0ca","createProposal(string,address[])":"be8bb7ba","owner()":"8da5cb5b","validTokens(uint256)":"e9d3d16a","voteOnProposal(uint256,bool)":"1614665c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votesUp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votesDown\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"votedFor\",\"type\":\"bool\"}],\"name\":\"newVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"}],\"name\":\"proposalCount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"proposalCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesUp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesDown\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"countConducted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"addTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"countVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_canVote\",\"type\":\"address[]\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_vote\",\"type\":\"bool\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/streamTriviaDao.sol\":\"StreamTriviaDao\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/streamTriviaDao.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\n\\ninterface StreamDao {\\n        function balanceOf(address, uint256) external view returns (uint256);\\n    }\\n\\ncontract StreamTriviaDao {\\n\\n    address public owner;\\n    uint256 nextProposal;\\n    uint256[] public validTokens;\\n    StreamDao daoContract;\\n\\n    constructor(){\\n        owner = msg.sender;\\n        nextProposal = 1;\\n        daoContract = StreamDao(0xa7C03faa9504E5C3453F550339b2660C8b835D70);\\n        validTokens = [0,1];\\n    }\\n\\n    struct proposal{\\n        uint256 id;\\n        bool exists;\\n        string description;\\n        uint deadline;\\n        uint256 votesUp;\\n        uint256 votesDown;\\n        address[] canVote;\\n        uint256 maxVotes;\\n        mapping(address => bool) voteStatus;\\n        bool countConducted;\\n        bool passed;\\n    }\\n\\n    mapping(uint256 => proposal) public Proposals;\\n\\n    event proposalCreated(\\n        uint256 id,\\n        string description,\\n        uint256 maxVotes,\\n        address proposer\\n    );\\n\\n    event newVote(\\n        uint256 votesUp,\\n        uint256 votesDown,\\n        address voter,\\n        uint256 proposal,\\n        bool votedFor\\n    );\\n\\n    event proposalCount(\\n        uint256 id,\\n        bool passed\\n    );\\n\\n\\n    function checkProposalEligibility(address _proposalist) private view returns (\\n        bool\\n    ){\\n        for(uint i = 0; i < validTokens.length; i++){\\n            if(daoContract.balanceOf(_proposalist, validTokens[i]) >= 1){\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function checkVoteEligibility(uint256 _id, address _voter) private view returns (\\n        bool\\n    ){\\n        for (uint256 i = 0; i < Proposals[_id].canVote.length; i++) {\\n            if (Proposals[_id].canVote[i] == _voter) {\\n            return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n\\n    function createProposal(string memory _description, address[] memory _canVote) public {\\n        require(checkProposalEligibility(msg.sender), \\\"Only NFT holders can put forth Proposals\\\");\\n\\n        proposal storage newProposal = Proposals[nextProposal];\\n        newProposal.id = nextProposal;\\n        newProposal.exists = true;\\n        newProposal.description = _description;\\n        newProposal.deadline = block.number + 100;\\n        newProposal.canVote = _canVote;\\n        newProposal.maxVotes = _canVote.length;\\n\\n        emit proposalCreated(nextProposal, _description, _canVote.length, msg.sender);\\n        nextProposal++;\\n    }\\n\\n\\n    function voteOnProposal(uint256 _id, bool _vote) public {\\n        require(Proposals[_id].exists, \\\"This Proposal does not exist\\\");\\n        require(checkVoteEligibility(_id, msg.sender), \\\"You can not vote on this Proposal\\\");\\n        require(!Proposals[_id].voteStatus[msg.sender], \\\"You have already voted on this Proposal\\\");\\n        require(block.number <= Proposals[_id].deadline, \\\"The deadline has passed for this Proposal\\\");\\n\\n        proposal storage p = Proposals[_id];\\n\\n        if(_vote) {\\n            p.votesUp++;\\n        }else{\\n            p.votesDown++;\\n        }\\n\\n        p.voteStatus[msg.sender] = true;\\n\\n        emit newVote(p.votesUp, p.votesDown, msg.sender, _id, _vote);\\n        \\n    }\\n\\n    function countVotes(uint256 _id) public {\\n        require(msg.sender == owner, \\\"Only Owner Can Count Votes\\\");\\n        require(Proposals[_id].exists, \\\"This Proposal does not exist\\\");\\n        require(block.number > Proposals[_id].deadline, \\\"Voting has not concluded\\\");\\n        require(!Proposals[_id].countConducted, \\\"Count already conducted\\\");\\n\\n        proposal storage p = Proposals[_id];\\n        \\n        if(Proposals[_id].votesDown < Proposals[_id].votesUp){\\n            p.passed = true;            \\n        }\\n\\n        p.countConducted = true;\\n\\n        emit proposalCount(_id, p.passed);\\n    }\\n\\n\\n    function addTokenId(uint256 _tokenId) public {\\n        require(msg.sender == owner, \\\"Only Owner Can Add Tokens\\\");\\n\\n        validTokens.push(_tokenId);\\n    }\\n    \\n}\",\"keccak256\":\"0x10f3a9135f69bac39485bb7686a5491e7fd8be63fdec36e42dd949eb81a460c2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2734,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2736,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"nextProposal","offset":0,"slot":"1","type":"t_uint256"},{"astId":2739,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"validTokens","offset":0,"slot":"2","type":"t_array(t_uint256)dyn_storage"},{"astId":2742,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"daoContract","offset":0,"slot":"3","type":"t_contract(StreamDao)2732"},{"astId":2798,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"Proposals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(proposal)2793_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(StreamDao)2732":{"encoding":"inplace","label":"contract StreamDao","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_struct(proposal)2793_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct StreamTriviaDao.proposal)","numberOfBytes":"32","value":"t_struct(proposal)2793_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(proposal)2793_storage":{"encoding":"inplace","label":"struct StreamTriviaDao.proposal","members":[{"astId":2769,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2771,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"exists","offset":0,"slot":"1","type":"t_bool"},{"astId":2773,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"description","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2775,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"deadline","offset":0,"slot":"3","type":"t_uint256"},{"astId":2777,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"votesUp","offset":0,"slot":"4","type":"t_uint256"},{"astId":2779,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"votesDown","offset":0,"slot":"5","type":"t_uint256"},{"astId":2782,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"canVote","offset":0,"slot":"6","type":"t_array(t_address)dyn_storage"},{"astId":2784,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"maxVotes","offset":0,"slot":"7","type":"t_uint256"},{"astId":2788,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"voteStatus","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"},{"astId":2790,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"countConducted","offset":0,"slot":"9","type":"t_bool"},{"astId":2792,"contract":"contracts/streamTriviaDao.sol:StreamTriviaDao","label":"passed","offset":1,"slot":"9","type":"t_bool"}],"numberOfBytes":"320"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/triviaStream.sol":{"StreamNft":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"TOKEN_IMAGE_URI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"hasNft","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"s_hasNft","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2610":{"entryPoint":null,"id":2610,"parameterSlots":0,"returnSlots":0},"@_3177":{"entryPoint":null,"id":3177,"parameterSlots":0,"returnSlots":0},"@_62":{"entryPoint":null,"id":62,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":368,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":422,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:14","statements":[{"body":{"nodeType":"YulBlock","src":"58:269:14","statements":[{"nodeType":"YulAssignment","src":"68:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"82:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"88:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"78:3:14"},"nodeType":"YulFunctionCall","src":"78:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"68:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"99:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"129:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"125:3:14"},"nodeType":"YulFunctionCall","src":"125:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"103:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"176:51:14","statements":[{"nodeType":"YulAssignment","src":"190:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"204:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"212:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"200:3:14"},"nodeType":"YulFunctionCall","src":"200:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"190:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"156:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"149:6:14"},"nodeType":"YulFunctionCall","src":"149:26:14"},"nodeType":"YulIf","src":"146:81:14"},{"body":{"nodeType":"YulBlock","src":"279:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"293:16:14"},"nodeType":"YulFunctionCall","src":"293:18:14"},"nodeType":"YulExpressionStatement","src":"293:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"243:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"266:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"274:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"263:2:14"},"nodeType":"YulFunctionCall","src":"263:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"240:2:14"},"nodeType":"YulFunctionCall","src":"240:38:14"},"nodeType":"YulIf","src":"237:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"51:6:14","type":""}],"src":"7:320:14"},{"body":{"nodeType":"YulBlock","src":"361:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"378:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"381:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"371:6:14"},"nodeType":"YulFunctionCall","src":"371:88:14"},"nodeType":"YulExpressionStatement","src":"371:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"475:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"478:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"468:6:14"},"nodeType":"YulFunctionCall","src":"468:15:14"},"nodeType":"YulExpressionStatement","src":"468:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"499:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"492:6:14"},"nodeType":"YulFunctionCall","src":"492:15:14"},"nodeType":"YulExpressionStatement","src":"492:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"333:180:14"}]},"contents":"{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600c81526020017f53747265616d54726976696100000000000000000000000000000000000000008152506040518060400160405280600781526020017f6c6576656c203100000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000c0565b508060019080519060200190620000af929190620000c0565b5050506000600681905550620001d5565b828054620000ce9062000170565b90600052602060002090601f016020900481019282620000f257600085556200013e565b82601f106200010d57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013d57825182559160200191906001019062000120565b5b5090506200014d919062000151565b5090565b5b808211156200016c57600081600090555060010162000152565b5090565b600060028204905060018216806200018957607f821691505b60208210811415620001a0576200019f620001a6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b612c2580620001e56000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb465146102f3578063b88d4fde1461030f578063c87b56dd1461032b578063e985e9c51461035b578063f5d18d351461038b57610116565b80636352211e146102575780636e02007d1461028757806370a08231146102a557806395d89b41146102d557610116565b80630d730acc116100e95780630d730acc146101b557806323b872dd146101d157806342842e0e146101ed5780634ed7ff63146102095780635dbe700f1461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611cfc565b6103bb565b604051610142919061215e565b60405180910390f35b61015361049d565b6040516101609190612179565b60405180910390f35b610183600480360381019061017e9190611d56565b61052f565b60405161019091906120f7565b60405180910390f35b6101b360048036038101906101ae9190611cbc565b610575565b005b6101cf60048036038101906101ca9190611d56565b61068d565b005b6101eb60048036038101906101e69190611ba6565b6106e7565b005b61020760048036038101906102029190611ba6565b610747565b005b610223600480360381019061021e9190611b39565b610767565b604051610230919061215e565b60405180910390f35b6102416107bd565b60405161024e9190612179565b60405180910390f35b610271600480360381019061026c9190611d56565b6107d9565b60405161027e91906120f7565b60405180910390f35b61028f610860565b60405161029c919061231b565b60405180910390f35b6102bf60048036038101906102ba9190611b39565b61086a565b6040516102cc919061231b565b60405180910390f35b6102dd610922565b6040516102ea9190612179565b60405180910390f35b61030d60048036038101906103089190611c7c565b6109b4565b005b61032960048036038101906103249190611bf9565b6109ca565b005b61034560048036038101906103409190611d56565b610a2c565b6040516103529190612179565b60405180910390f35b61037560048036038101906103709190611b66565b610aa6565b604051610382919061215e565b60405180910390f35b6103a560048036038101906103a09190611b39565b610b3a565b6040516103b2919061215e565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610496575061049582610b5a565b5b9050919050565b6060600080546104ac9061259a565b80601f01602080910402602001604051908101604052809291908181526020018280546104d89061259a565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b5050505050905090565b600061053a82610bc4565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610580826107d9565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906122db565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610610610c0f565b73ffffffffffffffffffffffffffffffffffffffff16148061063f575061063e81610639610c0f565b610aa6565b5b61067e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610675906122fb565b60405180910390fd5b6106888383610c17565b505050565b600481600261069c91906123cf565b146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d3906121db565b60405180910390fd5b6106e4610cd0565b50565b6106f86106f2610c0f565b82610d4b565b610737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072e9061219b565b60405180910390fd5b610742838383610de0565b505050565b610762838383604051806020016040528060008152506109ca565b505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b604051806080016040528060438152602001612b6d6043913981565b6000806107e5836110da565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084e906122bb565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061227b565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546109319061259a565b80601f016020809104026020016040519081016040528092919081815260200182805461095d9061259a565b80156109aa5780601f1061097f576101008083540402835291602001916109aa565b820191906000526020600020905b81548152906001019060200180831161098d57829003601f168201915b5050505050905090565b6109c66109bf610c0f565b8383611117565b5050565b6109db6109d5610c0f565b83610d4b565b610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a119061219b565b60405180910390fd5b610a2684848484611284565b50505050565b6060610a366112e0565b610a7f610a4161049d565b604051806080016040528060438152602001612b6d60439139604051602001610a6b9291906120a7565b60405160208183030381529060405261131d565b604051602001610a90929190612083565b6040516020818303038152906040529050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60076020528060005260406000206000915054906101000a900460ff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610bcd816114a2565b610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c03906122bb565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610c8a836107d9565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610cdc336006546114e3565b6001600654610ceb91906123cf565b6006819055506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600080610d57836107d9565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d995750610d988185610aa6565b5b80610dd757508373ffffffffffffffffffffffffffffffffffffffff16610dbf8461052f565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610e00826107d9565b73ffffffffffffffffffffffffffffffffffffffff1614610e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4d906121fb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ec6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebd9061223b565b60405180910390fd5b610ed38383836001611501565b8273ffffffffffffffffffffffffffffffffffffffff16610ef3826107d9565b73ffffffffffffffffffffffffffffffffffffffff1614610f49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f40906121fb565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110d58383836001611627565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117d9061225b565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611277919061215e565b60405180910390a3505050565b61128f848484610de0565b61129b8484848461162d565b6112da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d1906121bb565b60405180910390fd5b50505050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b60606000825114156113405760405180602001604052806000815250905061149d565b6000604051806060016040528060408152602001612bb0604091399050600060036002855161136f91906123cf565b6113799190612425565b60046113859190612456565b9050600060208261139691906123cf565b67ffffffffffffffff8111156113af576113ae61268a565b5b6040519080825280601f01601f1916602001820160405280156113e15781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101561145c576003830192508251603f8160121c1685015160f81b8252600182019150603f81600c1c1685015160f81b8252600182019150603f8160061c1685015160f81b8252600182019150603f811685015160f81b8252600182019150506113f5565b600389510660018114611476576002811461148657611491565b613d3d60f01b6002830352611491565b603d60f81b60018303525b50505050508093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166114c4836110da565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6114fd8282604051806020016040528060008152506117c4565b5050565b600181111561162157600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146115955780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461158d91906124b0565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116205780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461161891906123cf565b925050819055505b5b50505050565b50505050565b600061164e8473ffffffffffffffffffffffffffffffffffffffff1661181f565b156117b7578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611677610c0f565b8786866040518563ffffffff1660e01b81526004016116999493929190612112565b602060405180830381600087803b1580156116b357600080fd5b505af19250505080156116e457506040513d601f19601f820116820180604052508101906116e19190611d29565b60015b611767573d8060008114611714576040519150601f19603f3d011682016040523d82523d6000602084013e611719565b606091505b5060008151141561175f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611756906121bb565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506117bc565b600190505b949350505050565b6117ce8383611842565b6117db600084848461162d565b61181a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611811906121bb565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a99061229b565b60405180910390fd5b6118bb816114a2565b156118fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f29061221b565b60405180910390fd5b611909600083836001611501565b611912816114a2565b15611952576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119499061221b565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611a5c600083836001611627565b5050565b6000611a73611a6e8461235b565b612336565b905082815260208101848484011115611a8f57611a8e6126be565b5b611a9a848285612558565b509392505050565b600081359050611ab181612b10565b92915050565b600081359050611ac681612b27565b92915050565b600081359050611adb81612b3e565b92915050565b600081519050611af081612b3e565b92915050565b600082601f830112611b0b57611b0a6126b9565b5b8135611b1b848260208601611a60565b91505092915050565b600081359050611b3381612b55565b92915050565b600060208284031215611b4f57611b4e6126c8565b5b6000611b5d84828501611aa2565b91505092915050565b60008060408385031215611b7d57611b7c6126c8565b5b6000611b8b85828601611aa2565b9250506020611b9c85828601611aa2565b9150509250929050565b600080600060608486031215611bbf57611bbe6126c8565b5b6000611bcd86828701611aa2565b9350506020611bde86828701611aa2565b9250506040611bef86828701611b24565b9150509250925092565b60008060008060808587031215611c1357611c126126c8565b5b6000611c2187828801611aa2565b9450506020611c3287828801611aa2565b9350506040611c4387828801611b24565b925050606085013567ffffffffffffffff811115611c6457611c636126c3565b5b611c7087828801611af6565b91505092959194509250565b60008060408385031215611c9357611c926126c8565b5b6000611ca185828601611aa2565b9250506020611cb285828601611ab7565b9150509250929050565b60008060408385031215611cd357611cd26126c8565b5b6000611ce185828601611aa2565b9250506020611cf285828601611b24565b9150509250929050565b600060208284031215611d1257611d116126c8565b5b6000611d2084828501611acc565b91505092915050565b600060208284031215611d3f57611d3e6126c8565b5b6000611d4d84828501611ae1565b91505092915050565b600060208284031215611d6c57611d6b6126c8565b5b6000611d7a84828501611b24565b91505092915050565b611d8c816124e4565b82525050565b611d9b816124f6565b82525050565b6000611dac8261238c565b611db681856123a2565b9350611dc6818560208601612567565b611dcf816126cd565b840191505092915050565b6000611de582612397565b611def81856123b3565b9350611dff818560208601612567565b611e08816126cd565b840191505092915050565b6000611e1e82612397565b611e2881856123c4565b9350611e38818560208601612567565b80840191505092915050565b6000611e51602d836123b3565b9150611e5c826126de565b604082019050919050565b6000611e746009836123c4565b9150611e7f8261272d565b600982019050919050565b6000611e976032836123b3565b9150611ea282612756565b604082019050919050565b6000611eba600c836123b3565b9150611ec5826127a5565b602082019050919050565b6000611edd6025836123b3565b9150611ee8826127ce565b604082019050919050565b6000611f00601c836123b3565b9150611f0b8261281d565b602082019050919050565b6000611f23604d836123c4565b9150611f2e82612846565b604d82019050919050565b6000611f466024836123b3565b9150611f51826128bb565b604082019050919050565b6000611f696019836123b3565b9150611f748261290a565b602082019050919050565b6000611f8c6041836123c4565b9150611f9782612933565b604182019050919050565b6000611faf6029836123b3565b9150611fba826129a8565b604082019050919050565b6000611fd26002836123c4565b9150611fdd826129f7565b600282019050919050565b6000611ff56020836123b3565b915061200082612a20565b602082019050919050565b60006120186018836123b3565b915061202382612a49565b602082019050919050565b600061203b6021836123b3565b915061204682612a72565b604082019050919050565b600061205e603d836123b3565b915061206982612ac1565b604082019050919050565b61207d8161254e565b82525050565b600061208f8285611e13565b915061209b8284611e13565b91508190509392505050565b60006120b282611e67565b91506120be8285611e13565b91506120c982611f16565b91506120d482611f7f565b91506120e08284611e13565b91506120eb82611fc5565b91508190509392505050565b600060208201905061210c6000830184611d83565b92915050565b60006080820190506121276000830187611d83565b6121346020830186611d83565b6121416040830185612074565b81810360608301526121538184611da1565b905095945050505050565b60006020820190506121736000830184611d92565b92915050565b600060208201905081810360008301526121938184611dda565b905092915050565b600060208201905081810360008301526121b481611e44565b9050919050565b600060208201905081810360008301526121d481611e8a565b9050919050565b600060208201905081810360008301526121f481611ead565b9050919050565b6000602082019050818103600083015261221481611ed0565b9050919050565b6000602082019050818103600083015261223481611ef3565b9050919050565b6000602082019050818103600083015261225481611f39565b9050919050565b6000602082019050818103600083015261227481611f5c565b9050919050565b6000602082019050818103600083015261229481611fa2565b9050919050565b600060208201905081810360008301526122b481611fe8565b9050919050565b600060208201905081810360008301526122d48161200b565b9050919050565b600060208201905081810360008301526122f48161202e565b9050919050565b6000602082019050818103600083015261231481612051565b9050919050565b60006020820190506123306000830184612074565b92915050565b6000612340612351565b905061234c82826125cc565b919050565b6000604051905090565b600067ffffffffffffffff8211156123765761237561268a565b5b61237f826126cd565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006123da8261254e565b91506123e58361254e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561241a576124196125fd565b5b828201905092915050565b60006124308261254e565b915061243b8361254e565b92508261244b5761244a61262c565b5b828204905092915050565b60006124618261254e565b915061246c8361254e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124a5576124a46125fd565b5b828202905092915050565b60006124bb8261254e565b91506124c68361254e565b9250828210156124d9576124d86125fd565b5b828203905092915050565b60006124ef8261252e565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561258557808201518184015260208101905061256a565b83811115612594576000848401525b50505050565b600060028204905060018216806125b257607f821691505b602082108114156125c6576125c561265b565b5b50919050565b6125d5826126cd565b810181811067ffffffffffffffff821117156125f4576125f361268a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f57726f6e672076616c7565210000000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f222c20226465736372697074696f6e223a22596f75206361707475726564207460008201527f686973204e46542061732070617274206f662074686520656475636174696f6e60208201527f616c2053747265616d21222c2000000000000000000000000000000000000000604082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f2261747472696275746573223a205b7b2274726169745f74797065223a20227360008201527f6b696c6c73222c202276616c7565223a203130307d5d2c2022696d616765223a60208201527f2200000000000000000000000000000000000000000000000000000000000000604082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b612b19816124e4565b8114612b2457600080fd5b50565b612b30816124f6565b8114612b3b57600080fd5b50565b612b4781612502565b8114612b5257600080fd5b50565b612b5e8161254e565b8114612b6957600080fd5b5056fe68747470733a2f2f697066732e696f2f697066732f516d5565585636335676725958774436356774457a365746434a786f363250484a3570437569664336716d3675554142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220e273ed072050ccbd435181dbcfe0a834473ff65a2f59f4818d6ac30bae76e86e64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53747265616D5472697669610000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6C6576656C203100000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x1D5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xCE SWAP1 PUSH3 0x170 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x10D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x13D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x14D SWAP2 SWAP1 PUSH3 0x151 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x189 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19F PUSH3 0x1A6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2C25 DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xF5D18D35 EQ PUSH2 0x38B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0xD730ACC GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xD730ACC EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x4ED7FF63 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x5DBE700F EQ PUSH2 0x239 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1B66 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x486 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x496 JUMPI POP PUSH2 0x495 DUP3 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x525 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x525 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x508 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP3 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580 DUP3 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x22DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x610 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x63F JUMPI POP PUSH2 0x63E DUP2 PUSH2 0x639 PUSH2 0xC0F JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP4 DUP4 PUSH2 0xC17 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x2 PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST EQ PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E4 PUSH2 0xCD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6F8 PUSH2 0x6F2 PUSH2 0xC0F JUMP JUMPDEST DUP3 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x737 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72E SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x742 DUP4 DUP4 DUP4 PUSH2 0xDE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x762 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6D PUSH1 0x43 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7E5 DUP4 PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84E SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x931 SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x95D SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x97F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x98D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x9BF PUSH2 0xC0F JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1117 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9DB PUSH2 0x9D5 PUSH2 0xC0F JUMP JUMPDEST DUP4 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA26 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1284 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA36 PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0xA7F PUSH2 0xA41 PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6D PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA6B SWAP3 SWAP2 SWAP1 PUSH2 0x20A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA90 SWAP3 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBCD DUP2 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8A DUP4 PUSH2 0x7D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xCDC CALLER PUSH1 0x6 SLOAD PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD57 DUP4 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD99 JUMPI POP PUSH2 0xD98 DUP2 DUP6 PUSH2 0xAA6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xDD7 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDBF DUP5 PUSH2 0x52F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE00 DUP3 PUSH2 0x7D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4D SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBD SWAP1 PUSH2 0x223B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1501 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEF3 DUP3 PUSH2 0x7D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF40 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10D5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1627 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1186 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117D SWAP1 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1277 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x128F DUP5 DUP5 DUP5 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x129B DUP5 DUP5 DUP5 DUP5 PUSH2 0x162D JUMP JUMPDEST PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x1340 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x149D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB0 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x136F SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x1385 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AF JUMPI PUSH2 0x13AE PUSH2 0x268A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x145C JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1476 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1486 JUMPI PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14C4 DUP4 PUSH2 0x10DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FD DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1621 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1595 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x158D SWAP2 SWAP1 PUSH2 0x24B0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1620 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164E DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x181F JUMP JUMPDEST ISZERO PUSH2 0x17B7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1677 PUSH2 0xC0F JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1699 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16E4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E1 SWAP2 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1767 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x175F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1756 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x17CE DUP4 DUP4 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x17DB PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x162D JUMP JUMPDEST PUSH2 0x181A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1811 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A9 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18BB DUP2 PUSH2 0x14A2 JUMP JUMPDEST ISZERO PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1909 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1912 DUP2 PUSH2 0x14A2 JUMP JUMPDEST ISZERO PUSH2 0x1952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1949 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A5C PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1627 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 PUSH2 0x1A6E DUP5 PUSH2 0x235B JUMP JUMPDEST PUSH2 0x2336 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A8F JUMPI PUSH2 0x1A8E PUSH2 0x26BE JUMP JUMPDEST JUMPDEST PUSH2 0x1A9A DUP5 DUP3 DUP6 PUSH2 0x2558 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AB1 DUP2 PUSH2 0x2B10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC6 DUP2 PUSH2 0x2B27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ADB DUP2 PUSH2 0x2B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AF0 DUP2 PUSH2 0x2B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B0B JUMPI PUSH2 0x1B0A PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B1B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B33 DUP2 PUSH2 0x2B55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4F JUMPI PUSH2 0x1B4E PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B5D DUP5 DUP3 DUP6 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7D JUMPI PUSH2 0x1B7C PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8B DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B9C DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBF JUMPI PUSH2 0x1BBE PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCD DUP7 DUP3 DUP8 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDE DUP7 DUP3 DUP8 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BEF DUP7 DUP3 DUP8 ADD PUSH2 0x1B24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C13 JUMPI PUSH2 0x1C12 PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C21 DUP8 DUP3 DUP9 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C32 DUP8 DUP3 DUP9 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C43 DUP8 DUP3 DUP9 ADD PUSH2 0x1B24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C63 PUSH2 0x26C3 JUMP JUMPDEST JUMPDEST PUSH2 0x1C70 DUP8 DUP3 DUP9 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C93 JUMPI PUSH2 0x1C92 PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CB2 DUP6 DUP3 DUP7 ADD PUSH2 0x1AB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1B24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D20 DUP5 DUP3 DUP6 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3F JUMPI PUSH2 0x1D3E PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4D DUP5 DUP3 DUP6 ADD PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6C JUMPI PUSH2 0x1D6B PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D7A DUP5 DUP3 DUP6 ADD PUSH2 0x1B24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D8C DUP2 PUSH2 0x24E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D9B DUP2 PUSH2 0x24F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAC DUP3 PUSH2 0x238C JUMP JUMPDEST PUSH2 0x1DB6 DUP2 DUP6 PUSH2 0x23A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x1DCF DUP2 PUSH2 0x26CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE5 DUP3 PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x1DEF DUP2 DUP6 PUSH2 0x23B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x1E08 DUP2 PUSH2 0x26CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1E DUP3 PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x1E28 DUP2 DUP6 PUSH2 0x23C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E38 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2567 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E51 PUSH1 0x2D DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5C DUP3 PUSH2 0x26DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E74 PUSH1 0x9 DUP4 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7F DUP3 PUSH2 0x272D JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E97 PUSH1 0x32 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA2 DUP3 PUSH2 0x2756 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBA PUSH1 0xC DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC5 DUP3 PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDD PUSH1 0x25 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE8 DUP3 PUSH2 0x27CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F00 PUSH1 0x1C DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0B DUP3 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F23 PUSH1 0x4D DUP4 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2E DUP3 PUSH2 0x2846 JUMP JUMPDEST PUSH1 0x4D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F46 PUSH1 0x24 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F51 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F69 PUSH1 0x19 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F74 DUP3 PUSH2 0x290A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8C PUSH1 0x41 DUP4 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F97 DUP3 PUSH2 0x2933 JUMP JUMPDEST PUSH1 0x41 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FAF PUSH1 0x29 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBA DUP3 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD2 PUSH1 0x2 DUP4 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDD DUP3 PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF5 PUSH1 0x20 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2000 DUP3 PUSH2 0x2A20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2018 PUSH1 0x18 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2023 DUP3 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203B PUSH1 0x21 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2046 DUP3 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205E PUSH1 0x3D DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2069 DUP3 PUSH2 0x2AC1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x207D DUP2 PUSH2 0x254E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208F DUP3 DUP6 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH2 0x209B DUP3 DUP5 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B2 DUP3 PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BE DUP3 DUP6 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C9 DUP3 PUSH2 0x1F16 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D4 DUP3 PUSH2 0x1F7F JUMP JUMPDEST SWAP2 POP PUSH2 0x20E0 DUP3 DUP5 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH2 0x20EB DUP3 PUSH2 0x1FC5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2127 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0x2134 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0x2141 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2074 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2153 DUP2 DUP5 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2173 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2193 DUP2 DUP5 PUSH2 0x1DDA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B4 DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D4 DUP2 PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F4 DUP2 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2214 DUP2 PUSH2 0x1ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2234 DUP2 PUSH2 0x1EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2254 DUP2 PUSH2 0x1F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2274 DUP2 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2294 DUP2 PUSH2 0x1FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B4 DUP2 PUSH2 0x1FE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22D4 DUP2 PUSH2 0x200B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F4 DUP2 PUSH2 0x202E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2314 DUP2 PUSH2 0x2051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2330 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2074 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2340 PUSH2 0x2351 JUMP JUMPDEST SWAP1 POP PUSH2 0x234C DUP3 DUP3 PUSH2 0x25CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2376 JUMPI PUSH2 0x2375 PUSH2 0x268A JUMP JUMPDEST JUMPDEST PUSH2 0x237F DUP3 PUSH2 0x26CD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DA DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x23E5 DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x241A JUMPI PUSH2 0x2419 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2430 DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x243B DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x244B JUMPI PUSH2 0x244A PUSH2 0x262C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2461 DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x246C DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24A5 JUMPI PUSH2 0x24A4 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BB DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x24C6 DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x24D9 JUMPI PUSH2 0x24D8 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EF DUP3 PUSH2 0x252E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2585 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x256A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2594 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C6 JUMPI PUSH2 0x25C5 PUSH2 0x265B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D5 DUP3 PUSH2 0x26CD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25F4 JUMPI PUSH2 0x25F3 PUSH2 0x268A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x57726F6E672076616C7565210000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22596F752063617074757265642074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x686973204E46542061732070617274206F662074686520656475636174696F6E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x616C2053747265616D21222C2000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B696C6C73222C202276616C7565223A203130307D5D2C2022696D616765223A PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2B19 DUP2 PUSH2 0x24E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B30 DUP2 PUSH2 0x24F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B47 DUP2 PUSH2 0x2502 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B5E DUP2 PUSH2 0x254E JUMP JUMPDEST DUP2 EQ PUSH2 0x2B69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH9 0x747470733A2F2F6970 PUSH7 0x732E696F2F6970 PUSH7 0x732F516D556558 JUMP CALLDATASIZE CALLER JUMP PUSH23 0x725958774436356774457A365746434A786F363250484A CALLDATALOAD PUSH17 0x437569664336716D367555414243444546 SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0xE2 PUSH20 0xED072050CCBD435181DBCFE0A834473FF65A2F59 DELEGATECALL DUP2 DUP14 PUSH11 0xC30BAE76E86E64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ","sourceMap":"87:209:13:-:0;;;135:38;;;;;;;;;;1390:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;518:1:11::1;501:14;:18;;;;87:209:13::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:14:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:81;;212:4;204:6;200:17;190:27;;146:81;274:2;266:6;263:14;243:18;240:38;237:84;;;293:18;;:::i;:::-;237:84;58:269;7:320;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;87:209:13;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TOKEN_IMAGE_URI_2592":{"entryPoint":1981,"id":2592,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_943":{"entryPoint":5671,"id":943,"parameterSlots":4,"returnSlots":0},"@_approve_776":{"entryPoint":3095,"id":776,"parameterSlots":2,"returnSlots":0},"@_baseURI_2619":{"entryPoint":4832,"id":2619,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_930":{"entryPoint":5377,"id":930,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_884":{"entryPoint":5677,"id":884,"parameterSlots":4,"returnSlots":1},"@_exists_445":{"entryPoint":5282,"id":445,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_479":{"entryPoint":3403,"id":479,"parameterSlots":2,"returnSlots":1},"@_mintNft_2665":{"entryPoint":3280,"id":2665,"parameterSlots":0,"returnSlots":0},"@_mint_600":{"entryPoint":6210,"id":600,"parameterSlots":2,"returnSlots":0},"@_msgSender_1447":{"entryPoint":3087,"id":1447,"parameterSlots":0,"returnSlots":1},"@_ownerOf_427":{"entryPoint":4314,"id":427,"parameterSlots":1,"returnSlots":1},"@_requireMinted_822":{"entryPoint":3012,"id":822,"parameterSlots":1,"returnSlots":0},"@_safeMint_494":{"entryPoint":5347,"id":494,"parameterSlots":2,"returnSlots":0},"@_safeMint_523":{"entryPoint":6084,"id":523,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_414":{"entryPoint":4740,"id":414,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_808":{"entryPoint":4375,"id":808,"parameterSlots":3,"returnSlots":0},"@_transfer_752":{"entryPoint":3552,"id":752,"parameterSlots":3,"returnSlots":0},"@approve_256":{"entryPoint":1397,"id":256,"parameterSlots":2,"returnSlots":0},"@balanceOf_117":{"entryPoint":2154,"id":117,"parameterSlots":1,"returnSlots":1},"@encode_2582":{"entryPoint":4893,"id":2582,"parameterSlots":1,"returnSlots":1},"@getApproved_274":{"entryPoint":1327,"id":274,"parameterSlots":1,"returnSlots":1},"@getTokenCounter_2719":{"entryPoint":2144,"id":2719,"parameterSlots":0,"returnSlots":1},"@hasNft_2711":{"entryPoint":1895,"id":2711,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_309":{"entryPoint":2726,"id":309,"parameterSlots":2,"returnSlots":1},"@isContract_1123":{"entryPoint":6175,"id":1123,"parameterSlots":1,"returnSlots":1},"@mintNft_3195":{"entryPoint":1677,"id":3195,"parameterSlots":1,"returnSlots":0},"@name_155":{"entryPoint":1181,"id":155,"parameterSlots":0,"returnSlots":1},"@ownerOf_145":{"entryPoint":2009,"id":145,"parameterSlots":1,"returnSlots":1},"@s_hasNft_2598":{"entryPoint":2874,"id":2598,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_355":{"entryPoint":1863,"id":355,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_385":{"entryPoint":2506,"id":385,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_291":{"entryPoint":2484,"id":291,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1655":{"entryPoint":2906,"id":1655,"parameterSlots":1,"returnSlots":1},"@supportsInterface_93":{"entryPoint":955,"id":93,"parameterSlots":1,"returnSlots":1},"@symbol_165":{"entryPoint":2338,"id":165,"parameterSlots":0,"returnSlots":1},"@tokenURI_2699":{"entryPoint":2604,"id":2699,"parameterSlots":1,"returnSlots":1},"@transferFrom_336":{"entryPoint":1767,"id":336,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6752,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6860,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":6881,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6902,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6948,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7014,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7078,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7161,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7292,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7356,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":7465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7555,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7570,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":7585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7748,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7783,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":7818,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2_to_t_string_memory_ptr_fromStack":{"entryPoint":7853,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7888,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":7923,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7958,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7993,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":8028,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8063,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":8098,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8133,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":8168,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":8203,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":8238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":8273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8308,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8323,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8359,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8439,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8466,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8635,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8667,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8699,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8763,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8795,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8827,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8859,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8891,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8923,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8955,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8987,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":9014,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9041,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":9051,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9100,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9111,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":9122,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9139,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9156,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9167,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":9253,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":9302,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9392,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9444,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9462,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9474,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9518,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9550,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":9560,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":9575,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9626,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":9676,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":9725,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":9772,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9819,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9866,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9913,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9918,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9923,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9928,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9933,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":9950,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832":{"entryPoint":10029,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":10070,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2":{"entryPoint":10149,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":10190,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":10269,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf":{"entryPoint":10310,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":10427,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":10506,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719":{"entryPoint":10547,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":10664,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475":{"entryPoint":10743,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":10784,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":10825,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":10866,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":10945,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11024,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11047,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":11070,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11093,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:31722:14","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:14","statements":[{"nodeType":"YulAssignment","src":"100:74:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:14"},"nodeType":"YulFunctionCall","src":"125:48:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:14"},"nodeType":"YulFunctionCall","src":"109:65:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:14"},"nodeType":"YulFunctionCall","src":"183:21:14"},"nodeType":"YulExpressionStatement","src":"183:21:14"},{"nodeType":"YulVariableDeclaration","src":"213:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:14"},"nodeType":"YulFunctionCall","src":"224:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:14"},"nodeType":"YulFunctionCall","src":"280:79:14"},"nodeType":"YulExpressionStatement","src":"280:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:14"},"nodeType":"YulFunctionCall","src":"255:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:14"},"nodeType":"YulFunctionCall","src":"252:25:14"},"nodeType":"YulIf","src":"249:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:14"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:14"},"nodeType":"YulFunctionCall","src":"370:41:14"},"nodeType":"YulExpressionStatement","src":"370:41:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:14","type":""}],"src":"7:410:14"},{"body":{"nodeType":"YulBlock","src":"475:87:14","statements":[{"nodeType":"YulAssignment","src":"485:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:14"},"nodeType":"YulFunctionCall","src":"494:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:14"},"nodeType":"YulFunctionCall","src":"523:33:14"},"nodeType":"YulExpressionStatement","src":"523:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:14","type":""}],"src":"423:139:14"},{"body":{"nodeType":"YulBlock","src":"617:84:14","statements":[{"nodeType":"YulAssignment","src":"627:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:14"},"nodeType":"YulFunctionCall","src":"636:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:14"},"nodeType":"YulFunctionCall","src":"665:30:14"},"nodeType":"YulExpressionStatement","src":"665:30:14"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:14","type":""}],"src":"568:133:14"},{"body":{"nodeType":"YulBlock","src":"758:86:14","statements":[{"nodeType":"YulAssignment","src":"768:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:14"},"nodeType":"YulFunctionCall","src":"777:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:14"},"nodeType":"YulFunctionCall","src":"806:32:14"},"nodeType":"YulExpressionStatement","src":"806:32:14"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:14","type":""}],"src":"707:137:14"},{"body":{"nodeType":"YulBlock","src":"912:79:14","statements":[{"nodeType":"YulAssignment","src":"922:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:14"},"nodeType":"YulFunctionCall","src":"931:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:14"},"nodeType":"YulFunctionCall","src":"953:32:14"},"nodeType":"YulExpressionStatement","src":"953:32:14"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:14","type":""}],"src":"850:141:14"},{"body":{"nodeType":"YulBlock","src":"1071:277:14","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:14"},"nodeType":"YulFunctionCall","src":"1122:79:14"},"nodeType":"YulExpressionStatement","src":"1122:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:14"},"nodeType":"YulFunctionCall","src":"1095:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:14"},"nodeType":"YulFunctionCall","src":"1091:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:14"},"nodeType":"YulFunctionCall","src":"1084:35:14"},"nodeType":"YulIf","src":"1081:122:14"},{"nodeType":"YulVariableDeclaration","src":"1212:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:14"},"nodeType":"YulFunctionCall","src":"1226:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:14"},"nodeType":"YulFunctionCall","src":"1311:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:14"},"nodeType":"YulFunctionCall","src":"1264:78:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:14","type":""}],"src":"1010:338:14"},{"body":{"nodeType":"YulBlock","src":"1406:87:14","statements":[{"nodeType":"YulAssignment","src":"1416:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:14"},"nodeType":"YulFunctionCall","src":"1425:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:14"},"nodeType":"YulFunctionCall","src":"1454:33:14"},"nodeType":"YulExpressionStatement","src":"1454:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:14","type":""}],"src":"1354:139:14"},{"body":{"nodeType":"YulBlock","src":"1565:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:14"},"nodeType":"YulFunctionCall","src":"1613:79:14"},"nodeType":"YulExpressionStatement","src":"1613:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:14"},"nodeType":"YulFunctionCall","src":"1582:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:14"},"nodeType":"YulFunctionCall","src":"1578:32:14"},"nodeType":"YulIf","src":"1575:119:14"},{"nodeType":"YulBlock","src":"1704:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:14"},"nodeType":"YulFunctionCall","src":"1779:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:14"},"nodeType":"YulFunctionCall","src":"1758:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:14","type":""}],"src":"1499:329:14"},{"body":{"nodeType":"YulBlock","src":"1917:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:14"},"nodeType":"YulFunctionCall","src":"1965:79:14"},"nodeType":"YulExpressionStatement","src":"1965:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:14"},"nodeType":"YulFunctionCall","src":"1934:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:14"},"nodeType":"YulFunctionCall","src":"1930:32:14"},"nodeType":"YulIf","src":"1927:119:14"},{"nodeType":"YulBlock","src":"2056:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:14"},"nodeType":"YulFunctionCall","src":"2131:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:14"},"nodeType":"YulFunctionCall","src":"2110:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:14"}]}]},{"nodeType":"YulBlock","src":"2183:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:14"},"nodeType":"YulFunctionCall","src":"2259:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:14"},"nodeType":"YulFunctionCall","src":"2238:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:14","type":""}],"src":"1834:474:14"},{"body":{"nodeType":"YulBlock","src":"2414:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:14"},"nodeType":"YulFunctionCall","src":"2462:79:14"},"nodeType":"YulExpressionStatement","src":"2462:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:14"},"nodeType":"YulFunctionCall","src":"2431:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:14"},"nodeType":"YulFunctionCall","src":"2427:32:14"},"nodeType":"YulIf","src":"2424:119:14"},{"nodeType":"YulBlock","src":"2553:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:14"},"nodeType":"YulFunctionCall","src":"2628:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:14"},"nodeType":"YulFunctionCall","src":"2607:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:14"}]}]},{"nodeType":"YulBlock","src":"2680:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:14"},"nodeType":"YulFunctionCall","src":"2756:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:14"},"nodeType":"YulFunctionCall","src":"2735:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:14"}]}]},{"nodeType":"YulBlock","src":"2808:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:14"},"nodeType":"YulFunctionCall","src":"2884:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:14"},"nodeType":"YulFunctionCall","src":"2863:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:14","type":""}],"src":"2314:619:14"},{"body":{"nodeType":"YulBlock","src":"3065:817:14","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:14"},"nodeType":"YulFunctionCall","src":"3114:79:14"},"nodeType":"YulExpressionStatement","src":"3114:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:14"},"nodeType":"YulFunctionCall","src":"3082:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:14"},"nodeType":"YulFunctionCall","src":"3078:33:14"},"nodeType":"YulIf","src":"3075:120:14"},{"nodeType":"YulBlock","src":"3205:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:14"},"nodeType":"YulFunctionCall","src":"3280:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:14"},"nodeType":"YulFunctionCall","src":"3259:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:14"}]}]},{"nodeType":"YulBlock","src":"3332:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:14"},"nodeType":"YulFunctionCall","src":"3408:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:14"},"nodeType":"YulFunctionCall","src":"3387:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:14"}]}]},{"nodeType":"YulBlock","src":"3460:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:14"},"nodeType":"YulFunctionCall","src":"3536:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:14"},"nodeType":"YulFunctionCall","src":"3515:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:14"}]}]},{"nodeType":"YulBlock","src":"3588:287:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:14"},"nodeType":"YulFunctionCall","src":"3630:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:14"},"nodeType":"YulFunctionCall","src":"3617:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:14"},"nodeType":"YulFunctionCall","src":"3698:79:14"},"nodeType":"YulExpressionStatement","src":"3698:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:14"},"nodeType":"YulFunctionCall","src":"3665:30:14"},"nodeType":"YulIf","src":"3662:117:14"},{"nodeType":"YulAssignment","src":"3793:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:14"},"nodeType":"YulFunctionCall","src":"3833:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:14"},"nodeType":"YulFunctionCall","src":"3803:62:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:14","type":""}],"src":"2939:943:14"},{"body":{"nodeType":"YulBlock","src":"3968:388:14","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:14"},"nodeType":"YulFunctionCall","src":"4016:79:14"},"nodeType":"YulExpressionStatement","src":"4016:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:14"},"nodeType":"YulFunctionCall","src":"3985:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:14"},"nodeType":"YulFunctionCall","src":"3981:32:14"},"nodeType":"YulIf","src":"3978:119:14"},{"nodeType":"YulBlock","src":"4107:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:14"},"nodeType":"YulFunctionCall","src":"4182:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:14"},"nodeType":"YulFunctionCall","src":"4161:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:14"}]}]},{"nodeType":"YulBlock","src":"4234:115:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:14"},"nodeType":"YulFunctionCall","src":"4307:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:14"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:14"},"nodeType":"YulFunctionCall","src":"4289:50:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:14","type":""}],"src":"3888:468:14"},{"body":{"nodeType":"YulBlock","src":"4445:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:14"},"nodeType":"YulFunctionCall","src":"4493:79:14"},"nodeType":"YulExpressionStatement","src":"4493:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:14"},"nodeType":"YulFunctionCall","src":"4462:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:14"},"nodeType":"YulFunctionCall","src":"4458:32:14"},"nodeType":"YulIf","src":"4455:119:14"},{"nodeType":"YulBlock","src":"4584:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:14"},"nodeType":"YulFunctionCall","src":"4659:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:14"},"nodeType":"YulFunctionCall","src":"4638:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:14"}]}]},{"nodeType":"YulBlock","src":"4711:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:14"},"nodeType":"YulFunctionCall","src":"4787:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:14"},"nodeType":"YulFunctionCall","src":"4766:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:14","type":""}],"src":"4362:474:14"},{"body":{"nodeType":"YulBlock","src":"4907:262:14","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:14"},"nodeType":"YulFunctionCall","src":"4955:79:14"},"nodeType":"YulExpressionStatement","src":"4955:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:14"},"nodeType":"YulFunctionCall","src":"4924:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:14"},"nodeType":"YulFunctionCall","src":"4920:32:14"},"nodeType":"YulIf","src":"4917:119:14"},{"nodeType":"YulBlock","src":"5046:116:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:14"},"nodeType":"YulFunctionCall","src":"5120:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:14"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:14"},"nodeType":"YulFunctionCall","src":"5100:52:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:14","type":""}],"src":"4842:327:14"},{"body":{"nodeType":"YulBlock","src":"5251:273:14","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:14"},"nodeType":"YulFunctionCall","src":"5299:79:14"},"nodeType":"YulExpressionStatement","src":"5299:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:14"},"nodeType":"YulFunctionCall","src":"5268:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:14"},"nodeType":"YulFunctionCall","src":"5264:32:14"},"nodeType":"YulIf","src":"5261:119:14"},{"nodeType":"YulBlock","src":"5390:127:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:14"},"nodeType":"YulFunctionCall","src":"5475:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:14"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:14"},"nodeType":"YulFunctionCall","src":"5444:63:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:14","type":""}],"src":"5175:349:14"},{"body":{"nodeType":"YulBlock","src":"5596:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:14"},"nodeType":"YulFunctionCall","src":"5644:79:14"},"nodeType":"YulExpressionStatement","src":"5644:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:14"},"nodeType":"YulFunctionCall","src":"5613:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:14"},"nodeType":"YulFunctionCall","src":"5609:32:14"},"nodeType":"YulIf","src":"5606:119:14"},{"nodeType":"YulBlock","src":"5735:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:14"},"nodeType":"YulFunctionCall","src":"5810:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:14"},"nodeType":"YulFunctionCall","src":"5789:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:14","type":""}],"src":"5530:329:14"},{"body":{"nodeType":"YulBlock","src":"5930:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:14"},"nodeType":"YulFunctionCall","src":"5952:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:14"},"nodeType":"YulFunctionCall","src":"5940:37:14"},"nodeType":"YulExpressionStatement","src":"5940:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:14","type":""}],"src":"5865:118:14"},{"body":{"nodeType":"YulBlock","src":"6048:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:14"},"nodeType":"YulFunctionCall","src":"6070:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:14"},"nodeType":"YulFunctionCall","src":"6058:34:14"},"nodeType":"YulExpressionStatement","src":"6058:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:14","type":""}],"src":"5989:109:14"},{"body":{"nodeType":"YulBlock","src":"6194:270:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:14"},"nodeType":"YulFunctionCall","src":"6218:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:14"},"nodeType":"YulFunctionCall","src":"6272:70:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:14"},"nodeType":"YulFunctionCall","src":"6373:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:14"},"nodeType":"YulFunctionCall","src":"6351:52:14"},"nodeType":"YulExpressionStatement","src":"6351:52:14"},{"nodeType":"YulAssignment","src":"6412:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:14"},"nodeType":"YulFunctionCall","src":"6428:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:14"},"nodeType":"YulFunctionCall","src":"6419:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:14","type":""}],"src":"6104:360:14"},{"body":{"nodeType":"YulBlock","src":"6562:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:14"},"nodeType":"YulFunctionCall","src":"6586:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:14"},"nodeType":"YulFunctionCall","src":"6641:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:14"},"nodeType":"YulFunctionCall","src":"6743:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:14"},"nodeType":"YulFunctionCall","src":"6721:52:14"},"nodeType":"YulExpressionStatement","src":"6721:52:14"},{"nodeType":"YulAssignment","src":"6782:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:14"},"nodeType":"YulFunctionCall","src":"6798:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:14"},"nodeType":"YulFunctionCall","src":"6789:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:14","type":""}],"src":"6470:364:14"},{"body":{"nodeType":"YulBlock","src":"6950:267:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6960:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7007:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6974:32:14"},"nodeType":"YulFunctionCall","src":"6974:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6964:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7022:96:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7106:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7111:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7029:76:14"},"nodeType":"YulFunctionCall","src":"7029:89:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7022:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7153:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"7160:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:14"},"nodeType":"YulFunctionCall","src":"7149:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"7167:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7172:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7127:21:14"},"nodeType":"YulFunctionCall","src":"7127:52:14"},"nodeType":"YulExpressionStatement","src":"7127:52:14"},{"nodeType":"YulAssignment","src":"7188:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7199:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7204:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7195:3:14"},"nodeType":"YulFunctionCall","src":"7195:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7188:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6931:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6938:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6946:3:14","type":""}],"src":"6840:377:14"},{"body":{"nodeType":"YulBlock","src":"7369:220:14","statements":[{"nodeType":"YulAssignment","src":"7379:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7445:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7450:2:14","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7386:58:14"},"nodeType":"YulFunctionCall","src":"7386:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:14"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7462:88:14"},"nodeType":"YulFunctionCall","src":"7462:93:14"},"nodeType":"YulExpressionStatement","src":"7462:93:14"},{"nodeType":"YulAssignment","src":"7564:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7575:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7571:3:14"},"nodeType":"YulFunctionCall","src":"7571:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7564:3:14"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7357:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7365:3:14","type":""}],"src":"7223:366:14"},{"body":{"nodeType":"YulBlock","src":"7759:236:14","statements":[{"nodeType":"YulAssignment","src":"7769:91:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7853:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7858:1:14","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7776:76:14"},"nodeType":"YulFunctionCall","src":"7776:84:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7769:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7958:3:14"}],"functionName":{"name":"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","nodeType":"YulIdentifier","src":"7869:88:14"},"nodeType":"YulFunctionCall","src":"7869:93:14"},"nodeType":"YulExpressionStatement","src":"7869:93:14"},{"nodeType":"YulAssignment","src":"7971:18:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7982:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7987:1:14","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7978:3:14"},"nodeType":"YulFunctionCall","src":"7978:11:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7971:3:14"}]}]},"name":"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7747:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7755:3:14","type":""}],"src":"7595:400:14"},{"body":{"nodeType":"YulBlock","src":"8147:220:14","statements":[{"nodeType":"YulAssignment","src":"8157:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8223:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8228:2:14","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8164:58:14"},"nodeType":"YulFunctionCall","src":"8164:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8157:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8329:3:14"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"8240:88:14"},"nodeType":"YulFunctionCall","src":"8240:93:14"},"nodeType":"YulExpressionStatement","src":"8240:93:14"},{"nodeType":"YulAssignment","src":"8342:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8353:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8358:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8349:3:14"},"nodeType":"YulFunctionCall","src":"8349:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8342:3:14"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8135:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8143:3:14","type":""}],"src":"8001:366:14"},{"body":{"nodeType":"YulBlock","src":"8519:220:14","statements":[{"nodeType":"YulAssignment","src":"8529:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8595:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8600:2:14","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8536:58:14"},"nodeType":"YulFunctionCall","src":"8536:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8529:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8701:3:14"}],"functionName":{"name":"store_literal_in_memory_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2","nodeType":"YulIdentifier","src":"8612:88:14"},"nodeType":"YulFunctionCall","src":"8612:93:14"},"nodeType":"YulExpressionStatement","src":"8612:93:14"},{"nodeType":"YulAssignment","src":"8714:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8725:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8730:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8721:3:14"},"nodeType":"YulFunctionCall","src":"8721:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8714:3:14"}]}]},"name":"abi_encode_t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8507:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8515:3:14","type":""}],"src":"8373:366:14"},{"body":{"nodeType":"YulBlock","src":"8891:220:14","statements":[{"nodeType":"YulAssignment","src":"8901:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8967:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8972:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8908:58:14"},"nodeType":"YulFunctionCall","src":"8908:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8901:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9073:3:14"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"8984:88:14"},"nodeType":"YulFunctionCall","src":"8984:93:14"},"nodeType":"YulExpressionStatement","src":"8984:93:14"},{"nodeType":"YulAssignment","src":"9086:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9097:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9102:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9093:3:14"},"nodeType":"YulFunctionCall","src":"9093:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9086:3:14"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8879:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8887:3:14","type":""}],"src":"8745:366:14"},{"body":{"nodeType":"YulBlock","src":"9263:220:14","statements":[{"nodeType":"YulAssignment","src":"9273:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9339:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9344:2:14","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9280:58:14"},"nodeType":"YulFunctionCall","src":"9280:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9273:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9445:3:14"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"9356:88:14"},"nodeType":"YulFunctionCall","src":"9356:93:14"},"nodeType":"YulExpressionStatement","src":"9356:93:14"},{"nodeType":"YulAssignment","src":"9458:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9469:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9474:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9465:3:14"},"nodeType":"YulFunctionCall","src":"9465:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9458:3:14"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9251:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9259:3:14","type":""}],"src":"9117:366:14"},{"body":{"nodeType":"YulBlock","src":"9653:238:14","statements":[{"nodeType":"YulAssignment","src":"9663:92:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9747:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9752:2:14","type":"","value":"77"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9670:76:14"},"nodeType":"YulFunctionCall","src":"9670:85:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9663:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9853:3:14"}],"functionName":{"name":"store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf","nodeType":"YulIdentifier","src":"9764:88:14"},"nodeType":"YulFunctionCall","src":"9764:93:14"},"nodeType":"YulExpressionStatement","src":"9764:93:14"},{"nodeType":"YulAssignment","src":"9866:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9877:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9882:2:14","type":"","value":"77"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9873:3:14"},"nodeType":"YulFunctionCall","src":"9873:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9866:3:14"}]}]},"name":"abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9641:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9649:3:14","type":""}],"src":"9489:402:14"},{"body":{"nodeType":"YulBlock","src":"10043:220:14","statements":[{"nodeType":"YulAssignment","src":"10053:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10119:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10124:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10060:58:14"},"nodeType":"YulFunctionCall","src":"10060:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10053:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10225:3:14"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"10136:88:14"},"nodeType":"YulFunctionCall","src":"10136:93:14"},"nodeType":"YulExpressionStatement","src":"10136:93:14"},{"nodeType":"YulAssignment","src":"10238:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10249:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10254:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10245:3:14"},"nodeType":"YulFunctionCall","src":"10245:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10238:3:14"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10031:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10039:3:14","type":""}],"src":"9897:366:14"},{"body":{"nodeType":"YulBlock","src":"10415:220:14","statements":[{"nodeType":"YulAssignment","src":"10425:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10491:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10496:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10432:58:14"},"nodeType":"YulFunctionCall","src":"10432:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10425:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10597:3:14"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"10508:88:14"},"nodeType":"YulFunctionCall","src":"10508:93:14"},"nodeType":"YulExpressionStatement","src":"10508:93:14"},{"nodeType":"YulAssignment","src":"10610:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10621:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10626:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10617:3:14"},"nodeType":"YulFunctionCall","src":"10617:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10610:3:14"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10403:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10411:3:14","type":""}],"src":"10269:366:14"},{"body":{"nodeType":"YulBlock","src":"10805:238:14","statements":[{"nodeType":"YulAssignment","src":"10815:92:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10899:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10904:2:14","type":"","value":"65"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10822:76:14"},"nodeType":"YulFunctionCall","src":"10822:85:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10815:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11005:3:14"}],"functionName":{"name":"store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719","nodeType":"YulIdentifier","src":"10916:88:14"},"nodeType":"YulFunctionCall","src":"10916:93:14"},"nodeType":"YulExpressionStatement","src":"10916:93:14"},{"nodeType":"YulAssignment","src":"11018:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11029:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11034:2:14","type":"","value":"65"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11025:3:14"},"nodeType":"YulFunctionCall","src":"11025:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11018:3:14"}]}]},"name":"abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10793:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10801:3:14","type":""}],"src":"10641:402:14"},{"body":{"nodeType":"YulBlock","src":"11195:220:14","statements":[{"nodeType":"YulAssignment","src":"11205:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11271:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11276:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11212:58:14"},"nodeType":"YulFunctionCall","src":"11212:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11205:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11377:3:14"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"11288:88:14"},"nodeType":"YulFunctionCall","src":"11288:93:14"},"nodeType":"YulExpressionStatement","src":"11288:93:14"},{"nodeType":"YulAssignment","src":"11390:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11401:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11406:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11397:3:14"},"nodeType":"YulFunctionCall","src":"11397:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11390:3:14"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11183:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11191:3:14","type":""}],"src":"11049:366:14"},{"body":{"nodeType":"YulBlock","src":"11585:236:14","statements":[{"nodeType":"YulAssignment","src":"11595:91:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11679:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11684:1:14","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11602:76:14"},"nodeType":"YulFunctionCall","src":"11602:84:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11595:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11784:3:14"}],"functionName":{"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulIdentifier","src":"11695:88:14"},"nodeType":"YulFunctionCall","src":"11695:93:14"},"nodeType":"YulExpressionStatement","src":"11695:93:14"},{"nodeType":"YulAssignment","src":"11797:18:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11808:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11813:1:14","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11804:3:14"},"nodeType":"YulFunctionCall","src":"11804:11:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11797:3:14"}]}]},"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11573:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11581:3:14","type":""}],"src":"11421:400:14"},{"body":{"nodeType":"YulBlock","src":"11973:220:14","statements":[{"nodeType":"YulAssignment","src":"11983:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12049:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12054:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11990:58:14"},"nodeType":"YulFunctionCall","src":"11990:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11983:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12155:3:14"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"12066:88:14"},"nodeType":"YulFunctionCall","src":"12066:93:14"},"nodeType":"YulExpressionStatement","src":"12066:93:14"},{"nodeType":"YulAssignment","src":"12168:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12179:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12184:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12175:3:14"},"nodeType":"YulFunctionCall","src":"12175:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12168:3:14"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11961:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11969:3:14","type":""}],"src":"11827:366:14"},{"body":{"nodeType":"YulBlock","src":"12345:220:14","statements":[{"nodeType":"YulAssignment","src":"12355:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12421:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12426:2:14","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12362:58:14"},"nodeType":"YulFunctionCall","src":"12362:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12355:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12527:3:14"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"12438:88:14"},"nodeType":"YulFunctionCall","src":"12438:93:14"},"nodeType":"YulExpressionStatement","src":"12438:93:14"},{"nodeType":"YulAssignment","src":"12540:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12551:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12556:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12547:3:14"},"nodeType":"YulFunctionCall","src":"12547:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12540:3:14"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12333:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12341:3:14","type":""}],"src":"12199:366:14"},{"body":{"nodeType":"YulBlock","src":"12717:220:14","statements":[{"nodeType":"YulAssignment","src":"12727:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12793:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12798:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12734:58:14"},"nodeType":"YulFunctionCall","src":"12734:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12727:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12899:3:14"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"12810:88:14"},"nodeType":"YulFunctionCall","src":"12810:93:14"},"nodeType":"YulExpressionStatement","src":"12810:93:14"},{"nodeType":"YulAssignment","src":"12912:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12923:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12928:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12919:3:14"},"nodeType":"YulFunctionCall","src":"12919:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12912:3:14"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12705:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12713:3:14","type":""}],"src":"12571:366:14"},{"body":{"nodeType":"YulBlock","src":"13089:220:14","statements":[{"nodeType":"YulAssignment","src":"13099:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13165:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13170:2:14","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13106:58:14"},"nodeType":"YulFunctionCall","src":"13106:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13099:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13271:3:14"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"13182:88:14"},"nodeType":"YulFunctionCall","src":"13182:93:14"},"nodeType":"YulExpressionStatement","src":"13182:93:14"},{"nodeType":"YulAssignment","src":"13284:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13295:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13300:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13291:3:14"},"nodeType":"YulFunctionCall","src":"13291:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13284:3:14"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13077:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13085:3:14","type":""}],"src":"12943:366:14"},{"body":{"nodeType":"YulBlock","src":"13380:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13397:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13420:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13402:17:14"},"nodeType":"YulFunctionCall","src":"13402:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13390:6:14"},"nodeType":"YulFunctionCall","src":"13390:37:14"},"nodeType":"YulExpressionStatement","src":"13390:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13368:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13375:3:14","type":""}],"src":"13315:118:14"},{"body":{"nodeType":"YulBlock","src":"13623:251:14","statements":[{"nodeType":"YulAssignment","src":"13634:102:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13723:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"13732:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13641:81:14"},"nodeType":"YulFunctionCall","src":"13641:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13634:3:14"}]},{"nodeType":"YulAssignment","src":"13746:102:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13835:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"13844:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13753:81:14"},"nodeType":"YulFunctionCall","src":"13753:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13746:3:14"}]},{"nodeType":"YulAssignment","src":"13858:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"13865:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13858:3:14"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13594:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13600:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13608:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13619:3:14","type":""}],"src":"13439:435:14"},{"body":{"nodeType":"YulBlock","src":"14468:911:14","statements":[{"nodeType":"YulAssignment","src":"14479:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14630:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14486:142:14"},"nodeType":"YulFunctionCall","src":"14486:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14479:3:14"}]},{"nodeType":"YulAssignment","src":"14644:102:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14733:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"14742:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14651:81:14"},"nodeType":"YulFunctionCall","src":"14651:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14644:3:14"}]},{"nodeType":"YulAssignment","src":"14756:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14907:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14763:142:14"},"nodeType":"YulFunctionCall","src":"14763:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14756:3:14"}]},{"nodeType":"YulAssignment","src":"14921:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15072:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14928:142:14"},"nodeType":"YulFunctionCall","src":"14928:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14921:3:14"}]},{"nodeType":"YulAssignment","src":"15086:102:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15175:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"15184:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15093:81:14"},"nodeType":"YulFunctionCall","src":"15093:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15086:3:14"}]},{"nodeType":"YulAssignment","src":"15198:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15349:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15205:142:14"},"nodeType":"YulFunctionCall","src":"15205:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15198:3:14"}]},{"nodeType":"YulAssignment","src":"15363:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"15370:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15363:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14439:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14445:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14453:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14464:3:14","type":""}],"src":"13880:1499:14"},{"body":{"nodeType":"YulBlock","src":"15483:124:14","statements":[{"nodeType":"YulAssignment","src":"15493:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15505:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15516:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15501:3:14"},"nodeType":"YulFunctionCall","src":"15501:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15493:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15573:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15586:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15597:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15582:3:14"},"nodeType":"YulFunctionCall","src":"15582:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15529:43:14"},"nodeType":"YulFunctionCall","src":"15529:71:14"},"nodeType":"YulExpressionStatement","src":"15529:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15455:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15467:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15478:4:14","type":""}],"src":"15385:222:14"},{"body":{"nodeType":"YulBlock","src":"15813:440:14","statements":[{"nodeType":"YulAssignment","src":"15823:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15835:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15846:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15831:3:14"},"nodeType":"YulFunctionCall","src":"15831:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15823:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15904:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15917:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15928:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15913:3:14"},"nodeType":"YulFunctionCall","src":"15913:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15860:43:14"},"nodeType":"YulFunctionCall","src":"15860:71:14"},"nodeType":"YulExpressionStatement","src":"15860:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15985:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15998:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16009:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15994:3:14"},"nodeType":"YulFunctionCall","src":"15994:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15941:43:14"},"nodeType":"YulFunctionCall","src":"15941:72:14"},"nodeType":"YulExpressionStatement","src":"15941:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16067:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16080:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16091:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16076:3:14"},"nodeType":"YulFunctionCall","src":"16076:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16023:43:14"},"nodeType":"YulFunctionCall","src":"16023:72:14"},"nodeType":"YulExpressionStatement","src":"16023:72:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16116:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16127:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16112:3:14"},"nodeType":"YulFunctionCall","src":"16112:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16136:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"16142:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16132:3:14"},"nodeType":"YulFunctionCall","src":"16132:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16105:6:14"},"nodeType":"YulFunctionCall","src":"16105:48:14"},"nodeType":"YulExpressionStatement","src":"16105:48:14"},{"nodeType":"YulAssignment","src":"16162:84:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16232:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"16241:4:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16170:61:14"},"nodeType":"YulFunctionCall","src":"16170:76:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16162:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15761:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15773:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15781:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15789:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15797:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15808:4:14","type":""}],"src":"15613:640:14"},{"body":{"nodeType":"YulBlock","src":"16351:118:14","statements":[{"nodeType":"YulAssignment","src":"16361:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16373:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16384:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16369:3:14"},"nodeType":"YulFunctionCall","src":"16369:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16361:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16435:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16448:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16459:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16444:3:14"},"nodeType":"YulFunctionCall","src":"16444:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"16397:37:14"},"nodeType":"YulFunctionCall","src":"16397:65:14"},"nodeType":"YulExpressionStatement","src":"16397:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16323:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16335:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16346:4:14","type":""}],"src":"16259:210:14"},{"body":{"nodeType":"YulBlock","src":"16593:195:14","statements":[{"nodeType":"YulAssignment","src":"16603:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16615:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16626:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16611:3:14"},"nodeType":"YulFunctionCall","src":"16611:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16603:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16650:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16661:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16646:3:14"},"nodeType":"YulFunctionCall","src":"16646:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16669:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"16675:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16665:3:14"},"nodeType":"YulFunctionCall","src":"16665:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16639:6:14"},"nodeType":"YulFunctionCall","src":"16639:47:14"},"nodeType":"YulExpressionStatement","src":"16639:47:14"},{"nodeType":"YulAssignment","src":"16695:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16767:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"16776:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16703:63:14"},"nodeType":"YulFunctionCall","src":"16703:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16695:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16565:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16577:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16588:4:14","type":""}],"src":"16475:313:14"},{"body":{"nodeType":"YulBlock","src":"16965:248:14","statements":[{"nodeType":"YulAssignment","src":"16975:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16987:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16998:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16983:3:14"},"nodeType":"YulFunctionCall","src":"16983:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16975:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17022:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17033:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17018:3:14"},"nodeType":"YulFunctionCall","src":"17018:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17041:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17047:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17037:3:14"},"nodeType":"YulFunctionCall","src":"17037:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17011:6:14"},"nodeType":"YulFunctionCall","src":"17011:47:14"},"nodeType":"YulExpressionStatement","src":"17011:47:14"},{"nodeType":"YulAssignment","src":"17067:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17201:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17075:124:14"},"nodeType":"YulFunctionCall","src":"17075:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17067:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16945:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16960:4:14","type":""}],"src":"16794:419:14"},{"body":{"nodeType":"YulBlock","src":"17390:248:14","statements":[{"nodeType":"YulAssignment","src":"17400:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17412:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17423:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17408:3:14"},"nodeType":"YulFunctionCall","src":"17408:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17400:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17447:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17458:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17443:3:14"},"nodeType":"YulFunctionCall","src":"17443:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17466:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17472:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17462:3:14"},"nodeType":"YulFunctionCall","src":"17462:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17436:6:14"},"nodeType":"YulFunctionCall","src":"17436:47:14"},"nodeType":"YulExpressionStatement","src":"17436:47:14"},{"nodeType":"YulAssignment","src":"17492:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17626:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17500:124:14"},"nodeType":"YulFunctionCall","src":"17500:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17492:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17370:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17385:4:14","type":""}],"src":"17219:419:14"},{"body":{"nodeType":"YulBlock","src":"17815:248:14","statements":[{"nodeType":"YulAssignment","src":"17825:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17837:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17848:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17833:3:14"},"nodeType":"YulFunctionCall","src":"17833:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17825:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17872:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17883:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17868:3:14"},"nodeType":"YulFunctionCall","src":"17868:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17891:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17897:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17887:3:14"},"nodeType":"YulFunctionCall","src":"17887:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17861:6:14"},"nodeType":"YulFunctionCall","src":"17861:47:14"},"nodeType":"YulExpressionStatement","src":"17861:47:14"},{"nodeType":"YulAssignment","src":"17917:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18051:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17925:124:14"},"nodeType":"YulFunctionCall","src":"17925:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17917:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17795:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17810:4:14","type":""}],"src":"17644:419:14"},{"body":{"nodeType":"YulBlock","src":"18240:248:14","statements":[{"nodeType":"YulAssignment","src":"18250:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18262:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18273:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18258:3:14"},"nodeType":"YulFunctionCall","src":"18258:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18250:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18297:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18308:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18293:3:14"},"nodeType":"YulFunctionCall","src":"18293:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18316:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"18322:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18312:3:14"},"nodeType":"YulFunctionCall","src":"18312:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18286:6:14"},"nodeType":"YulFunctionCall","src":"18286:47:14"},"nodeType":"YulExpressionStatement","src":"18286:47:14"},{"nodeType":"YulAssignment","src":"18342:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18476:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18350:124:14"},"nodeType":"YulFunctionCall","src":"18350:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18342:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18220:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18235:4:14","type":""}],"src":"18069:419:14"},{"body":{"nodeType":"YulBlock","src":"18665:248:14","statements":[{"nodeType":"YulAssignment","src":"18675:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18687:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18698:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18683:3:14"},"nodeType":"YulFunctionCall","src":"18683:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18675:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18722:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18733:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18718:3:14"},"nodeType":"YulFunctionCall","src":"18718:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18741:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"18747:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18737:3:14"},"nodeType":"YulFunctionCall","src":"18737:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18711:6:14"},"nodeType":"YulFunctionCall","src":"18711:47:14"},"nodeType":"YulExpressionStatement","src":"18711:47:14"},{"nodeType":"YulAssignment","src":"18767:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18901:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18775:124:14"},"nodeType":"YulFunctionCall","src":"18775:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18767:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18645:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18660:4:14","type":""}],"src":"18494:419:14"},{"body":{"nodeType":"YulBlock","src":"19090:248:14","statements":[{"nodeType":"YulAssignment","src":"19100:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19112:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19123:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19108:3:14"},"nodeType":"YulFunctionCall","src":"19108:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19100:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19147:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19158:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19143:3:14"},"nodeType":"YulFunctionCall","src":"19143:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19166:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"19172:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19162:3:14"},"nodeType":"YulFunctionCall","src":"19162:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19136:6:14"},"nodeType":"YulFunctionCall","src":"19136:47:14"},"nodeType":"YulExpressionStatement","src":"19136:47:14"},{"nodeType":"YulAssignment","src":"19192:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19326:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19200:124:14"},"nodeType":"YulFunctionCall","src":"19200:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19192:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19070:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19085:4:14","type":""}],"src":"18919:419:14"},{"body":{"nodeType":"YulBlock","src":"19515:248:14","statements":[{"nodeType":"YulAssignment","src":"19525:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19537:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19548:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19533:3:14"},"nodeType":"YulFunctionCall","src":"19533:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19525:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19572:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19583:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19568:3:14"},"nodeType":"YulFunctionCall","src":"19568:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19591:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"19597:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19587:3:14"},"nodeType":"YulFunctionCall","src":"19587:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19561:6:14"},"nodeType":"YulFunctionCall","src":"19561:47:14"},"nodeType":"YulExpressionStatement","src":"19561:47:14"},{"nodeType":"YulAssignment","src":"19617:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19751:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19625:124:14"},"nodeType":"YulFunctionCall","src":"19625:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19617:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19495:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19510:4:14","type":""}],"src":"19344:419:14"},{"body":{"nodeType":"YulBlock","src":"19940:248:14","statements":[{"nodeType":"YulAssignment","src":"19950:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19962:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19973:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19958:3:14"},"nodeType":"YulFunctionCall","src":"19958:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19950:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19997:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20008:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19993:3:14"},"nodeType":"YulFunctionCall","src":"19993:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20016:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"20022:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20012:3:14"},"nodeType":"YulFunctionCall","src":"20012:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19986:6:14"},"nodeType":"YulFunctionCall","src":"19986:47:14"},"nodeType":"YulExpressionStatement","src":"19986:47:14"},{"nodeType":"YulAssignment","src":"20042:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20176:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20050:124:14"},"nodeType":"YulFunctionCall","src":"20050:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20042:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19920:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19935:4:14","type":""}],"src":"19769:419:14"},{"body":{"nodeType":"YulBlock","src":"20365:248:14","statements":[{"nodeType":"YulAssignment","src":"20375:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20387:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20398:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20383:3:14"},"nodeType":"YulFunctionCall","src":"20383:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20375:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20422:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20433:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20418:3:14"},"nodeType":"YulFunctionCall","src":"20418:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20441:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"20447:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20437:3:14"},"nodeType":"YulFunctionCall","src":"20437:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20411:6:14"},"nodeType":"YulFunctionCall","src":"20411:47:14"},"nodeType":"YulExpressionStatement","src":"20411:47:14"},{"nodeType":"YulAssignment","src":"20467:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20601:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20475:124:14"},"nodeType":"YulFunctionCall","src":"20475:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20467:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20345:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20360:4:14","type":""}],"src":"20194:419:14"},{"body":{"nodeType":"YulBlock","src":"20790:248:14","statements":[{"nodeType":"YulAssignment","src":"20800:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20812:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20823:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20808:3:14"},"nodeType":"YulFunctionCall","src":"20808:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20800:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20847:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20858:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20843:3:14"},"nodeType":"YulFunctionCall","src":"20843:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20866:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"20872:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20862:3:14"},"nodeType":"YulFunctionCall","src":"20862:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20836:6:14"},"nodeType":"YulFunctionCall","src":"20836:47:14"},"nodeType":"YulExpressionStatement","src":"20836:47:14"},{"nodeType":"YulAssignment","src":"20892:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21026:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20900:124:14"},"nodeType":"YulFunctionCall","src":"20900:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20892:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20770:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20785:4:14","type":""}],"src":"20619:419:14"},{"body":{"nodeType":"YulBlock","src":"21215:248:14","statements":[{"nodeType":"YulAssignment","src":"21225:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21237:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21248:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21233:3:14"},"nodeType":"YulFunctionCall","src":"21233:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21225:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21272:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21283:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21268:3:14"},"nodeType":"YulFunctionCall","src":"21268:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21291:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"21297:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21287:3:14"},"nodeType":"YulFunctionCall","src":"21287:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21261:6:14"},"nodeType":"YulFunctionCall","src":"21261:47:14"},"nodeType":"YulExpressionStatement","src":"21261:47:14"},{"nodeType":"YulAssignment","src":"21317:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21451:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21325:124:14"},"nodeType":"YulFunctionCall","src":"21325:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21317:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21195:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21210:4:14","type":""}],"src":"21044:419:14"},{"body":{"nodeType":"YulBlock","src":"21640:248:14","statements":[{"nodeType":"YulAssignment","src":"21650:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21662:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21673:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21658:3:14"},"nodeType":"YulFunctionCall","src":"21658:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21650:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21697:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21708:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21693:3:14"},"nodeType":"YulFunctionCall","src":"21693:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21716:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"21722:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21712:3:14"},"nodeType":"YulFunctionCall","src":"21712:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21686:6:14"},"nodeType":"YulFunctionCall","src":"21686:47:14"},"nodeType":"YulExpressionStatement","src":"21686:47:14"},{"nodeType":"YulAssignment","src":"21742:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21876:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21750:124:14"},"nodeType":"YulFunctionCall","src":"21750:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21742:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21620:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21635:4:14","type":""}],"src":"21469:419:14"},{"body":{"nodeType":"YulBlock","src":"21992:124:14","statements":[{"nodeType":"YulAssignment","src":"22002:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22014:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22025:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22010:3:14"},"nodeType":"YulFunctionCall","src":"22010:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22002:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22082:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22095:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22106:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22091:3:14"},"nodeType":"YulFunctionCall","src":"22091:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22038:43:14"},"nodeType":"YulFunctionCall","src":"22038:71:14"},"nodeType":"YulExpressionStatement","src":"22038:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21964:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21976:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21987:4:14","type":""}],"src":"21894:222:14"},{"body":{"nodeType":"YulBlock","src":"22163:88:14","statements":[{"nodeType":"YulAssignment","src":"22173:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"22183:18:14"},"nodeType":"YulFunctionCall","src":"22183:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22173:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22232:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"22240:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"22212:19:14"},"nodeType":"YulFunctionCall","src":"22212:33:14"},"nodeType":"YulExpressionStatement","src":"22212:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"22147:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"22156:6:14","type":""}],"src":"22122:129:14"},{"body":{"nodeType":"YulBlock","src":"22297:35:14","statements":[{"nodeType":"YulAssignment","src":"22307:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22323:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22317:5:14"},"nodeType":"YulFunctionCall","src":"22317:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22307:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"22290:6:14","type":""}],"src":"22257:75:14"},{"body":{"nodeType":"YulBlock","src":"22404:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"22509:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22511:16:14"},"nodeType":"YulFunctionCall","src":"22511:18:14"},"nodeType":"YulExpressionStatement","src":"22511:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22481:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22489:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22478:2:14"},"nodeType":"YulFunctionCall","src":"22478:30:14"},"nodeType":"YulIf","src":"22475:56:14"},{"nodeType":"YulAssignment","src":"22541:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22571:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22549:21:14"},"nodeType":"YulFunctionCall","src":"22549:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22541:4:14"}]},{"nodeType":"YulAssignment","src":"22615:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"22627:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"22633:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22623:3:14"},"nodeType":"YulFunctionCall","src":"22623:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22615:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"22388:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"22399:4:14","type":""}],"src":"22338:307:14"},{"body":{"nodeType":"YulBlock","src":"22709:40:14","statements":[{"nodeType":"YulAssignment","src":"22720:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22736:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22730:5:14"},"nodeType":"YulFunctionCall","src":"22730:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22720:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22692:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22702:6:14","type":""}],"src":"22651:98:14"},{"body":{"nodeType":"YulBlock","src":"22814:40:14","statements":[{"nodeType":"YulAssignment","src":"22825:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22841:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22835:5:14"},"nodeType":"YulFunctionCall","src":"22835:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22825:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22797:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22807:6:14","type":""}],"src":"22755:99:14"},{"body":{"nodeType":"YulBlock","src":"22955:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22972:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"22977:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22965:6:14"},"nodeType":"YulFunctionCall","src":"22965:19:14"},"nodeType":"YulExpressionStatement","src":"22965:19:14"},{"nodeType":"YulAssignment","src":"22993:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23012:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23017:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23008:3:14"},"nodeType":"YulFunctionCall","src":"23008:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22993:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22927:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"22932:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22943:11:14","type":""}],"src":"22860:168:14"},{"body":{"nodeType":"YulBlock","src":"23130:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23147:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"23152:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23140:6:14"},"nodeType":"YulFunctionCall","src":"23140:19:14"},"nodeType":"YulExpressionStatement","src":"23140:19:14"},{"nodeType":"YulAssignment","src":"23168:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23187:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23192:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23183:3:14"},"nodeType":"YulFunctionCall","src":"23183:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23168:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23102:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"23107:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23118:11:14","type":""}],"src":"23034:169:14"},{"body":{"nodeType":"YulBlock","src":"23323:34:14","statements":[{"nodeType":"YulAssignment","src":"23333:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"23348:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23333:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23295:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"23300:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23311:11:14","type":""}],"src":"23209:148:14"},{"body":{"nodeType":"YulBlock","src":"23407:261:14","statements":[{"nodeType":"YulAssignment","src":"23417:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23440:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23422:17:14"},"nodeType":"YulFunctionCall","src":"23422:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23417:1:14"}]},{"nodeType":"YulAssignment","src":"23451:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23474:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23456:17:14"},"nodeType":"YulFunctionCall","src":"23456:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23451:1:14"}]},{"body":{"nodeType":"YulBlock","src":"23614:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23616:16:14"},"nodeType":"YulFunctionCall","src":"23616:18:14"},"nodeType":"YulExpressionStatement","src":"23616:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23535:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23542:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"23610:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23538:3:14"},"nodeType":"YulFunctionCall","src":"23538:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23532:2:14"},"nodeType":"YulFunctionCall","src":"23532:81:14"},"nodeType":"YulIf","src":"23529:107:14"},{"nodeType":"YulAssignment","src":"23646:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23657:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"23660:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23653:3:14"},"nodeType":"YulFunctionCall","src":"23653:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23646:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23394:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"23397:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23403:3:14","type":""}],"src":"23363:305:14"},{"body":{"nodeType":"YulBlock","src":"23716:143:14","statements":[{"nodeType":"YulAssignment","src":"23726:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23749:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23731:17:14"},"nodeType":"YulFunctionCall","src":"23731:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23726:1:14"}]},{"nodeType":"YulAssignment","src":"23760:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23783:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23765:17:14"},"nodeType":"YulFunctionCall","src":"23765:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23760:1:14"}]},{"body":{"nodeType":"YulBlock","src":"23807:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"23809:16:14"},"nodeType":"YulFunctionCall","src":"23809:18:14"},"nodeType":"YulExpressionStatement","src":"23809:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23804:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23797:6:14"},"nodeType":"YulFunctionCall","src":"23797:9:14"},"nodeType":"YulIf","src":"23794:35:14"},{"nodeType":"YulAssignment","src":"23839:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23848:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"23851:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23844:3:14"},"nodeType":"YulFunctionCall","src":"23844:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"23839:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23705:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"23708:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"23714:1:14","type":""}],"src":"23674:185:14"},{"body":{"nodeType":"YulBlock","src":"23913:300:14","statements":[{"nodeType":"YulAssignment","src":"23923:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23946:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23928:17:14"},"nodeType":"YulFunctionCall","src":"23928:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23923:1:14"}]},{"nodeType":"YulAssignment","src":"23957:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23980:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23962:17:14"},"nodeType":"YulFunctionCall","src":"23962:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23957:1:14"}]},{"body":{"nodeType":"YulBlock","src":"24155:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24157:16:14"},"nodeType":"YulFunctionCall","src":"24157:18:14"},"nodeType":"YulExpressionStatement","src":"24157:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24067:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24060:6:14"},"nodeType":"YulFunctionCall","src":"24060:9:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24053:6:14"},"nodeType":"YulFunctionCall","src":"24053:17:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24075:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24082:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"24150:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24078:3:14"},"nodeType":"YulFunctionCall","src":"24078:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24072:2:14"},"nodeType":"YulFunctionCall","src":"24072:81:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24049:3:14"},"nodeType":"YulFunctionCall","src":"24049:105:14"},"nodeType":"YulIf","src":"24046:131:14"},{"nodeType":"YulAssignment","src":"24187:20:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24202:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"24205:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24198:3:14"},"nodeType":"YulFunctionCall","src":"24198:9:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"24187:7:14"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23896:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"23899:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"23905:7:14","type":""}],"src":"23865:348:14"},{"body":{"nodeType":"YulBlock","src":"24264:146:14","statements":[{"nodeType":"YulAssignment","src":"24274:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24297:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24279:17:14"},"nodeType":"YulFunctionCall","src":"24279:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24274:1:14"}]},{"nodeType":"YulAssignment","src":"24308:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24331:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24313:17:14"},"nodeType":"YulFunctionCall","src":"24313:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24308:1:14"}]},{"body":{"nodeType":"YulBlock","src":"24355:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24357:16:14"},"nodeType":"YulFunctionCall","src":"24357:18:14"},"nodeType":"YulExpressionStatement","src":"24357:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24349:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"24352:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24346:2:14"},"nodeType":"YulFunctionCall","src":"24346:8:14"},"nodeType":"YulIf","src":"24343:34:14"},{"nodeType":"YulAssignment","src":"24387:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24399:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"24402:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24395:3:14"},"nodeType":"YulFunctionCall","src":"24395:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24387:4:14"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24250:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"24253:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"24259:4:14","type":""}],"src":"24219:191:14"},{"body":{"nodeType":"YulBlock","src":"24461:51:14","statements":[{"nodeType":"YulAssignment","src":"24471:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24500:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"24482:17:14"},"nodeType":"YulFunctionCall","src":"24482:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24471:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24443:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24453:7:14","type":""}],"src":"24416:96:14"},{"body":{"nodeType":"YulBlock","src":"24560:48:14","statements":[{"nodeType":"YulAssignment","src":"24570:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24595:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24588:6:14"},"nodeType":"YulFunctionCall","src":"24588:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24581:6:14"},"nodeType":"YulFunctionCall","src":"24581:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24570:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24542:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24552:7:14","type":""}],"src":"24518:90:14"},{"body":{"nodeType":"YulBlock","src":"24658:105:14","statements":[{"nodeType":"YulAssignment","src":"24668:89:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24683:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"24690:66:14","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24679:3:14"},"nodeType":"YulFunctionCall","src":"24679:78:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24668:7:14"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24640:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24650:7:14","type":""}],"src":"24614:149:14"},{"body":{"nodeType":"YulBlock","src":"24814:81:14","statements":[{"nodeType":"YulAssignment","src":"24824:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24839:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"24846:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24835:3:14"},"nodeType":"YulFunctionCall","src":"24835:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24824:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24796:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24806:7:14","type":""}],"src":"24769:126:14"},{"body":{"nodeType":"YulBlock","src":"24946:32:14","statements":[{"nodeType":"YulAssignment","src":"24956:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"24967:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24956:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24928:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24938:7:14","type":""}],"src":"24901:77:14"},{"body":{"nodeType":"YulBlock","src":"25035:103:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25058:3:14"},{"name":"src","nodeType":"YulIdentifier","src":"25063:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"25068:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"25045:12:14"},"nodeType":"YulFunctionCall","src":"25045:30:14"},"nodeType":"YulExpressionStatement","src":"25045:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25116:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"25121:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25112:3:14"},"nodeType":"YulFunctionCall","src":"25112:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"25130:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25105:6:14"},"nodeType":"YulFunctionCall","src":"25105:27:14"},"nodeType":"YulExpressionStatement","src":"25105:27:14"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"25017:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"25022:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"25027:6:14","type":""}],"src":"24984:154:14"},{"body":{"nodeType":"YulBlock","src":"25193:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"25203:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"25212:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"25207:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"25272:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25297:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"25302:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25293:3:14"},"nodeType":"YulFunctionCall","src":"25293:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25316:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"25321:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25312:3:14"},"nodeType":"YulFunctionCall","src":"25312:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25306:5:14"},"nodeType":"YulFunctionCall","src":"25306:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25286:6:14"},"nodeType":"YulFunctionCall","src":"25286:39:14"},"nodeType":"YulExpressionStatement","src":"25286:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25233:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"25236:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25230:2:14"},"nodeType":"YulFunctionCall","src":"25230:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25244:19:14","statements":[{"nodeType":"YulAssignment","src":"25246:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25255:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"25258:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25251:3:14"},"nodeType":"YulFunctionCall","src":"25251:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25246:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"25226:3:14","statements":[]},"src":"25222:113:14"},{"body":{"nodeType":"YulBlock","src":"25369:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25419:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"25424:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25415:3:14"},"nodeType":"YulFunctionCall","src":"25415:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"25433:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25408:6:14"},"nodeType":"YulFunctionCall","src":"25408:27:14"},"nodeType":"YulExpressionStatement","src":"25408:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25350:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"25353:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25347:2:14"},"nodeType":"YulFunctionCall","src":"25347:13:14"},"nodeType":"YulIf","src":"25344:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"25175:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"25180:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"25185:6:14","type":""}],"src":"25144:307:14"},{"body":{"nodeType":"YulBlock","src":"25508:269:14","statements":[{"nodeType":"YulAssignment","src":"25518:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25532:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"25538:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25528:3:14"},"nodeType":"YulFunctionCall","src":"25528:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"25518:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"25549:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25579:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"25585:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25575:3:14"},"nodeType":"YulFunctionCall","src":"25575:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"25553:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"25626:51:14","statements":[{"nodeType":"YulAssignment","src":"25640:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25654:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25662:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25650:3:14"},"nodeType":"YulFunctionCall","src":"25650:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"25640:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"25606:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25599:6:14"},"nodeType":"YulFunctionCall","src":"25599:26:14"},"nodeType":"YulIf","src":"25596:81:14"},{"body":{"nodeType":"YulBlock","src":"25729:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"25743:16:14"},"nodeType":"YulFunctionCall","src":"25743:18:14"},"nodeType":"YulExpressionStatement","src":"25743:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"25693:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25716:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25724:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25713:2:14"},"nodeType":"YulFunctionCall","src":"25713:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25690:2:14"},"nodeType":"YulFunctionCall","src":"25690:38:14"},"nodeType":"YulIf","src":"25687:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"25492:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"25501:6:14","type":""}],"src":"25457:320:14"},{"body":{"nodeType":"YulBlock","src":"25826:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"25836:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25858:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"25888:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"25866:21:14"},"nodeType":"YulFunctionCall","src":"25866:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25854:3:14"},"nodeType":"YulFunctionCall","src":"25854:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"25840:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"26005:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"26007:16:14"},"nodeType":"YulFunctionCall","src":"26007:18:14"},"nodeType":"YulExpressionStatement","src":"26007:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"25948:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"25960:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25945:2:14"},"nodeType":"YulFunctionCall","src":"25945:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"25984:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"25996:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25981:2:14"},"nodeType":"YulFunctionCall","src":"25981:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25942:2:14"},"nodeType":"YulFunctionCall","src":"25942:62:14"},"nodeType":"YulIf","src":"25939:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26043:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"26047:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26036:6:14"},"nodeType":"YulFunctionCall","src":"26036:22:14"},"nodeType":"YulExpressionStatement","src":"26036:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25812:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"25820:4:14","type":""}],"src":"25783:281:14"},{"body":{"nodeType":"YulBlock","src":"26098:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26115:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26118:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26108:6:14"},"nodeType":"YulFunctionCall","src":"26108:88:14"},"nodeType":"YulExpressionStatement","src":"26108:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26212:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26215:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26205:6:14"},"nodeType":"YulFunctionCall","src":"26205:15:14"},"nodeType":"YulExpressionStatement","src":"26205:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26236:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26239:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26229:6:14"},"nodeType":"YulFunctionCall","src":"26229:15:14"},"nodeType":"YulExpressionStatement","src":"26229:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"26070:180:14"},{"body":{"nodeType":"YulBlock","src":"26284:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26301:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26304:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26294:6:14"},"nodeType":"YulFunctionCall","src":"26294:88:14"},"nodeType":"YulExpressionStatement","src":"26294:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26398:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26401:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26391:6:14"},"nodeType":"YulFunctionCall","src":"26391:15:14"},"nodeType":"YulExpressionStatement","src":"26391:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26422:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26425:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26415:6:14"},"nodeType":"YulFunctionCall","src":"26415:15:14"},"nodeType":"YulExpressionStatement","src":"26415:15:14"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"26256:180:14"},{"body":{"nodeType":"YulBlock","src":"26470:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26487:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26490:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26480:6:14"},"nodeType":"YulFunctionCall","src":"26480:88:14"},"nodeType":"YulExpressionStatement","src":"26480:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26584:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26587:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26577:6:14"},"nodeType":"YulFunctionCall","src":"26577:15:14"},"nodeType":"YulExpressionStatement","src":"26577:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26608:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26611:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26601:6:14"},"nodeType":"YulFunctionCall","src":"26601:15:14"},"nodeType":"YulExpressionStatement","src":"26601:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"26442:180:14"},{"body":{"nodeType":"YulBlock","src":"26656:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26673:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26676:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26666:6:14"},"nodeType":"YulFunctionCall","src":"26666:88:14"},"nodeType":"YulExpressionStatement","src":"26666:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26770:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26773:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26763:6:14"},"nodeType":"YulFunctionCall","src":"26763:15:14"},"nodeType":"YulExpressionStatement","src":"26763:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26794:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26797:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26787:6:14"},"nodeType":"YulFunctionCall","src":"26787:15:14"},"nodeType":"YulExpressionStatement","src":"26787:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"26628:180:14"},{"body":{"nodeType":"YulBlock","src":"26903:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26920:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26923:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26913:6:14"},"nodeType":"YulFunctionCall","src":"26913:12:14"},"nodeType":"YulExpressionStatement","src":"26913:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"26814:117:14"},{"body":{"nodeType":"YulBlock","src":"27026:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27043:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27046:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27036:6:14"},"nodeType":"YulFunctionCall","src":"27036:12:14"},"nodeType":"YulExpressionStatement","src":"27036:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"26937:117:14"},{"body":{"nodeType":"YulBlock","src":"27149:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27166:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27169:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27159:6:14"},"nodeType":"YulFunctionCall","src":"27159:12:14"},"nodeType":"YulExpressionStatement","src":"27159:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"27060:117:14"},{"body":{"nodeType":"YulBlock","src":"27272:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27289:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27292:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27282:6:14"},"nodeType":"YulFunctionCall","src":"27282:12:14"},"nodeType":"YulExpressionStatement","src":"27282:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"27183:117:14"},{"body":{"nodeType":"YulBlock","src":"27354:54:14","statements":[{"nodeType":"YulAssignment","src":"27364:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27382:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"27389:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27378:3:14"},"nodeType":"YulFunctionCall","src":"27378:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27398:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27394:3:14"},"nodeType":"YulFunctionCall","src":"27394:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27374:3:14"},"nodeType":"YulFunctionCall","src":"27374:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27364:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27337:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27347:6:14","type":""}],"src":"27306:102:14"},{"body":{"nodeType":"YulBlock","src":"27520:126:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27542:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27550:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27538:3:14"},"nodeType":"YulFunctionCall","src":"27538:14:14"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"27554:34:14","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27531:6:14"},"nodeType":"YulFunctionCall","src":"27531:58:14"},"nodeType":"YulExpressionStatement","src":"27531:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27610:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27618:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27606:3:14"},"nodeType":"YulFunctionCall","src":"27606:15:14"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"27623:15:14","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27599:6:14"},"nodeType":"YulFunctionCall","src":"27599:40:14"},"nodeType":"YulExpressionStatement","src":"27599:40:14"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27512:6:14","type":""}],"src":"27414:232:14"},{"body":{"nodeType":"YulBlock","src":"27758:108:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27780:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27788:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27776:3:14"},"nodeType":"YulFunctionCall","src":"27776:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"27792:66:14","type":"","value":"0x7b226e616d65223a220000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27769:6:14"},"nodeType":"YulFunctionCall","src":"27769:90:14"},"nodeType":"YulExpressionStatement","src":"27769:90:14"}]},"name":"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27750:6:14","type":""}],"src":"27652:214:14"},{"body":{"nodeType":"YulBlock","src":"27978:131:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28000:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28008:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27996:3:14"},"nodeType":"YulFunctionCall","src":"27996:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"28012:34:14","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27989:6:14"},"nodeType":"YulFunctionCall","src":"27989:58:14"},"nodeType":"YulExpressionStatement","src":"27989:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28068:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28076:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28064:3:14"},"nodeType":"YulFunctionCall","src":"28064:15:14"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"28081:20:14","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28057:6:14"},"nodeType":"YulFunctionCall","src":"28057:45:14"},"nodeType":"YulExpressionStatement","src":"28057:45:14"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27970:6:14","type":""}],"src":"27872:237:14"},{"body":{"nodeType":"YulBlock","src":"28221:56:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28243:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28251:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28239:3:14"},"nodeType":"YulFunctionCall","src":"28239:14:14"},{"hexValue":"57726f6e672076616c756521","kind":"string","nodeType":"YulLiteral","src":"28255:14:14","type":"","value":"Wrong value!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28232:6:14"},"nodeType":"YulFunctionCall","src":"28232:38:14"},"nodeType":"YulExpressionStatement","src":"28232:38:14"}]},"name":"store_literal_in_memory_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28213:6:14","type":""}],"src":"28115:162:14"},{"body":{"nodeType":"YulBlock","src":"28389:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28411:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28419:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28407:3:14"},"nodeType":"YulFunctionCall","src":"28407:14:14"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"28423:34:14","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28400:6:14"},"nodeType":"YulFunctionCall","src":"28400:58:14"},"nodeType":"YulExpressionStatement","src":"28400:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28479:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28487:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28475:3:14"},"nodeType":"YulFunctionCall","src":"28475:15:14"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"28492:7:14","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28468:6:14"},"nodeType":"YulFunctionCall","src":"28468:32:14"},"nodeType":"YulExpressionStatement","src":"28468:32:14"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28381:6:14","type":""}],"src":"28283:224:14"},{"body":{"nodeType":"YulBlock","src":"28619:72:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28641:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28649:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28637:3:14"},"nodeType":"YulFunctionCall","src":"28637:14:14"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"28653:30:14","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28630:6:14"},"nodeType":"YulFunctionCall","src":"28630:54:14"},"nodeType":"YulExpressionStatement","src":"28630:54:14"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28611:6:14","type":""}],"src":"28513:178:14"},{"body":{"nodeType":"YulBlock","src":"28803:278:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28825:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28833:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28821:3:14"},"nodeType":"YulFunctionCall","src":"28821:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"28837:66:14","type":"","value":"0x222c20226465736372697074696f6e223a22596f752063617074757265642074"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28814:6:14"},"nodeType":"YulFunctionCall","src":"28814:90:14"},"nodeType":"YulExpressionStatement","src":"28814:90:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28925:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28933:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28921:3:14"},"nodeType":"YulFunctionCall","src":"28921:15:14"},{"hexValue":"686973204e46542061732070617274206f662074686520656475636174696f6e","kind":"string","nodeType":"YulLiteral","src":"28938:34:14","type":"","value":"his NFT as part of the education"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28914:6:14"},"nodeType":"YulFunctionCall","src":"28914:59:14"},"nodeType":"YulExpressionStatement","src":"28914:59:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28994:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29002:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28990:3:14"},"nodeType":"YulFunctionCall","src":"28990:15:14"},{"kind":"number","nodeType":"YulLiteral","src":"29007:66:14","type":"","value":"0x616c2053747265616d21222c2000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28983:6:14"},"nodeType":"YulFunctionCall","src":"28983:91:14"},"nodeType":"YulExpressionStatement","src":"28983:91:14"}]},"name":"store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28795:6:14","type":""}],"src":"28697:384:14"},{"body":{"nodeType":"YulBlock","src":"29193:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29215:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29223:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29211:3:14"},"nodeType":"YulFunctionCall","src":"29211:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"29227:34:14","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29204:6:14"},"nodeType":"YulFunctionCall","src":"29204:58:14"},"nodeType":"YulExpressionStatement","src":"29204:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29283:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29291:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29279:3:14"},"nodeType":"YulFunctionCall","src":"29279:15:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"29296:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29272:6:14"},"nodeType":"YulFunctionCall","src":"29272:31:14"},"nodeType":"YulExpressionStatement","src":"29272:31:14"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29185:6:14","type":""}],"src":"29087:223:14"},{"body":{"nodeType":"YulBlock","src":"29422:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29444:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29452:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29440:3:14"},"nodeType":"YulFunctionCall","src":"29440:14:14"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"29456:27:14","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29433:6:14"},"nodeType":"YulFunctionCall","src":"29433:51:14"},"nodeType":"YulExpressionStatement","src":"29433:51:14"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29414:6:14","type":""}],"src":"29316:175:14"},{"body":{"nodeType":"YulBlock","src":"29603:310:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29625:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29633:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29621:3:14"},"nodeType":"YulFunctionCall","src":"29621:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"29637:66:14","type":"","value":"0x2261747472696275746573223a205b7b2274726169745f74797065223a202273"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29614:6:14"},"nodeType":"YulFunctionCall","src":"29614:90:14"},"nodeType":"YulExpressionStatement","src":"29614:90:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29725:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29733:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29721:3:14"},"nodeType":"YulFunctionCall","src":"29721:15:14"},{"kind":"number","nodeType":"YulLiteral","src":"29738:66:14","type":"","value":"0x6b696c6c73222c202276616c7565223a203130307d5d2c2022696d616765223a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29714:6:14"},"nodeType":"YulFunctionCall","src":"29714:91:14"},"nodeType":"YulExpressionStatement","src":"29714:91:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29826:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29834:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29822:3:14"},"nodeType":"YulFunctionCall","src":"29822:15:14"},{"kind":"number","nodeType":"YulLiteral","src":"29839:66:14","type":"","value":"0x2200000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29815:6:14"},"nodeType":"YulFunctionCall","src":"29815:91:14"},"nodeType":"YulExpressionStatement","src":"29815:91:14"}]},"name":"store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29595:6:14","type":""}],"src":"29497:416:14"},{"body":{"nodeType":"YulBlock","src":"30025:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30047:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"30055:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30043:3:14"},"nodeType":"YulFunctionCall","src":"30043:14:14"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"30059:34:14","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30036:6:14"},"nodeType":"YulFunctionCall","src":"30036:58:14"},"nodeType":"YulExpressionStatement","src":"30036:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30115:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"30123:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30111:3:14"},"nodeType":"YulFunctionCall","src":"30111:15:14"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"30128:11:14","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30104:6:14"},"nodeType":"YulFunctionCall","src":"30104:36:14"},"nodeType":"YulExpressionStatement","src":"30104:36:14"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30017:6:14","type":""}],"src":"29919:228:14"},{"body":{"nodeType":"YulBlock","src":"30259:108:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30281:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"30289:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30277:3:14"},"nodeType":"YulFunctionCall","src":"30277:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"30293:66:14","type":"","value":"0x227d000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30270:6:14"},"nodeType":"YulFunctionCall","src":"30270:90:14"},"nodeType":"YulExpressionStatement","src":"30270:90:14"}]},"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30251:6:14","type":""}],"src":"30153:214:14"},{"body":{"nodeType":"YulBlock","src":"30479:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30501:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"30509:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30497:3:14"},"nodeType":"YulFunctionCall","src":"30497:14:14"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"30513:34:14","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30490:6:14"},"nodeType":"YulFunctionCall","src":"30490:58:14"},"nodeType":"YulExpressionStatement","src":"30490:58:14"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30471:6:14","type":""}],"src":"30373:182:14"},{"body":{"nodeType":"YulBlock","src":"30667:68:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30689:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"30697:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30685:3:14"},"nodeType":"YulFunctionCall","src":"30685:14:14"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"30701:26:14","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30678:6:14"},"nodeType":"YulFunctionCall","src":"30678:50:14"},"nodeType":"YulExpressionStatement","src":"30678:50:14"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30659:6:14","type":""}],"src":"30561:174:14"},{"body":{"nodeType":"YulBlock","src":"30847:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30869:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"30877:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30865:3:14"},"nodeType":"YulFunctionCall","src":"30865:14:14"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"30881:34:14","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30858:6:14"},"nodeType":"YulFunctionCall","src":"30858:58:14"},"nodeType":"YulExpressionStatement","src":"30858:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30937:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"30945:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30933:3:14"},"nodeType":"YulFunctionCall","src":"30933:15:14"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"30950:3:14","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30926:6:14"},"nodeType":"YulFunctionCall","src":"30926:28:14"},"nodeType":"YulExpressionStatement","src":"30926:28:14"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30839:6:14","type":""}],"src":"30741:220:14"},{"body":{"nodeType":"YulBlock","src":"31073:142:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31095:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"31103:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31091:3:14"},"nodeType":"YulFunctionCall","src":"31091:14:14"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"31107:34:14","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31084:6:14"},"nodeType":"YulFunctionCall","src":"31084:58:14"},"nodeType":"YulExpressionStatement","src":"31084:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31163:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"31171:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31159:3:14"},"nodeType":"YulFunctionCall","src":"31159:15:14"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"31176:31:14","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31152:6:14"},"nodeType":"YulFunctionCall","src":"31152:56:14"},"nodeType":"YulExpressionStatement","src":"31152:56:14"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31065:6:14","type":""}],"src":"30967:248:14"},{"body":{"nodeType":"YulBlock","src":"31264:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"31321:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31330:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31333:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31323:6:14"},"nodeType":"YulFunctionCall","src":"31323:12:14"},"nodeType":"YulExpressionStatement","src":"31323:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31287:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31312:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"31294:17:14"},"nodeType":"YulFunctionCall","src":"31294:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31284:2:14"},"nodeType":"YulFunctionCall","src":"31284:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31277:6:14"},"nodeType":"YulFunctionCall","src":"31277:43:14"},"nodeType":"YulIf","src":"31274:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31257:5:14","type":""}],"src":"31221:122:14"},{"body":{"nodeType":"YulBlock","src":"31389:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"31443:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31452:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31455:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31445:6:14"},"nodeType":"YulFunctionCall","src":"31445:12:14"},"nodeType":"YulExpressionStatement","src":"31445:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31412:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31434:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"31419:14:14"},"nodeType":"YulFunctionCall","src":"31419:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31409:2:14"},"nodeType":"YulFunctionCall","src":"31409:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31402:6:14"},"nodeType":"YulFunctionCall","src":"31402:40:14"},"nodeType":"YulIf","src":"31399:60:14"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31382:5:14","type":""}],"src":"31349:116:14"},{"body":{"nodeType":"YulBlock","src":"31513:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"31569:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31578:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31581:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31571:6:14"},"nodeType":"YulFunctionCall","src":"31571:12:14"},"nodeType":"YulExpressionStatement","src":"31571:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31536:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31560:5:14"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"31543:16:14"},"nodeType":"YulFunctionCall","src":"31543:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31533:2:14"},"nodeType":"YulFunctionCall","src":"31533:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31526:6:14"},"nodeType":"YulFunctionCall","src":"31526:42:14"},"nodeType":"YulIf","src":"31523:62:14"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31506:5:14","type":""}],"src":"31471:120:14"},{"body":{"nodeType":"YulBlock","src":"31640:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"31697:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31706:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31709:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31699:6:14"},"nodeType":"YulFunctionCall","src":"31699:12:14"},"nodeType":"YulExpressionStatement","src":"31699:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31663:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31688:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31670:17:14"},"nodeType":"YulFunctionCall","src":"31670:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31660:2:14"},"nodeType":"YulFunctionCall","src":"31660:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31653:6:14"},"nodeType":"YulFunctionCall","src":"31653:43:14"},"nodeType":"YulIf","src":"31650:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31633:5:14","type":""}],"src":"31597:122:14"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(pos)\n        end := add(pos, 9)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 77)\n        store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf(pos)\n        end := add(pos, 77)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 65)\n        store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719(pos)\n        end := add(pos, 65)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(memPtr) {\n\n        mstore(add(memPtr, 0), 0x7b226e616d65223a220000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_2001a7f7547c66d523cc0976fc9f5cee6212abc72f4db11b93857fbb7cff0ab2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wrong value!\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_3567f25ff78954e773cda87cf9852e703e638f7735d657032e25778148b7f7cf(memPtr) {\n\n        mstore(add(memPtr, 0), 0x222c20226465736372697074696f6e223a22596f752063617074757265642074)\n\n        mstore(add(memPtr, 32), \"his NFT as part of the education\")\n\n        mstore(add(memPtr, 64), 0x616c2053747265616d21222c2000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_60a18e33077678e1f59d8b3032b8a3ba99c010ba07c4a6a5711e221d7d4b0719(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2261747472696275746573223a205b7b2274726169745f74797065223a202273)\n\n        mstore(add(memPtr, 32), 0x6b696c6c73222c202276616c7565223a203130307d5d2c2022696d616765223a)\n\n        mstore(add(memPtr, 64), 0x2200000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(memPtr) {\n\n        mstore(add(memPtr, 0), 0x227d000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb465146102f3578063b88d4fde1461030f578063c87b56dd1461032b578063e985e9c51461035b578063f5d18d351461038b57610116565b80636352211e146102575780636e02007d1461028757806370a08231146102a557806395d89b41146102d557610116565b80630d730acc116100e95780630d730acc146101b557806323b872dd146101d157806342842e0e146101ed5780634ed7ff63146102095780635dbe700f1461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611cfc565b6103bb565b604051610142919061215e565b60405180910390f35b61015361049d565b6040516101609190612179565b60405180910390f35b610183600480360381019061017e9190611d56565b61052f565b60405161019091906120f7565b60405180910390f35b6101b360048036038101906101ae9190611cbc565b610575565b005b6101cf60048036038101906101ca9190611d56565b61068d565b005b6101eb60048036038101906101e69190611ba6565b6106e7565b005b61020760048036038101906102029190611ba6565b610747565b005b610223600480360381019061021e9190611b39565b610767565b604051610230919061215e565b60405180910390f35b6102416107bd565b60405161024e9190612179565b60405180910390f35b610271600480360381019061026c9190611d56565b6107d9565b60405161027e91906120f7565b60405180910390f35b61028f610860565b60405161029c919061231b565b60405180910390f35b6102bf60048036038101906102ba9190611b39565b61086a565b6040516102cc919061231b565b60405180910390f35b6102dd610922565b6040516102ea9190612179565b60405180910390f35b61030d60048036038101906103089190611c7c565b6109b4565b005b61032960048036038101906103249190611bf9565b6109ca565b005b61034560048036038101906103409190611d56565b610a2c565b6040516103529190612179565b60405180910390f35b61037560048036038101906103709190611b66565b610aa6565b604051610382919061215e565b60405180910390f35b6103a560048036038101906103a09190611b39565b610b3a565b6040516103b2919061215e565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610496575061049582610b5a565b5b9050919050565b6060600080546104ac9061259a565b80601f01602080910402602001604051908101604052809291908181526020018280546104d89061259a565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b5050505050905090565b600061053a82610bc4565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610580826107d9565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906122db565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610610610c0f565b73ffffffffffffffffffffffffffffffffffffffff16148061063f575061063e81610639610c0f565b610aa6565b5b61067e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610675906122fb565b60405180910390fd5b6106888383610c17565b505050565b600481600261069c91906123cf565b146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d3906121db565b60405180910390fd5b6106e4610cd0565b50565b6106f86106f2610c0f565b82610d4b565b610737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072e9061219b565b60405180910390fd5b610742838383610de0565b505050565b610762838383604051806020016040528060008152506109ca565b505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b604051806080016040528060438152602001612b6d6043913981565b6000806107e5836110da565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084e906122bb565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061227b565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546109319061259a565b80601f016020809104026020016040519081016040528092919081815260200182805461095d9061259a565b80156109aa5780601f1061097f576101008083540402835291602001916109aa565b820191906000526020600020905b81548152906001019060200180831161098d57829003601f168201915b5050505050905090565b6109c66109bf610c0f565b8383611117565b5050565b6109db6109d5610c0f565b83610d4b565b610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a119061219b565b60405180910390fd5b610a2684848484611284565b50505050565b6060610a366112e0565b610a7f610a4161049d565b604051806080016040528060438152602001612b6d60439139604051602001610a6b9291906120a7565b60405160208183030381529060405261131d565b604051602001610a90929190612083565b6040516020818303038152906040529050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60076020528060005260406000206000915054906101000a900460ff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610bcd816114a2565b610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c03906122bb565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610c8a836107d9565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610cdc336006546114e3565b6001600654610ceb91906123cf565b6006819055506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600080610d57836107d9565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d995750610d988185610aa6565b5b80610dd757508373ffffffffffffffffffffffffffffffffffffffff16610dbf8461052f565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610e00826107d9565b73ffffffffffffffffffffffffffffffffffffffff1614610e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4d906121fb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ec6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebd9061223b565b60405180910390fd5b610ed38383836001611501565b8273ffffffffffffffffffffffffffffffffffffffff16610ef3826107d9565b73ffffffffffffffffffffffffffffffffffffffff1614610f49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f40906121fb565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110d58383836001611627565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117d9061225b565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611277919061215e565b60405180910390a3505050565b61128f848484610de0565b61129b8484848461162d565b6112da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d1906121bb565b60405180910390fd5b50505050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b60606000825114156113405760405180602001604052806000815250905061149d565b6000604051806060016040528060408152602001612bb0604091399050600060036002855161136f91906123cf565b6113799190612425565b60046113859190612456565b9050600060208261139691906123cf565b67ffffffffffffffff8111156113af576113ae61268a565b5b6040519080825280601f01601f1916602001820160405280156113e15781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101561145c576003830192508251603f8160121c1685015160f81b8252600182019150603f81600c1c1685015160f81b8252600182019150603f8160061c1685015160f81b8252600182019150603f811685015160f81b8252600182019150506113f5565b600389510660018114611476576002811461148657611491565b613d3d60f01b6002830352611491565b603d60f81b60018303525b50505050508093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166114c4836110da565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6114fd8282604051806020016040528060008152506117c4565b5050565b600181111561162157600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146115955780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461158d91906124b0565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116205780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461161891906123cf565b925050819055505b5b50505050565b50505050565b600061164e8473ffffffffffffffffffffffffffffffffffffffff1661181f565b156117b7578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611677610c0f565b8786866040518563ffffffff1660e01b81526004016116999493929190612112565b602060405180830381600087803b1580156116b357600080fd5b505af19250505080156116e457506040513d601f19601f820116820180604052508101906116e19190611d29565b60015b611767573d8060008114611714576040519150601f19603f3d011682016040523d82523d6000602084013e611719565b606091505b5060008151141561175f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611756906121bb565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506117bc565b600190505b949350505050565b6117ce8383611842565b6117db600084848461162d565b61181a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611811906121bb565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a99061229b565b60405180910390fd5b6118bb816114a2565b156118fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f29061221b565b60405180910390fd5b611909600083836001611501565b611912816114a2565b15611952576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119499061221b565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611a5c600083836001611627565b5050565b6000611a73611a6e8461235b565b612336565b905082815260208101848484011115611a8f57611a8e6126be565b5b611a9a848285612558565b509392505050565b600081359050611ab181612b10565b92915050565b600081359050611ac681612b27565b92915050565b600081359050611adb81612b3e565b92915050565b600081519050611af081612b3e565b92915050565b600082601f830112611b0b57611b0a6126b9565b5b8135611b1b848260208601611a60565b91505092915050565b600081359050611b3381612b55565b92915050565b600060208284031215611b4f57611b4e6126c8565b5b6000611b5d84828501611aa2565b91505092915050565b60008060408385031215611b7d57611b7c6126c8565b5b6000611b8b85828601611aa2565b9250506020611b9c85828601611aa2565b9150509250929050565b600080600060608486031215611bbf57611bbe6126c8565b5b6000611bcd86828701611aa2565b9350506020611bde86828701611aa2565b9250506040611bef86828701611b24565b9150509250925092565b60008060008060808587031215611c1357611c126126c8565b5b6000611c2187828801611aa2565b9450506020611c3287828801611aa2565b9350506040611c4387828801611b24565b925050606085013567ffffffffffffffff811115611c6457611c636126c3565b5b611c7087828801611af6565b91505092959194509250565b60008060408385031215611c9357611c926126c8565b5b6000611ca185828601611aa2565b9250506020611cb285828601611ab7565b9150509250929050565b60008060408385031215611cd357611cd26126c8565b5b6000611ce185828601611aa2565b9250506020611cf285828601611b24565b9150509250929050565b600060208284031215611d1257611d116126c8565b5b6000611d2084828501611acc565b91505092915050565b600060208284031215611d3f57611d3e6126c8565b5b6000611d4d84828501611ae1565b91505092915050565b600060208284031215611d6c57611d6b6126c8565b5b6000611d7a84828501611b24565b91505092915050565b611d8c816124e4565b82525050565b611d9b816124f6565b82525050565b6000611dac8261238c565b611db681856123a2565b9350611dc6818560208601612567565b611dcf816126cd565b840191505092915050565b6000611de582612397565b611def81856123b3565b9350611dff818560208601612567565b611e08816126cd565b840191505092915050565b6000611e1e82612397565b611e2881856123c4565b9350611e38818560208601612567565b80840191505092915050565b6000611e51602d836123b3565b9150611e5c826126de565b604082019050919050565b6000611e746009836123c4565b9150611e7f8261272d565b600982019050919050565b6000611e976032836123b3565b9150611ea282612756565b604082019050919050565b6000611eba600c836123b3565b9150611ec5826127a5565b602082019050919050565b6000611edd6025836123b3565b9150611ee8826127ce565b604082019050919050565b6000611f00601c836123b3565b9150611f0b8261281d565b602082019050919050565b6000611f23604d836123c4565b9150611f2e82612846565b604d82019050919050565b6000611f466024836123b3565b9150611f51826128bb565b604082019050919050565b6000611f696019836123b3565b9150611f748261290a565b602082019050919050565b6000611f8c6041836123c4565b9150611f9782612933565b604182019050919050565b6000611faf6029836123b3565b9150611fba826129a8565b604082019050919050565b6000611fd26002836123c4565b9150611fdd826129f7565b600282019050919050565b6000611ff56020836123b3565b915061200082612a20565b602082019050919050565b60006120186018836123b3565b915061202382612a49565b602082019050919050565b600061203b6021836123b3565b915061204682612a72565b604082019050919050565b600061205e603d836123b3565b915061206982612ac1565b604082019050919050565b61207d8161254e565b82525050565b600061208f8285611e13565b915061209b8284611e13565b91508190509392505050565b60006120b282611e67565b91506120be8285611e13565b91506120c982611f16565b91506120d482611f7f565b91506120e08284611e13565b91506120eb82611fc5565b91508190509392505050565b600060208201905061210c6000830184611d83565b92915050565b60006080820190506121276000830187611d83565b6121346020830186611d83565b6121416040830185612074565b81810360608301526121538184611da1565b905095945050505050565b60006020820190506121736000830184611d92565b92915050565b600060208201905081810360008301526121938184611dda565b905092915050565b600060208201905081810360008301526121b481611e44565b9050919050565b600060208201905081810360008301526121d481611e8a565b9050919050565b600060208201905081810360008301526121f481611ead565b9050919050565b6000602082019050818103600083015261221481611ed0565b9050919050565b6000602082019050818103600083015261223481611ef3565b9050919050565b6000602082019050818103600083015261225481611f39565b9050919050565b6000602082019050818103600083015261227481611f5c565b9050919050565b6000602082019050818103600083015261229481611fa2565b9050919050565b600060208201905081810360008301526122b481611fe8565b9050919050565b600060208201905081810360008301526122d48161200b565b9050919050565b600060208201905081810360008301526122f48161202e565b9050919050565b6000602082019050818103600083015261231481612051565b9050919050565b60006020820190506123306000830184612074565b92915050565b6000612340612351565b905061234c82826125cc565b919050565b6000604051905090565b600067ffffffffffffffff8211156123765761237561268a565b5b61237f826126cd565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006123da8261254e565b91506123e58361254e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561241a576124196125fd565b5b828201905092915050565b60006124308261254e565b915061243b8361254e565b92508261244b5761244a61262c565b5b828204905092915050565b60006124618261254e565b915061246c8361254e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124a5576124a46125fd565b5b828202905092915050565b60006124bb8261254e565b91506124c68361254e565b9250828210156124d9576124d86125fd565b5b828203905092915050565b60006124ef8261252e565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561258557808201518184015260208101905061256a565b83811115612594576000848401525b50505050565b600060028204905060018216806125b257607f821691505b602082108114156125c6576125c561265b565b5b50919050565b6125d5826126cd565b810181811067ffffffffffffffff821117156125f4576125f361268a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f57726f6e672076616c7565210000000000000000000000000000000000000000600082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f222c20226465736372697074696f6e223a22596f75206361707475726564207460008201527f686973204e46542061732070617274206f662074686520656475636174696f6e60208201527f616c2053747265616d21222c2000000000000000000000000000000000000000604082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f2261747472696275746573223a205b7b2274726169745f74797065223a20227360008201527f6b696c6c73222c202276616c7565223a203130307d5d2c2022696d616765223a60208201527f2200000000000000000000000000000000000000000000000000000000000000604082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b612b19816124e4565b8114612b2457600080fd5b50565b612b30816124f6565b8114612b3b57600080fd5b50565b612b4781612502565b8114612b5257600080fd5b50565b612b5e8161254e565b8114612b6957600080fd5b5056fe68747470733a2f2f697066732e696f2f697066732f516d5565585636335676725958774436356774457a365746434a786f363250484a3570437569664336716d3675554142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220e273ed072050ccbd435181dbcfe0a834473ff65a2f59f4818d6ac30bae76e86e64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xF5D18D35 EQ PUSH2 0x38B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0xD730ACC GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xD730ACC EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x4ED7FF63 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x5DBE700F EQ PUSH2 0x239 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x231B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1B66 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x486 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x496 JUMPI POP PUSH2 0x495 DUP3 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x525 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x525 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x508 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP3 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580 DUP3 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x22DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x610 PUSH2 0xC0F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x63F JUMPI POP PUSH2 0x63E DUP2 PUSH2 0x639 PUSH2 0xC0F JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP4 DUP4 PUSH2 0xC17 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x2 PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST EQ PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E4 PUSH2 0xCD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6F8 PUSH2 0x6F2 PUSH2 0xC0F JUMP JUMPDEST DUP3 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x737 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72E SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x742 DUP4 DUP4 DUP4 PUSH2 0xDE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x762 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6D PUSH1 0x43 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7E5 DUP4 PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84E SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x931 SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x95D SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x97F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x98D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x9BF PUSH2 0xC0F JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1117 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9DB PUSH2 0x9D5 PUSH2 0xC0F JUMP JUMPDEST DUP4 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA26 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1284 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA36 PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0xA7F PUSH2 0xA41 PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6D PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA6B SWAP3 SWAP2 SWAP1 PUSH2 0x20A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA90 SWAP3 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBCD DUP2 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8A DUP4 PUSH2 0x7D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xCDC CALLER PUSH1 0x6 SLOAD PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD57 DUP4 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD99 JUMPI POP PUSH2 0xD98 DUP2 DUP6 PUSH2 0xAA6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xDD7 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDBF DUP5 PUSH2 0x52F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE00 DUP3 PUSH2 0x7D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4D SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBD SWAP1 PUSH2 0x223B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1501 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEF3 DUP3 PUSH2 0x7D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF40 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10D5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1627 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1186 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117D SWAP1 PUSH2 0x225B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1277 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x128F DUP5 DUP5 DUP5 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x129B DUP5 DUP5 DUP5 DUP5 PUSH2 0x162D JUMP JUMPDEST PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x1340 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x149D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB0 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x136F SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x1385 SWAP2 SWAP1 PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AF JUMPI PUSH2 0x13AE PUSH2 0x268A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x145C JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1476 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1486 JUMPI PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14C4 DUP4 PUSH2 0x10DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FD DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1621 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1595 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x158D SWAP2 SWAP1 PUSH2 0x24B0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1620 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164E DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x181F JUMP JUMPDEST ISZERO PUSH2 0x17B7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1677 PUSH2 0xC0F JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1699 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16E4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E1 SWAP2 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1767 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x175F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1756 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x17BC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x17CE DUP4 DUP4 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x17DB PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x162D JUMP JUMPDEST PUSH2 0x181A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1811 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A9 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18BB DUP2 PUSH2 0x14A2 JUMP JUMPDEST ISZERO PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1909 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x1912 DUP2 PUSH2 0x14A2 JUMP JUMPDEST ISZERO PUSH2 0x1952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1949 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A5C PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1627 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 PUSH2 0x1A6E DUP5 PUSH2 0x235B JUMP JUMPDEST PUSH2 0x2336 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A8F JUMPI PUSH2 0x1A8E PUSH2 0x26BE JUMP JUMPDEST JUMPDEST PUSH2 0x1A9A DUP5 DUP3 DUP6 PUSH2 0x2558 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AB1 DUP2 PUSH2 0x2B10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC6 DUP2 PUSH2 0x2B27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ADB DUP2 PUSH2 0x2B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AF0 DUP2 PUSH2 0x2B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B0B JUMPI PUSH2 0x1B0A PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B1B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B33 DUP2 PUSH2 0x2B55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4F JUMPI PUSH2 0x1B4E PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B5D DUP5 DUP3 DUP6 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7D JUMPI PUSH2 0x1B7C PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8B DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B9C DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBF JUMPI PUSH2 0x1BBE PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCD DUP7 DUP3 DUP8 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDE DUP7 DUP3 DUP8 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BEF DUP7 DUP3 DUP8 ADD PUSH2 0x1B24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C13 JUMPI PUSH2 0x1C12 PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C21 DUP8 DUP3 DUP9 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C32 DUP8 DUP3 DUP9 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C43 DUP8 DUP3 DUP9 ADD PUSH2 0x1B24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C63 PUSH2 0x26C3 JUMP JUMPDEST JUMPDEST PUSH2 0x1C70 DUP8 DUP3 DUP9 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C93 JUMPI PUSH2 0x1C92 PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CB2 DUP6 DUP3 DUP7 ADD PUSH2 0x1AB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1B24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D12 JUMPI PUSH2 0x1D11 PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D20 DUP5 DUP3 DUP6 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3F JUMPI PUSH2 0x1D3E PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4D DUP5 DUP3 DUP6 ADD PUSH2 0x1AE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6C JUMPI PUSH2 0x1D6B PUSH2 0x26C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D7A DUP5 DUP3 DUP6 ADD PUSH2 0x1B24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D8C DUP2 PUSH2 0x24E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D9B DUP2 PUSH2 0x24F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAC DUP3 PUSH2 0x238C JUMP JUMPDEST PUSH2 0x1DB6 DUP2 DUP6 PUSH2 0x23A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x1DCF DUP2 PUSH2 0x26CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE5 DUP3 PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x1DEF DUP2 DUP6 PUSH2 0x23B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DFF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x1E08 DUP2 PUSH2 0x26CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1E DUP3 PUSH2 0x2397 JUMP JUMPDEST PUSH2 0x1E28 DUP2 DUP6 PUSH2 0x23C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E38 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2567 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E51 PUSH1 0x2D DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5C DUP3 PUSH2 0x26DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E74 PUSH1 0x9 DUP4 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7F DUP3 PUSH2 0x272D JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E97 PUSH1 0x32 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA2 DUP3 PUSH2 0x2756 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBA PUSH1 0xC DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC5 DUP3 PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDD PUSH1 0x25 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE8 DUP3 PUSH2 0x27CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F00 PUSH1 0x1C DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0B DUP3 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F23 PUSH1 0x4D DUP4 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2E DUP3 PUSH2 0x2846 JUMP JUMPDEST PUSH1 0x4D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F46 PUSH1 0x24 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F51 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F69 PUSH1 0x19 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F74 DUP3 PUSH2 0x290A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8C PUSH1 0x41 DUP4 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F97 DUP3 PUSH2 0x2933 JUMP JUMPDEST PUSH1 0x41 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FAF PUSH1 0x29 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBA DUP3 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD2 PUSH1 0x2 DUP4 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDD DUP3 PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF5 PUSH1 0x20 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2000 DUP3 PUSH2 0x2A20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2018 PUSH1 0x18 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2023 DUP3 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203B PUSH1 0x21 DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2046 DUP3 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205E PUSH1 0x3D DUP4 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2069 DUP3 PUSH2 0x2AC1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x207D DUP2 PUSH2 0x254E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208F DUP3 DUP6 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH2 0x209B DUP3 DUP5 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B2 DUP3 PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BE DUP3 DUP6 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C9 DUP3 PUSH2 0x1F16 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D4 DUP3 PUSH2 0x1F7F JUMP JUMPDEST SWAP2 POP PUSH2 0x20E0 DUP3 DUP5 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP PUSH2 0x20EB DUP3 PUSH2 0x1FC5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2127 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0x2134 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0x2141 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2074 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2153 DUP2 DUP5 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2173 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2193 DUP2 DUP5 PUSH2 0x1DDA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B4 DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D4 DUP2 PUSH2 0x1E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F4 DUP2 PUSH2 0x1EAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2214 DUP2 PUSH2 0x1ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2234 DUP2 PUSH2 0x1EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2254 DUP2 PUSH2 0x1F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2274 DUP2 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2294 DUP2 PUSH2 0x1FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B4 DUP2 PUSH2 0x1FE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22D4 DUP2 PUSH2 0x200B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F4 DUP2 PUSH2 0x202E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2314 DUP2 PUSH2 0x2051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2330 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2074 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2340 PUSH2 0x2351 JUMP JUMPDEST SWAP1 POP PUSH2 0x234C DUP3 DUP3 PUSH2 0x25CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2376 JUMPI PUSH2 0x2375 PUSH2 0x268A JUMP JUMPDEST JUMPDEST PUSH2 0x237F DUP3 PUSH2 0x26CD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DA DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x23E5 DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x241A JUMPI PUSH2 0x2419 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2430 DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x243B DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x244B JUMPI PUSH2 0x244A PUSH2 0x262C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2461 DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x246C DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24A5 JUMPI PUSH2 0x24A4 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BB DUP3 PUSH2 0x254E JUMP JUMPDEST SWAP2 POP PUSH2 0x24C6 DUP4 PUSH2 0x254E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x24D9 JUMPI PUSH2 0x24D8 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EF DUP3 PUSH2 0x252E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2585 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x256A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2594 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C6 JUMPI PUSH2 0x25C5 PUSH2 0x265B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D5 DUP3 PUSH2 0x26CD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25F4 JUMPI PUSH2 0x25F3 PUSH2 0x268A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x57726F6E672076616C7565210000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22596F752063617074757265642074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x686973204E46542061732070617274206F662074686520656475636174696F6E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x616C2053747265616D21222C2000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B696C6C73222C202276616C7565223A203130307D5D2C2022696D616765223A PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2B19 DUP2 PUSH2 0x24E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B30 DUP2 PUSH2 0x24F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B47 DUP2 PUSH2 0x2502 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B5E DUP2 PUSH2 0x254E JUMP JUMPDEST DUP2 EQ PUSH2 0x2B69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH9 0x747470733A2F2F6970 PUSH7 0x732E696F2F6970 PUSH7 0x732F516D556558 JUMP CALLDATASIZE CALLER JUMP PUSH23 0x725958774436356774457A365746434A786F363250484A CALLDATALOAD PUSH17 0x437569664336716D367555414243444546 SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0xE2 PUSH20 0xED072050CCBD435181DBCFE0A834473FF65A2F59 DELEGATECALL DUP2 DUP14 PUSH11 0xC30BAE76E86E64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ","sourceMap":"87:209:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;179:115:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1830:95:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;193:118;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:219:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1931:95:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1008:816:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;354:40:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300:0;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;179:115:13:-;249:1;240:5;236:1;:9;;;;:::i;:::-;:14;228:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;277:10;:8;:10::i;:::-;179:115;:::o;4612:326:0:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;1830:95:11:-;1881:4;1904:8;:14;1913:4;1904:14;;;;;;;;;;;;;;;;;;;;;;;;;1897:21;;1830:95;;;:::o;193:118::-;;;;;;;;;;;;;;;;;;;:::o;2190:219:0:-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1931:95:11:-;1979:7;2005:14;;1998:21;;1931:95;:::o;1929:204:0:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;1008:816:11:-;1093:13;1199:10;:8;:10::i;:::-;1231:554;1400:6;:4;:6::i;:::-;1654:15;;;;;;;;;;;;;;;;;1305:432;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1231:13;:554::i;:::-;1161:642;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1118:699;;1008:816;;;:::o;4388:162:0:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;354:40:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:0:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;12768:171:0:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;837:165:11:-;876:37;886:10;898:14;;876:9;:37::i;:::-;957:1;940:14;;:18;;;;:::i;:::-;923:14;:35;;;;991:4;968:8;:20;977:10;968:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;837:165::o;7540:261:0:-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;532:122:11:-;584:13;609:38;;;;;;;;;;;;;;;;;;;532:122;:::o;293:1985:10:-;351:13;395:1;380:4;:11;:16;376:31;;;398:9;;;;;;;;;;;;;;;;376:31;464:19;486:5;;;;;;;;;;;;;;;;;464:27;;540:18;586:1;581;567:4;:11;:15;;;;:::i;:::-;566:21;;;;:::i;:::-;561:1;:27;;;;:::i;:::-;540:48;;668:20;715:2;702:10;:15;;;;:::i;:::-;691:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:50;;811:10;803:6;796:26;915:1;908:5;904:13;983:4;1033;1027:11;1018:7;1014:25;1138:2;1130:6;1126:15;1220:794;1239:6;1230:7;1227:19;1220:794;;;1303:1;1294:7;1290:15;1279:26;;1387:7;1381:14;1531:4;1523:5;1519:2;1515:14;1511:25;1501:8;1497:40;1491:47;1486:3;1482:57;1471:9;1464:76;1584:1;1573:9;1569:17;1556:30;;1669:4;1661:5;1657:2;1653:14;1649:25;1639:8;1635:40;1629:47;1624:3;1620:57;1609:9;1602:76;1722:1;1711:9;1707:17;1694:30;;1807:4;1799:5;1796:1;1791:14;1787:25;1777:8;1773:40;1767:47;1762:3;1758:57;1747:9;1740:76;1860:1;1849:9;1845:17;1832:30;;1945:4;1937:5;1925:25;1915:8;1911:40;1905:47;1900:3;1896:57;1885:9;1878:76;1998:1;1987:9;1983:17;1970:30;;1262:752;1220:794;;;2096:1;2089:4;2083:11;2079:19;2116:1;2111:54;;;;2183:1;2178:52;;;;2072:158;;2111:54;2155:6;2150:3;2146:16;2142:1;2131:9;2127:17;2120:43;2111:54;;2178:52;2222:4;2217:3;2213:14;2209:1;2198:9;2194:17;2187:41;2072:158;;738:1502;;;;2265:6;2258:13;;;;;293:1985;;;;:::o;7256:126:0:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9091:920:0:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;7:410:14:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:366::-;7365:3;7386:67;7450:2;7445:3;7386:67;:::i;:::-;7379:74;;7462:93;7551:3;7462:93;:::i;:::-;7580:2;7575:3;7571:12;7564:19;;7223:366;;;:::o;7595:400::-;7755:3;7776:84;7858:1;7853:3;7776:84;:::i;:::-;7769:91;;7869:93;7958:3;7869:93;:::i;:::-;7987:1;7982:3;7978:11;7971:18;;7595:400;;;:::o;8001:366::-;8143:3;8164:67;8228:2;8223:3;8164:67;:::i;:::-;8157:74;;8240:93;8329:3;8240:93;:::i;:::-;8358:2;8353:3;8349:12;8342:19;;8001:366;;;:::o;8373:::-;8515:3;8536:67;8600:2;8595:3;8536:67;:::i;:::-;8529:74;;8612:93;8701:3;8612:93;:::i;:::-;8730:2;8725:3;8721:12;8714:19;;8373:366;;;:::o;8745:::-;8887:3;8908:67;8972:2;8967:3;8908:67;:::i;:::-;8901:74;;8984:93;9073:3;8984:93;:::i;:::-;9102:2;9097:3;9093:12;9086:19;;8745:366;;;:::o;9117:::-;9259:3;9280:67;9344:2;9339:3;9280:67;:::i;:::-;9273:74;;9356:93;9445:3;9356:93;:::i;:::-;9474:2;9469:3;9465:12;9458:19;;9117:366;;;:::o;9489:402::-;9649:3;9670:85;9752:2;9747:3;9670:85;:::i;:::-;9663:92;;9764:93;9853:3;9764:93;:::i;:::-;9882:2;9877:3;9873:12;9866:19;;9489:402;;;:::o;9897:366::-;10039:3;10060:67;10124:2;10119:3;10060:67;:::i;:::-;10053:74;;10136:93;10225:3;10136:93;:::i;:::-;10254:2;10249:3;10245:12;10238:19;;9897:366;;;:::o;10269:::-;10411:3;10432:67;10496:2;10491:3;10432:67;:::i;:::-;10425:74;;10508:93;10597:3;10508:93;:::i;:::-;10626:2;10621:3;10617:12;10610:19;;10269:366;;;:::o;10641:402::-;10801:3;10822:85;10904:2;10899:3;10822:85;:::i;:::-;10815:92;;10916:93;11005:3;10916:93;:::i;:::-;11034:2;11029:3;11025:12;11018:19;;10641:402;;;:::o;11049:366::-;11191:3;11212:67;11276:2;11271:3;11212:67;:::i;:::-;11205:74;;11288:93;11377:3;11288:93;:::i;:::-;11406:2;11401:3;11397:12;11390:19;;11049:366;;;:::o;11421:400::-;11581:3;11602:84;11684:1;11679:3;11602:84;:::i;:::-;11595:91;;11695:93;11784:3;11695:93;:::i;:::-;11813:1;11808:3;11804:11;11797:18;;11421:400;;;:::o;11827:366::-;11969:3;11990:67;12054:2;12049:3;11990:67;:::i;:::-;11983:74;;12066:93;12155:3;12066:93;:::i;:::-;12184:2;12179:3;12175:12;12168:19;;11827:366;;;:::o;12199:::-;12341:3;12362:67;12426:2;12421:3;12362:67;:::i;:::-;12355:74;;12438:93;12527:3;12438:93;:::i;:::-;12556:2;12551:3;12547:12;12540:19;;12199:366;;;:::o;12571:::-;12713:3;12734:67;12798:2;12793:3;12734:67;:::i;:::-;12727:74;;12810:93;12899:3;12810:93;:::i;:::-;12928:2;12923:3;12919:12;12912:19;;12571:366;;;:::o;12943:::-;13085:3;13106:67;13170:2;13165:3;13106:67;:::i;:::-;13099:74;;13182:93;13271:3;13182:93;:::i;:::-;13300:2;13295:3;13291:12;13284:19;;12943:366;;;:::o;13315:118::-;13402:24;13420:5;13402:24;:::i;:::-;13397:3;13390:37;13315:118;;:::o;13439:435::-;13619:3;13641:95;13732:3;13723:6;13641:95;:::i;:::-;13634:102;;13753:95;13844:3;13835:6;13753:95;:::i;:::-;13746:102;;13865:3;13858:10;;13439:435;;;;;:::o;13880:1499::-;14464:3;14486:148;14630:3;14486:148;:::i;:::-;14479:155;;14651:95;14742:3;14733:6;14651:95;:::i;:::-;14644:102;;14763:148;14907:3;14763:148;:::i;:::-;14756:155;;14928:148;15072:3;14928:148;:::i;:::-;14921:155;;15093:95;15184:3;15175:6;15093:95;:::i;:::-;15086:102;;15205:148;15349:3;15205:148;:::i;:::-;15198:155;;15370:3;15363:10;;13880:1499;;;;;:::o;15385:222::-;15478:4;15516:2;15505:9;15501:18;15493:26;;15529:71;15597:1;15586:9;15582:17;15573:6;15529:71;:::i;:::-;15385:222;;;;:::o;15613:640::-;15808:4;15846:3;15835:9;15831:19;15823:27;;15860:71;15928:1;15917:9;15913:17;15904:6;15860:71;:::i;:::-;15941:72;16009:2;15998:9;15994:18;15985:6;15941:72;:::i;:::-;16023;16091:2;16080:9;16076:18;16067:6;16023:72;:::i;:::-;16142:9;16136:4;16132:20;16127:2;16116:9;16112:18;16105:48;16170:76;16241:4;16232:6;16170:76;:::i;:::-;16162:84;;15613:640;;;;;;;:::o;16259:210::-;16346:4;16384:2;16373:9;16369:18;16361:26;;16397:65;16459:1;16448:9;16444:17;16435:6;16397:65;:::i;:::-;16259:210;;;;:::o;16475:313::-;16588:4;16626:2;16615:9;16611:18;16603:26;;16675:9;16669:4;16665:20;16661:1;16650:9;16646:17;16639:47;16703:78;16776:4;16767:6;16703:78;:::i;:::-;16695:86;;16475:313;;;;:::o;16794:419::-;16960:4;16998:2;16987:9;16983:18;16975:26;;17047:9;17041:4;17037:20;17033:1;17022:9;17018:17;17011:47;17075:131;17201:4;17075:131;:::i;:::-;17067:139;;16794:419;;;:::o;17219:::-;17385:4;17423:2;17412:9;17408:18;17400:26;;17472:9;17466:4;17462:20;17458:1;17447:9;17443:17;17436:47;17500:131;17626:4;17500:131;:::i;:::-;17492:139;;17219:419;;;:::o;17644:::-;17810:4;17848:2;17837:9;17833:18;17825:26;;17897:9;17891:4;17887:20;17883:1;17872:9;17868:17;17861:47;17925:131;18051:4;17925:131;:::i;:::-;17917:139;;17644:419;;;:::o;18069:::-;18235:4;18273:2;18262:9;18258:18;18250:26;;18322:9;18316:4;18312:20;18308:1;18297:9;18293:17;18286:47;18350:131;18476:4;18350:131;:::i;:::-;18342:139;;18069:419;;;:::o;18494:::-;18660:4;18698:2;18687:9;18683:18;18675:26;;18747:9;18741:4;18737:20;18733:1;18722:9;18718:17;18711:47;18775:131;18901:4;18775:131;:::i;:::-;18767:139;;18494:419;;;:::o;18919:::-;19085:4;19123:2;19112:9;19108:18;19100:26;;19172:9;19166:4;19162:20;19158:1;19147:9;19143:17;19136:47;19200:131;19326:4;19200:131;:::i;:::-;19192:139;;18919:419;;;:::o;19344:::-;19510:4;19548:2;19537:9;19533:18;19525:26;;19597:9;19591:4;19587:20;19583:1;19572:9;19568:17;19561:47;19625:131;19751:4;19625:131;:::i;:::-;19617:139;;19344:419;;;:::o;19769:::-;19935:4;19973:2;19962:9;19958:18;19950:26;;20022:9;20016:4;20012:20;20008:1;19997:9;19993:17;19986:47;20050:131;20176:4;20050:131;:::i;:::-;20042:139;;19769:419;;;:::o;20194:::-;20360:4;20398:2;20387:9;20383:18;20375:26;;20447:9;20441:4;20437:20;20433:1;20422:9;20418:17;20411:47;20475:131;20601:4;20475:131;:::i;:::-;20467:139;;20194:419;;;:::o;20619:::-;20785:4;20823:2;20812:9;20808:18;20800:26;;20872:9;20866:4;20862:20;20858:1;20847:9;20843:17;20836:47;20900:131;21026:4;20900:131;:::i;:::-;20892:139;;20619:419;;;:::o;21044:::-;21210:4;21248:2;21237:9;21233:18;21225:26;;21297:9;21291:4;21287:20;21283:1;21272:9;21268:17;21261:47;21325:131;21451:4;21325:131;:::i;:::-;21317:139;;21044:419;;;:::o;21469:::-;21635:4;21673:2;21662:9;21658:18;21650:26;;21722:9;21716:4;21712:20;21708:1;21697:9;21693:17;21686:47;21750:131;21876:4;21750:131;:::i;:::-;21742:139;;21469:419;;;:::o;21894:222::-;21987:4;22025:2;22014:9;22010:18;22002:26;;22038:71;22106:1;22095:9;22091:17;22082:6;22038:71;:::i;:::-;21894:222;;;;:::o;22122:129::-;22156:6;22183:20;;:::i;:::-;22173:30;;22212:33;22240:4;22232:6;22212:33;:::i;:::-;22122:129;;;:::o;22257:75::-;22290:6;22323:2;22317:9;22307:19;;22257:75;:::o;22338:307::-;22399:4;22489:18;22481:6;22478:30;22475:56;;;22511:18;;:::i;:::-;22475:56;22549:29;22571:6;22549:29;:::i;:::-;22541:37;;22633:4;22627;22623:15;22615:23;;22338:307;;;:::o;22651:98::-;22702:6;22736:5;22730:12;22720:22;;22651:98;;;:::o;22755:99::-;22807:6;22841:5;22835:12;22825:22;;22755:99;;;:::o;22860:168::-;22943:11;22977:6;22972:3;22965:19;23017:4;23012:3;23008:14;22993:29;;22860:168;;;;:::o;23034:169::-;23118:11;23152:6;23147:3;23140:19;23192:4;23187:3;23183:14;23168:29;;23034:169;;;;:::o;23209:148::-;23311:11;23348:3;23333:18;;23209:148;;;;:::o;23363:305::-;23403:3;23422:20;23440:1;23422:20;:::i;:::-;23417:25;;23456:20;23474:1;23456:20;:::i;:::-;23451:25;;23610:1;23542:66;23538:74;23535:1;23532:81;23529:107;;;23616:18;;:::i;:::-;23529:107;23660:1;23657;23653:9;23646:16;;23363:305;;;;:::o;23674:185::-;23714:1;23731:20;23749:1;23731:20;:::i;:::-;23726:25;;23765:20;23783:1;23765:20;:::i;:::-;23760:25;;23804:1;23794:35;;23809:18;;:::i;:::-;23794:35;23851:1;23848;23844:9;23839:14;;23674:185;;;;:::o;23865:348::-;23905:7;23928:20;23946:1;23928:20;:::i;:::-;23923:25;;23962:20;23980:1;23962:20;:::i;:::-;23957:25;;24150:1;24082:66;24078:74;24075:1;24072:81;24067:1;24060:9;24053:17;24049:105;24046:131;;;24157:18;;:::i;:::-;24046:131;24205:1;24202;24198:9;24187:20;;23865:348;;;;:::o;24219:191::-;24259:4;24279:20;24297:1;24279:20;:::i;:::-;24274:25;;24313:20;24331:1;24313:20;:::i;:::-;24308:25;;24352:1;24349;24346:8;24343:34;;;24357:18;;:::i;:::-;24343:34;24402:1;24399;24395:9;24387:17;;24219:191;;;;:::o;24416:96::-;24453:7;24482:24;24500:5;24482:24;:::i;:::-;24471:35;;24416:96;;;:::o;24518:90::-;24552:7;24595:5;24588:13;24581:21;24570:32;;24518:90;;;:::o;24614:149::-;24650:7;24690:66;24683:5;24679:78;24668:89;;24614:149;;;:::o;24769:126::-;24806:7;24846:42;24839:5;24835:54;24824:65;;24769:126;;;:::o;24901:77::-;24938:7;24967:5;24956:16;;24901:77;;;:::o;24984:154::-;25068:6;25063:3;25058;25045:30;25130:1;25121:6;25116:3;25112:16;25105:27;24984:154;;;:::o;25144:307::-;25212:1;25222:113;25236:6;25233:1;25230:13;25222:113;;;25321:1;25316:3;25312:11;25306:18;25302:1;25297:3;25293:11;25286:39;25258:2;25255:1;25251:10;25246:15;;25222:113;;;25353:6;25350:1;25347:13;25344:101;;;25433:1;25424:6;25419:3;25415:16;25408:27;25344:101;25193:258;25144:307;;;:::o;25457:320::-;25501:6;25538:1;25532:4;25528:12;25518:22;;25585:1;25579:4;25575:12;25606:18;25596:81;;25662:4;25654:6;25650:17;25640:27;;25596:81;25724:2;25716:6;25713:14;25693:18;25690:38;25687:84;;;25743:18;;:::i;:::-;25687:84;25508:269;25457:320;;;:::o;25783:281::-;25866:27;25888:4;25866:27;:::i;:::-;25858:6;25854:40;25996:6;25984:10;25981:22;25960:18;25948:10;25945:34;25942:62;25939:88;;;26007:18;;:::i;:::-;25939:88;26047:10;26043:2;26036:22;25826:238;25783:281;;:::o;26070:180::-;26118:77;26115:1;26108:88;26215:4;26212:1;26205:15;26239:4;26236:1;26229:15;26256:180;26304:77;26301:1;26294:88;26401:4;26398:1;26391:15;26425:4;26422:1;26415:15;26442:180;26490:77;26487:1;26480:88;26587:4;26584:1;26577:15;26611:4;26608:1;26601:15;26628:180;26676:77;26673:1;26666:88;26773:4;26770:1;26763:15;26797:4;26794:1;26787:15;26814:117;26923:1;26920;26913:12;26937:117;27046:1;27043;27036:12;27060:117;27169:1;27166;27159:12;27183:117;27292:1;27289;27282:12;27306:102;27347:6;27398:2;27394:7;27389:2;27382:5;27378:14;27374:28;27364:38;;27306:102;;;:::o;27414:232::-;27554:34;27550:1;27542:6;27538:14;27531:58;27623:15;27618:2;27610:6;27606:15;27599:40;27414:232;:::o;27652:214::-;27792:66;27788:1;27780:6;27776:14;27769:90;27652:214;:::o;27872:237::-;28012:34;28008:1;28000:6;27996:14;27989:58;28081:20;28076:2;28068:6;28064:15;28057:45;27872:237;:::o;28115:162::-;28255:14;28251:1;28243:6;28239:14;28232:38;28115:162;:::o;28283:224::-;28423:34;28419:1;28411:6;28407:14;28400:58;28492:7;28487:2;28479:6;28475:15;28468:32;28283:224;:::o;28513:178::-;28653:30;28649:1;28641:6;28637:14;28630:54;28513:178;:::o;28697:384::-;28837:66;28833:1;28825:6;28821:14;28814:90;28938:34;28933:2;28925:6;28921:15;28914:59;29007:66;29002:2;28994:6;28990:15;28983:91;28697:384;:::o;29087:223::-;29227:34;29223:1;29215:6;29211:14;29204:58;29296:6;29291:2;29283:6;29279:15;29272:31;29087:223;:::o;29316:175::-;29456:27;29452:1;29444:6;29440:14;29433:51;29316:175;:::o;29497:416::-;29637:66;29633:1;29625:6;29621:14;29614:90;29738:66;29733:2;29725:6;29721:15;29714:91;29839:66;29834:2;29826:6;29822:15;29815:91;29497:416;:::o;29919:228::-;30059:34;30055:1;30047:6;30043:14;30036:58;30128:11;30123:2;30115:6;30111:15;30104:36;29919:228;:::o;30153:214::-;30293:66;30289:1;30281:6;30277:14;30270:90;30153:214;:::o;30373:182::-;30513:34;30509:1;30501:6;30497:14;30490:58;30373:182;:::o;30561:174::-;30701:26;30697:1;30689:6;30685:14;30678:50;30561:174;:::o;30741:220::-;30881:34;30877:1;30869:6;30865:14;30858:58;30950:3;30945:2;30937:6;30933:15;30926:28;30741:220;:::o;30967:248::-;31107:34;31103:1;31095:6;31091:14;31084:58;31176:31;31171:2;31163:6;31159:15;31152:56;30967:248;:::o;31221:122::-;31294:24;31312:5;31294:24;:::i;:::-;31287:5;31284:35;31274:63;;31333:1;31330;31323:12;31274:63;31221:122;:::o;31349:116::-;31419:21;31434:5;31419:21;:::i;:::-;31412:5;31409:32;31399:60;;31455:1;31452;31445:12;31399:60;31349:116;:::o;31471:120::-;31543:23;31560:5;31543:23;:::i;:::-;31536:5;31533:34;31523:62;;31581:1;31578;31571:12;31523:62;31471:120;:::o;31597:122::-;31670:24;31688:5;31670:24;:::i;:::-;31663:5;31660:35;31650:63;;31709:1;31706;31699:12;31650:63;31597:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2260200","executionCost":"infinite","totalCost":"infinite"},"external":{"TOKEN_IMAGE_URI()":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2946","getApproved(uint256)":"5300","getTokenCounter()":"2482","hasNft(address)":"2972","isApprovedForAll(address,address)":"infinite","mintNft(uint256)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","s_hasNft(address)":"2955","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"TOKEN_IMAGE_URI()":"5dbe700f","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getTokenCounter()":"6e02007d","hasNft(address)":"4ed7ff63","isApprovedForAll(address,address)":"e985e9c5","mintNft(uint256)":"0d730acc","name()":"06fdde03","ownerOf(uint256)":"6352211e","s_hasNft(address)":"f5d18d35","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_IMAGE_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"hasNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_hasNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/triviaStream.sol\":\"StreamNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides a function for encoding some bytes in base64\\nlibrary Base64 {\\n    string internal constant TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n        \\n        // load the table into memory\\n        string memory table = TABLE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n            \\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n            \\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n            \\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n            \\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               dataPtr := add(dataPtr, 3)\\n               \\n               // read 3 bytes\\n               let input := mload(dataPtr)\\n               \\n               // write 4 characters\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(18, input), 0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(12, input), 0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr( 6, input), 0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n               mstore(resultPtr, shl(248, mload(add(tablePtr, and(        input,  0x3F)))))\\n               resultPtr := add(resultPtr, 1)\\n            }\\n            \\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n        \\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x0c8ad17afea99676d4dbab1857f52a7660b67602a79d03abd0a4c742074bbeb3\",\"license\":\"MIT\"},\"contracts/NftPilarofEd.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"base64-sol/base64.sol\\\";\\n\\ncontract NftPilarofEducation is ERC721 {\\n    string public constant TOKEN_IMAGE_URI =\\n        \\\"https://ipfs.io/ipfs/QmUeXV63VvrYXwD65gtEz6WFCJxo62PHJ5pCuifC6qm6uU\\\";\\n    uint256 internal s_tokenCounter;\\n    mapping(address => bool) public s_hasNft;\\n\\n    constructor()\\n        ERC721(\\\"StreamTrivia\\\",\\\"level 1\\\")\\n            \\n        \\n        \\n    {\\n        s_tokenCounter = 0;\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"data:application/json;base64,\\\";\\n    }\\n\\n    function _mintByAddress(address addr) internal {\\n        _safeMint(addr, s_tokenCounter);\\n        s_tokenCounter = s_tokenCounter + 1;\\n        s_hasNft[addr] = true;\\n    }\\n\\n    function _mintNft() internal {\\n        _safeMint(msg.sender, s_tokenCounter);\\n        s_tokenCounter = s_tokenCounter + 1;\\n        s_hasNft[msg.sender] = true;\\n    }\\n\\n    function tokenURI(\\n        uint256 /* tokenId */\\n    ) public view override returns (string memory) {\\n        return\\n            string(\\n                abi.encodePacked(\\n                    _baseURI(),\\n                    Base64.encode(\\n                        bytes(\\n                            abi.encodePacked(\\n                                '{\\\"name\\\":\\\"',\\n                                name(),\\n                                '\\\", \\\"description\\\":\\\"You captured this NFT as part of the educational Stream!\\\", ',\\n                                '\\\"attributes\\\": [{\\\"trait_type\\\": \\\"skills\\\", \\\"value\\\": 100}], \\\"image\\\":\\\"',\\n                                TOKEN_IMAGE_URI,\\n                                '\\\"}'\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n\\n    function hasNft(address addr) public view returns (bool) {\\n        return s_hasNft[addr];\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\",\"keccak256\":\"0xefd34f1ed3644ad58496aab2c04dc5ea822aa9c6794a2d0b4e05bd7f3f9a3717\",\"license\":\"MIT\"},\"contracts/triviaStream.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./NftPilarofEd.sol\\\";\\n\\ncontract StreamNft is NftPilarofEducation {\\n    constructor() NftPilarofEducation() {}\\n\\n    function mintNft(uint256 value) public {\\n        require(2 + value == 4, \\\"Wrong value!\\\");\\n        _mintNft();\\n    }\\n}\",\"keccak256\":\"0xe125252dda2bafc29517b8e8793a97a147aebc62a183b29a212e626d8a32cace\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":25,"contract":"contracts/triviaStream.sol:StreamNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":27,"contract":"contracts/triviaStream.sol:StreamNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":31,"contract":"contracts/triviaStream.sol:StreamNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":35,"contract":"contracts/triviaStream.sol:StreamNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":39,"contract":"contracts/triviaStream.sol:StreamNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":45,"contract":"contracts/triviaStream.sol:StreamNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2594,"contract":"contracts/triviaStream.sol:StreamNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"},{"astId":2598,"contract":"contracts/triviaStream.sol:StreamNft","label":"s_hasNft","offset":0,"slot":"7","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}